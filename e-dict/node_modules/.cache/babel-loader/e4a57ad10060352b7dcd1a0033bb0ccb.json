{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Desktop\\\\tamil_dict\\\\e-dict\\\\src\\\\speechinput.js\";\nimport React, { Component } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  transcript,\n  listening,\n  resetTranscript,\n  browserSupportsSpeechRecognition\n} = useSpeechRecognition();\n\nclass Speechinput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      speaking: null\n    };\n    this.buttonclicked = this.buttonclicked.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      'speaking': false\n    });\n\n    if (!browserSupportsSpeechRecognition) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Browser doesn't support speech recognition.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  buttonclicked() {\n    const status = this.state.speaking;\n    this.setState({\n      \"speaking\": !status\n    });\n    if (status === false) SpeechRecognition.startListening();else SpeechRecognition.abortListening();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: this.buttonclicked,\n      children: [\" \", this.state.speaking === true ? \"Stop\" : \"Speak\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Speechinput;","map":{"version":3,"sources":["C:/Users/shash/Desktop/tamil_dict/e-dict/src/speechinput.js"],"names":["React","Component","SpeechRecognition","useSpeechRecognition","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","Speechinput","constructor","props","state","speaking","buttonclicked","bind","componentDidMount","setState","status","startListening","abortListening","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;;AAEA,MAAM;AACFC,EAAAA,UADE;AAEFC,EAAAA,SAFE;AAGFC,EAAAA,eAHE;AAIFC,EAAAA;AAJE,IAKFJ,oBAAoB,EALxB;;AAOA,MAAMK,WAAN,SAA0BP,SAA1B,CAAoC;AAEhCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AAAC,kBAAW;AAAZ,KAAd;;AACA,QAAI,CAACT,gCAAL,EAAuC;AACnC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAEDM,EAAAA,aAAa,GAAG;AACZ,UAAMI,MAAM,GAAG,KAAKN,KAAL,CAAWC,QAA1B;AACA,SAAKI,QAAL,CAAc;AAAC,kBAAW,CAACC;AAAb,KAAd;AACA,QAAIA,MAAM,KAAK,KAAf,EAAsBf,iBAAiB,CAACgB,cAAlB,GAAtB,KACKhB,iBAAiB,CAACiB,cAAlB;AACR;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKP,aAApC;AAAA,sBAAqD,KAAKF,KAAL,CAAWC,QAAX,KAAwB,IAAxB,GAA+B,MAA/B,GAAwC,OAA7F;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA5B+B;;AA+BpC,eAAeJ,WAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\nconst {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition\r\n} = useSpeechRecognition();\r\n\r\nclass Speechinput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            speaking: null,\r\n        }\r\n        this.buttonclicked = this.buttonclicked.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({'speaking':false});\r\n        if (!browserSupportsSpeechRecognition) {\r\n            return <span>Browser doesn't support speech recognition.</span>;\r\n        }\r\n    }\r\n\r\n    buttonclicked() {\r\n        const status = this.state.speaking;\r\n        this.setState({\"speaking\":!status});\r\n        if (status === false) SpeechRecognition.startListening();\r\n        else SpeechRecognition.abortListening();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <button type=\"button\" onClick={this.buttonclicked}> {this.state.speaking === true ? \"Stop\" : \"Speak\"} </button>\r\n        );\r\n    }\r\n}  \r\n\r\nexport default Speechinput;"]},"metadata":{},"sourceType":"module"}