{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Desktop\\\\tamil_dict\\\\e-dict\\\\e-dict\\\\src\\\\home.js\";\nimport { Component } from 'react';\nimport Keyboard from 'react-simple-keyboard';\nimport \"react-simple-keyboard/build/css/index.css\";\nimport W from './words.json';\nimport './home.css';\nimport { FaSearch } from 'react-icons/fa';\nimport logo from \"./NITK_LOGO.svg\";\nimport Speechinput from './speechinput.js';\nimport { FaMicrophoneAlt } from 'react-icons/fa';\nimport { FaVolumeUp } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Words = W.Words;\nvar recognition = new window.webkitSpeechRecognition();\nvar final_transcript = '';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = word => {\n      this.setState({\n        \"input\": word\n      });\n      console.log(\"word changed\", word);\n    };\n\n    this.onKeyPress = button => {\n      console.log(\"Button pressed\", button);\n      /**\r\n       * If you want to handle the shift and caps lock buttons\r\n       */\n\n      if (button === \"{shift}\" || button === \"{lock}\") this.handleShift(); //else if (button === \"{enter}\") this.handleSubmit();\n    };\n\n    this.onChangeInput = event => {\n      const input = event.target.value;\n      const want_keyboard = this.state.want_keyboard;\n      console.log(input);\n      this.setState({\n        \"input\": input\n      });\n      if (want_keyboard) this.keyboard.setInput(input);\n    };\n\n    this.handleShift = () => {\n      const layoutName = this.state.layoutName;\n      this.setState({\n        layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      speech_input: false,\n      is_listening: null,\n      audio: null,\n      audio_is_playing: null,\n      audio_path: \"\",\n      image_path: \"\",\n      word_found: null,\n      sentences: [],\n      want_keyboard: null,\n      layoutName: \"default\",\n      display: {\n        'a': '\\u2714:Validate (Shift+Enter)',\n        // check mark - same action as accept\n        'accept': 'accept (Shift+Enter)',\n        'alt': 'Alt:More Characters',\n        'b': '\\u2190:Backspace',\n        // Left arrow (same as &larr;)\n        'bksp': 'Bksp:Backspace',\n        'c': '\\u2716:Escape (Esc)',\n        // big X, close - same action as cancel\n        'cancel': 'Cancel (Esc)',\n        'clear': 'C:Clear',\n        // clear num pad\n        'combo': '\\u00f6:Toggle Combo Keys',\n        'dec': '.:Decimal point',\n        // decimal point for num pad (optional), change '.' to ',' for European format\n        'e': '\\u21b5:Enter',\n        // down, then left arrow - enter symbol\n        'enter': 'Enter:Enter',\n        'lock': '\\u21ea Lock:Caps Lock',\n        // caps lock\n        's': '\\u21e7:Shift',\n        // thick hollow up arrow\n        'shift': 'Shift:Shift',\n        'sign': '\\u00b1:Sign for num pad',\n        // +/- sign for num pad\n        'space': 'Space',\n        't': '\\u21e5:Tab',\n        // right arrow to bar (used since this virtual keyboard works with one directional tabs)\n        'tab': '\\u21e5 Tab:Tab'\n      },\n      layout: {\n        'default': [\n        /* ா\tி\tீ\tு\tூ\tெ\tே\tை\tொ\tோ\tௌ\tஃ  */\n        \"\\u0BBE \\u0BBF \\u0BC0 \\u0BC1 \\u0BC2 \\u0BC6 \\u0BC7 \\u0BC8 \\u0BCA \\u0BCB \\u0BCC \\u0B83 {bksp}\",\n        /*      ஆ     ஈ      ஊ     ஐ    ஏ      ள      ற     ன     ட      ண   ச      ஞ   \\   */\n        \"{tab} \\u0b86 \\u0b88 \\u0b8a \\u0b90 \\u0b8f \\u0bb3 \\u0bb1 \\u0ba9 \\u0b9f \\u0ba3 \\u0b9a \\u0b9e\",\n        /*  அ    இ      உ     ்       எ      க      ப    ம      த      ந      ய  */\n        \"\\u0b85 \\u0b87 \\u0b89 \\u0bcd \\u0b8e \\u0b95 \\u0baa \\u0bae \\u0ba4 \\u0ba8 \\u0baf {enter}\",\n        /*         ஔ    ஒ      ஓ    வ     ங     ல      ர    , . ழ    */\n        \"{shift} \\u0b94 \\u0b93 \\u0b92 \\u0bb5 \\u0b99 \\u0bb2 \\u0bb0 , . \\u0bb4 {shift}\", \"{accept} {alt} {space} {alt} {cancel}\"],\n        'shift': [\n        /* numeric key row */\n        \"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\n        /* sanskrit row */\n\n        /*     ஸ      ஷ        ஜ      ஹ           ஶ்ரீ                       க்ஷ                       */\n        \"{tab} \\u0bb8 \\u0bb7 \\u0b9c \\u0bb9 \\u0bb6 \\u0bcd \\u0bb0 \\u0bc0 \\u0b95 \\u0bcd \\u0bb7 [ ] { }\",\n        /* ௹     ௺    ௸     ஃ  \\u0020 \\u0020 \\u0020 \\\" : ; \\' {enter} */\n        \"\\u0bf9 \\u0bfa \\u0bf8 \\u0b83 \\\" : ; ' {enter}\",\n        /* ௳ ௴ ௵ ௶ ௷ */\n        \"{shift} \\u0bf3 \\u0bf4 \\u0bf5 \\u0bf6 \\u0bf7 / {shift}\", \"{accept} {alt} {space} {alt} {cancel}\"]\n      }\n    };\n    this.searchword = this.searchword.bind(this);\n    this.togglevirtualkeyboard = this.togglevirtualkeyboard.bind(this);\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.resettextbox = this.resettextbox.bind(this);\n    this.playpauseaudio = this.playpauseaudio.bind(this);\n    this.stopaudio = this.stopaudio.bind(this);\n    this.startButton = this.startButton.bind(this);\n    this.inputtexttospeech = this.inputtexttospeech.bind(this); //this.handleChange = this.handleChange.bind(this);\n    //hdhjthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      \"input\": \"\",\n      \"want_keyboard\": false,\n      \"found\": false,\n      \"audio_is_playing\": false,\n      \"is_listening\": false\n    });\n    recognition.lang = 'ta-IN';\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    final_transcript = '';\n  }\n\n  searchword() {\n    var flag = false;\n    var i;\n    const keyword = this.state.input;\n    console.log(keyword);\n\n    for (i in Words) {\n      if (Words[i]['word'] === keyword) {\n        this.setState({\n          \"word_found\": true,\n          \"audio_path\": Words[i].audio,\n          \"sentences\": Words[i].sentences,\n          \"audio\": new Audio(Words[i].audio),\n          \"audio_is_playing\": false,\n          \"image_path\": Words[i].image\n        });\n        flag = true;\n        break;\n      }\n    }\n\n    if (flag === false) {\n      this.setState({\n        \"word_found\": false\n      });\n    } else {\n      this.setState({\n        \"want_keyboard\": false\n      });\n    }\n\n    console.log(flag);\n  }\n\n  resettextbox() {\n    this.setState({\n      \"input\": \"\",\n      \"audio_path\": \"\",\n      \"sentences\": [],\n      \"word_found\": null\n    });\n    final_transcript = '';\n  }\n\n  togglevirtualkeyboard() {\n    var flag = this.state.want_keyboard;\n\n    if (flag === true) {\n      flag = false;\n    } else {\n      flag = true;\n    }\n\n    this.setState({\n      \"want_keyboard\": flag\n    });\n  }\n\n  playpauseaudio() {\n    const flag = this.state.audio_is_playing;\n\n    if (!flag) {\n      this.state.audio.play();\n      console.log(\"playing\");\n    } else {\n      this.state.audio.pause();\n      console.log(\"paused\");\n    }\n\n    this.setState({\n      \"audio_is_playing\": !flag\n    });\n  }\n\n  stopaudio() {\n    this.state.audio.load();\n    this.setState({\n      \"audio_is_playing\": false\n    });\n  }\n\n  inputtexttospeech() {\n    window.responsiveVoice.speak(this.state.input, \"Tamil Female\", {\n      pitch: 0.95,\n      volume: 25,\n      rate: 0.65\n    });\n  }\n\n  texttospeech(event) {\n    console.log(event);\n    let message = event.target.id;\n    console.log(message); //message = \"hohoho\"\n\n    window.responsiveVoice.speak(message, \"Tamil Female\", {\n      pitch: 1,\n      volume: 25,\n      rate: 0.65\n    });\n  }\n\n  displaySentences() {\n    const sentences = this.state.sentences;\n    const image_path = this.state.image_path;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"matter-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"sentence-div\",\n          children: sentences.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"sentence\",\n            children: [item, /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"container-mic\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                id: item,\n                class: \"btn2\",\n                type: \"button\",\n                onClick: event => this.texttospeech(event),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FaVolumeUp, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"image-div\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image_path,\n            alt: \"image for word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"button\",\n            onClick: this.playpauseaudio,\n            children: [\" \", this.state.audio_is_playing === true ? \"Pause\" : \"Play\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"button\",\n            onClick: this.stopaudio,\n            children: \" Stop \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  startButton() {\n    var element = document.getElementById(\"mic\");\n\n    if (element.classList.length == 0) {\n      element.classList.add(\"pulse-ring\");\n    } else {\n      element.classList.remove(\"pulse-ring\");\n    }\n\n    const is_listening = this.state.is_listening;\n    this.setState({\n      'is_listening': !is_listening,\n      'speech_input': true\n    });\n\n    if (is_listening === true) {\n      recognition.stop();\n      console.log(final_transcript);\n      this.setState({\n        'input': final_transcript\n      });\n      final_transcript = '';\n      return;\n    }\n\n    this.resettextbox();\n    recognition.start();\n  }\n\n  render() {\n    recognition.onresult = function (event) {\n      if (typeof event.results == 'undefined') {\n        recognition.onend = null;\n        recognition.stop();\n        return;\n      }\n\n      for (var i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          final_transcript += event.results[i][0].transcript;\n        }\n      }\n\n      var length = final_transcript.length;\n\n      if (length > 0) {\n        let temp = final_transcript.split(\"\");\n        let l = temp.length;\n\n        if (temp[l - 1] === '.') {\n          temp[l - 1] = '';\n          final_transcript = temp.toString();\n\n          for (let i = 0; i < l; i++) {\n            final_transcript = final_transcript.replace(',', '');\n          }\n        }\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"logo\",\n          children: \"E- Dict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://unpkg.com/ionicons@5.0.0/dist/ionicons.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://code.responsivevoice.org/responsivevoice.js?key=dNk2mo6M\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), this.state.input !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-mic\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"speech\",\n            class: \"btn2\",\n            type: \"button\",\n            onClick: this.inputtexttospeech,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"mic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FaVolumeUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"_\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 30\n      }, this), this.state.want_keyboard === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"search-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"search-txt2\",\n            value: this.state.input,\n            placeholder: \"Tap on the virtual keyboard to start\",\n            onChange: this.onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"search-btn\",\n            onClick: this.searchword,\n            children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n          keyboardRef: r => this.keyboard = r,\n          layout: this.state.layout,\n          layoutName: this.state.layoutName,\n          display: this.state.display,\n          onChange: this.onChange,\n          disableButtonHold: \"false\",\n          onKeyPress: this.onKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"button\",\n            type: \"button\",\n            onClick: this.togglevirtualkeyboard,\n            children: \"Close Keyboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"search-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.searchword,\n            action: \"#\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"search-txt\",\n              type: \"text\",\n              placeholder: \"Enter a word\",\n              value: this.state.input,\n              onChange: this.onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"search-btn\",\n            onClick: this.searchword,\n            children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container-mic\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"speech\",\n              class: \"btn\",\n              type: \"button\",\n              onClick: this.startButton,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"mic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FaMicrophoneAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"button\",\n            type: \"button\",\n            onClick: this.togglevirtualkeyboard,\n            children: \"View Keyboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"button\",\n            type: \"button\",\n            onClick: this.searchword,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"button\",\n            type: \"button\",\n            onClick: this.resettextbox,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), this.state.word_found === true ? this.displaySentences() : this.state.word_found === null ? \" \" : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"no-results\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"search-message-empty-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"search-message-empty-decal\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"search-message-empty-decal-eyes\",\n                children: \":\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"(\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              class: \"search-message-empty-message\",\n              children: \"Nope, word not found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"watermark\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"nitk logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Developed by Praneeth & Shashi Prakash,IT Dept., NITK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/shash/Desktop/tamil_dict/e-dict/e-dict/src/home.js"],"names":["Component","Keyboard","W","FaSearch","Speechinput","FaMicrophoneAlt","FaVolumeUp","Words","recognition","window","webkitSpeechRecognition","final_transcript","Home","constructor","props","onChange","word","setState","console","log","onKeyPress","button","handleShift","onChangeInput","event","input","target","value","want_keyboard","state","keyboard","setInput","layoutName","speech_input","is_listening","audio","audio_is_playing","audio_path","image_path","word_found","sentences","display","layout","searchword","bind","togglevirtualkeyboard","resettextbox","playpauseaudio","stopaudio","startButton","inputtexttospeech","componentDidMount","lang","continuous","interimResults","flag","i","keyword","Audio","image","play","pause","load","responsiveVoice","speak","pitch","volume","rate","texttospeech","message","id","displaySentences","map","item","element","document","getElementById","classList","length","add","remove","stop","start","render","onresult","results","onend","resultIndex","isFinal","transcript","temp","split","l","toString","replace","color","r","logo"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport \"react-simple-keyboard/build/css/index.css\";\r\nimport W from './words.json';\r\nimport './home.css';\r\nimport {FaSearch} from 'react-icons/fa';\r\nimport logo from './NITK_LOGO.svg';\r\nimport Speechinput from './speechinput.js';\r\nimport { FaMicrophoneAlt } from 'react-icons/fa'\r\nimport { FaVolumeUp } from 'react-icons/fa'\r\n\r\n\r\nconst Words = W.Words; \r\n\r\nvar recognition = new window.webkitSpeechRecognition();\r\nvar final_transcript = '';\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            input: \"\",\r\n            speech_input: false,\r\n            is_listening :null,\r\n            audio : null,\r\n            audio_is_playing : null,\r\n            audio_path:\"\",\r\n            image_path:\"\",\r\n            word_found:null,\r\n            sentences:[],\r\n            want_keyboard : null,\r\n            layoutName: \"default\",\r\n            display : {\r\n                'a': '\\u2714:Validate (Shift+Enter)', // check mark - same action as accept\r\n                'accept': 'accept (Shift+Enter)',\r\n                'alt': 'Alt:More Characters',\r\n                'b': '\\u2190:Backspace',    // Left arrow (same as &larr;)\r\n                'bksp': 'Bksp:Backspace',\r\n                'c': '\\u2716:Escape (Esc)', // big X, close - same action as cancel\r\n                'cancel': 'Cancel (Esc)',\r\n                'clear': 'C:Clear',             // clear num pad\r\n                'combo': '\\u00f6:Toggle Combo Keys',\r\n                'dec': '.:Decimal point',           // decimal point for num pad (optional), change '.' to ',' for European format\r\n                'e': '\\u21b5:Enter',        // down, then left arrow - enter symbol\r\n                'enter': 'Enter:Enter',\r\n                'lock': '\\u21ea Lock:Caps Lock', // caps lock\r\n                's': '\\u21e7:Shift',        // thick hollow up arrow\r\n                'shift': 'Shift:Shift',\r\n                'sign': '\\u00b1:Sign for num pad',  // +/- sign for num pad\r\n                'space': 'Space',\r\n                't': '\\u21e5:Tab',          // right arrow to bar (used since this virtual keyboard works with one directional tabs)\r\n                'tab': '\\u21e5 Tab:Tab'\r\n                },\r\n            layout : {\r\n                'default': [\r\n                  /* ா\tி\tீ\tு\tூ\tெ\tே\tை\tொ\tோ\tௌ\tஃ  */\r\n                  \"\\u0BBE \\u0BBF \\u0BC0 \\u0BC1 \\u0BC2 \\u0BC6 \\u0BC7 \\u0BC8 \\u0BCA \\u0BCB \\u0BCC \\u0B83 {bksp}\",\r\n                  /*      ஆ     ஈ      ஊ     ஐ    ஏ      ள      ற     ன     ட      ண   ச      ஞ   \\   */\r\n                  \"{tab} \\u0b86 \\u0b88 \\u0b8a \\u0b90 \\u0b8f \\u0bb3 \\u0bb1 \\u0ba9 \\u0b9f \\u0ba3 \\u0b9a \\u0b9e\",\r\n                  /*  அ    இ      உ     ்       எ      க      ப    ம      த      ந      ய  */\r\n                  \"\\u0b85 \\u0b87 \\u0b89 \\u0bcd \\u0b8e \\u0b95 \\u0baa \\u0bae \\u0ba4 \\u0ba8 \\u0baf {enter}\",\r\n                  /*         ஔ    ஒ      ஓ    வ     ங     ல      ர    , . ழ    */\r\n                  \"{shift} \\u0b94 \\u0b93 \\u0b92 \\u0bb5 \\u0b99 \\u0bb2 \\u0bb0 , . \\u0bb4 {shift}\",\r\n                  \"{accept} {alt} {space} {alt} {cancel}\"\r\n                ],\r\n                'shift': [\r\n                    /* numeric key row */\r\n                    \"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\r\n                    /* sanskrit row */\r\n                    /*     ஸ      ஷ        ஜ      ஹ           ஶ்ரீ                       க்ஷ                       */\r\n                    \"{tab} \\u0bb8 \\u0bb7 \\u0b9c \\u0bb9 \\u0bb6 \\u0bcd \\u0bb0 \\u0bc0 \\u0b95 \\u0bcd \\u0bb7 [ ] { }\",\r\n                    /* ௹     ௺    ௸     ஃ  \\u0020 \\u0020 \\u0020 \\\" : ; \\' {enter} */\r\n                    \"\\u0bf9 \\u0bfa \\u0bf8 \\u0b83 \\\" : ; ' {enter}\",\r\n                    /* ௳ ௴ ௵ ௶ ௷ */\r\n                    \"{shift} \\u0bf3 \\u0bf4 \\u0bf5 \\u0bf6 \\u0bf7 / {shift}\",\r\n                    \"{accept} {alt} {space} {alt} {cancel}\"\r\n                ]\r\n            }\r\n        }\r\n        this.searchword= this.searchword.bind(this);\r\n        this.togglevirtualkeyboard= this.togglevirtualkeyboard.bind(this);\r\n        this.onChangeInput= this.onChangeInput.bind(this);\r\n        this.resettextbox= this.resettextbox.bind(this);\r\n        this.playpauseaudio= this.playpauseaudio.bind(this);\r\n        this.stopaudio= this.stopaudio.bind(this);\r\n        this.startButton = this.startButton.bind(this);\r\n        this.inputtexttospeech = this.inputtexttospeech.bind(this);\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        //hdhjthis.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\"input\":\"\",\"want_keyboard\":false,\"found\":false,\"audio_is_playing\":false,\"is_listening\":false});\r\n        recognition.lang='ta-IN';\r\n        recognition.continuous =true;\r\n        recognition.interimResults=true;\r\n        final_transcript = '';\r\n    }\r\n\r\n    onChange = word => {\r\n        this.setState({ \"input\":word });\r\n        console.log(\"word changed\", word);\r\n    };\r\n    \r\n    onKeyPress = button => {\r\n    console.log(\"Button pressed\", button);\r\n\r\n    /**\r\n     * If you want to handle the shift and caps lock buttons\r\n     */\r\n    if (button === \"{shift}\" || button === \"{lock}\") this.handleShift();\r\n    //else if (button === \"{enter}\") this.handleSubmit();\r\n    };\r\n\r\n    onChangeInput = event => {\r\n        const input = event.target.value;\r\n        const want_keyboard = this.state.want_keyboard;\r\n        console.log(input);\r\n        this.setState({ \"input\":input });\r\n        if (want_keyboard) this.keyboard.setInput(input);\r\n    };\r\n\r\n    handleShift = () => {\r\n        const layoutName = this.state.layoutName;\r\n    \r\n        this.setState({\r\n          layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\r\n        });\r\n      };\r\n\r\n    searchword() {\r\n        var flag = false;\r\n        var i;\r\n        const keyword = this.state.input;\r\n        console.log(keyword);\r\n        for (i in Words){\r\n            if (Words[i]['word'] === keyword) {\r\n                this.setState({\r\n                    \"word_found\":true,\r\n                    \"audio_path\":Words[i].audio,\r\n                    \"sentences\":Words[i].sentences,\r\n                    \"audio\":new Audio(Words[i].audio),\r\n                    \"audio_is_playing\":false,\r\n                    \"image_path\" : Words[i].image\r\n                });\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        if (flag === false) {\r\n            this.setState({\"word_found\":false});\r\n        }\r\n        else{\r\n            this.setState({\"want_keyboard\":false});\r\n        }\r\n        console.log(flag);\r\n    }\r\n\r\n    resettextbox() {\r\n        this.setState({\"input\":\"\",\"audio_path\":\"\",\"sentences\":[],\"word_found\":null});\r\n        final_transcript = '';\r\n    }\r\n\r\n    togglevirtualkeyboard(){\r\n        var flag = this.state.want_keyboard;\r\n        if (flag === true) {\r\n            flag = false;\r\n        } else {\r\n            flag = true;\r\n        }\r\n        this.setState({\"want_keyboard\":flag});\r\n    }\r\n    \r\n    playpauseaudio () {\r\n        const flag = this.state.audio_is_playing;\r\n        if (!flag) {\r\n            this.state.audio.play();\r\n            console.log(\"playing\");\r\n        } else {\r\n            this.state.audio.pause();\r\n            console.log(\"paused\");\r\n        }\r\n        this.setState({\"audio_is_playing\":!flag});\r\n    }\r\n\r\n    stopaudio () {\r\n        this.state.audio.load();\r\n        this.setState({\"audio_is_playing\":false});\r\n    }\r\n    inputtexttospeech() {\r\n        window.responsiveVoice.speak(this.state.input, \"Tamil Female\", { pitch: 0.95, volume: 25, rate: 0.65 });\r\n    }\r\n\r\n    texttospeech(event) {\r\n        console.log(event)\r\n        let message = event.target.id;\r\n        console.log(message)\r\n        //message = \"hohoho\"\r\n        window.responsiveVoice.speak(message, \"Tamil Female\", { pitch: 1, volume: 25, rate: 0.65 });\r\n    }\r\n\r\n    displaySentences() {\r\n        const sentences = this.state.sentences;\r\n        const image_path = this.state.image_path;\r\n        return (\r\n            <>\r\n            <div class=\"matter-div\">\r\n                <div class=\"sentence-div\">\r\n                    {sentences.map((item) => (\r\n                        <div class=\"sentence\">\r\n                            {item}\r\n                            <div class=\"container-mic\">\r\n                                <button id={item} class=\"btn2\" type=\"button\" onClick={(event) => this.texttospeech(event)}>\r\n                                    <div className='mic'></div>\r\n                                    <FaVolumeUp />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div class=\"image-div\">\r\n                        <img src={image_path} alt=\"image for word\"/>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"wrap\">\r\n                    <a class=\"button\"  onClick={this.playpauseaudio} > {this.state.audio_is_playing === true ? \"Pause\" : \"Play\"} </a>\r\n                </div>\r\n                <div class=\"wrap\">\r\n                    <a class=\"button\"  onClick={this.stopaudio} > Stop </a>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    startButton() {\r\n        var element = document.getElementById(\"mic\");\r\n        if (element.classList.length == 0) {\r\n            element.classList.add(\"pulse-ring\");\r\n        }\r\n        else {\r\n            element.classList.remove(\"pulse-ring\");\r\n        }\r\n        const is_listening = this.state.is_listening;\r\n        this.setState({'is_listening':!is_listening,'speech_input':true});\r\n        if (is_listening ===  true) {\r\n            recognition.stop();\r\n            console.log(final_transcript);\r\n            this.setState({'input':final_transcript});\r\n            final_transcript = '';\r\n            return;\r\n        }\r\n        this.resettextbox();\r\n        recognition.start();\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        recognition.onresult = function(event) {\r\n            if (typeof(event.results) == 'undefined') {\r\n                recognition.onend = null;\r\n                recognition.stop();\r\n                return;\r\n            }\r\n            for (var i = event.resultIndex; i < event.results.length; ++i) {\r\n                if (event.results[i].isFinal) {\r\n                    final_transcript += event.results[i][0].transcript;\r\n                }\r\n            }\r\n            var length = final_transcript.length;\r\n            if (length>0) {\r\n                let temp = final_transcript.split(\"\");\r\n                let l = temp.length;\r\n                if (temp[l-1] === '.') {\r\n                    temp[l-1] = '';\r\n                    final_transcript = temp.toString();\r\n                    for (let i=0;i< l;i++) {\r\n                        final_transcript = final_transcript.replace(',','');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return(\r\n            <div class=\"container\">\r\n                <header>\r\n                    <h1 class=\"logo\">E- Dict</h1>\r\n                </header>\r\n                <script src=\"https://unpkg.com/ionicons@5.0.0/dist/ionicons.js\"></script>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n                <script src=\"https://code.responsivevoice.org/responsivevoice.js?key=dNk2mo6M\"></script>\r\n                \r\n                { this.state.input !== \"\"  ? \r\n                    <div style={{display:\"inline-flex\"}}>\r\n                        <h1>{this.state.input}</h1>\r\n                        <div class=\"container-mic\">\r\n                            <button id=\"speech\" class=\"btn2\" type=\"button\" onClick={this.inputtexttospeech}>\r\n                                <div id='mic'></div>\r\n                                <FaVolumeUp />\r\n                            </button>\r\n                        </div>\r\n                    </div> : <h1 style={{color:\"white\"}}>_</h1> }\r\n                \r\n                {this.state.want_keyboard === true ? \r\n                <div>\r\n                    <div class=\"search-box\">\r\n                        <input\r\n                            class = \"search-txt2\"\r\n                            value={this.state.input}\r\n                            placeholder={\"Tap on the virtual keyboard to start\"}\r\n                            onChange={this.onChangeInput}\r\n                        />\r\n                        <button type=\"button\" class=\"search-btn\" onClick={this.searchword}>\r\n                            <FaSearch/>\r\n                        </button>\r\n                    </div>\r\n                        <Keyboard\r\n                            keyboardRef={r => (this.keyboard = r)}\r\n                            layout={this.state.layout}\r\n                            layoutName={this.state.layoutName}\r\n                            display={this.state.display}\r\n                            onChange={this.onChange}\r\n                            disableButtonHold = \"false\"\r\n                            onKeyPress={this.onKeyPress}\r\n                        />\r\n                        <div class=\"wrap\">\r\n                            <a class=\"button\" type=\"button\"  onClick={this.togglevirtualkeyboard}>Close Keyboard</a>\r\n                        </div>\r\n                </div>\r\n\r\n                :   <>\r\n                        <div class=\"search-box\">\r\n                            <form onSubmit={this.searchword} action='#'>\r\n                                <input class=\"search-txt\" type=\"text\" placeholder=\"Enter a word\" value={this.state.input} onChange={this.onChangeInput}></input>\r\n                            </form>\r\n                            <button type=\"button\" class=\"search-btn\" onClick={this.searchword}>\r\n                                <FaSearch/>\r\n                            </button>\r\n\r\n                            <div class=\"container-mic\">\r\n                                <button id=\"speech\" class=\"btn\" type=\"button\" onClick={this.startButton}>\r\n                                    <div id='mic'></div>\r\n                                    <FaMicrophoneAlt />\r\n                                </button>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div class=\"wrap\">\r\n                            <a class=\"button\" type=\"button\"  onClick={this.togglevirtualkeyboard}>View Keyboard</a>\r\n                        </div>\r\n                    </>\r\n                }\r\n                <br></br>\r\n                <div>\r\n                    <div class=\"wrap\">\r\n                        <a class=\"button\" type=\"button\"  onClick={this.searchword}>Search</a>\r\n                    </div>\r\n                    <div class=\"wrap\">\r\n                        <a class=\"button\" type=\"button\"  onClick={this.resettextbox}>Reset</a>\r\n                    </div>\r\n                </div>\r\n                {this.state.word_found === true ? this.displaySentences() \r\n                : this.state.word_found===null?\" \"\r\n                        : <>\r\n                        <div class=\"no-results\">\r\n                            <div class=\"search-message-empty-container\">\r\n                                <span class=\"search-message-empty-decal\">\r\n                                    <span class=\"search-message-empty-decal-eyes\">:</span>\r\n                                    <span>(</span>\r\n                                </span>\r\n                                <h2 class=\"search-message-empty-message\">\r\n                                    Nope, word not found.\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n                        </>\r\n                }\r\n                \r\n                <div class=\"watermark\">\r\n                    <img src={logo} alt=\"nitk logo\"/>\r\n                    <span>Developed by Praneeth & Shashi Prakash,IT Dept., NITK</span>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}