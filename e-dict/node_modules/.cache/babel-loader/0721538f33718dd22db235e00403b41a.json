{"ast":null,"code":"/*! jQuery UI Virtual Keyboard v1.30.3 */\n\n/*\r\nAuthor: Jeremy Satterfield\r\nMaintained: Rob Garrison (Mottie on github)\r\nLicensed under the MIT License\r\nAn on-screen virtual keyboard embedded within the browser window which\r\nwill popup when a specified entry field is focused. The user can then\r\ntype and preview their input before Accepting or Canceling.\r\nThis plugin adds default class names to match jQuery UI theme styling.\r\nBootstrap & custom themes may also be applied - See\r\nhttps://github.com/Mottie/Keyboard#themes\r\nRequires:\r\njQuery v1.4.3+\r\nCaret plugin (included)\r\nOptional:\r\njQuery UI (position utility only) & CSS theme\r\njQuery mousewheel\r\nSetup/Usage:\r\nPlease refer to https://github.com/Mottie/Keyboard/wiki\r\n-----------------------------------------\r\nCaret code modified from jquery.caret.1.02.js\r\nLicensed under the MIT License:\r\nhttp://www.opensource.org/licenses/mit-license.php\r\n-----------------------------------------\r\n*/\n\n/*jshint browser:true, jquery:true, unused:false */\n\n/*global require:false, define:false, module:false */\n;\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(require('jquery'));\n  } else {\n    factory(jQuery);\n  }\n})(function ($) {\n  'use strict';\n\n  var $keyboard = $.keyboard = function (el, options) {\n    var o,\n        base = this;\n    base.version = '1.30.3'; // Access to jQuery and DOM versions of element\n\n    base.$el = $(el);\n    base.el = el; // Add a reverse reference to the DOM object\n\n    base.$el.data('keyboard', base);\n\n    base.init = function () {\n      base.initialized = false;\n      base.isTextArea = base.el.nodeName.toLowerCase() === 'textarea';\n      base.isInput = base.el.nodeName.toLowerCase() === 'input'; // detect contenteditable\n\n      base.isContentEditable = !base.isTextArea && !base.isInput && base.el.isContentEditable;\n      var k,\n          position,\n          tmp,\n          kbcss = $keyboard.css,\n          kbevents = $keyboard.events;\n\n      if (base.isInput && $.inArray((base.el.type || '').toLowerCase(), $keyboard.supportedInputTypes) < 0) {\n        throw new TypeError('Input of type \"' + base.el.type + '\" is not supported; use type text, search, URL, tel or password');\n      }\n\n      base.settings = options || {}; // shallow copy position to prevent performance issues; see #357\n\n      if (options && options.position) {\n        position = $.extend({}, options.position);\n        options.position = null;\n      }\n\n      base.options = o = $.extend(true, {}, $keyboard.defaultOptions, options);\n\n      if (position) {\n        o.position = position;\n        options.position = position;\n      } // keyboard is active (not destroyed);\n\n\n      base.el.active = true; // unique keyboard namespace\n\n      base.namespace = '.keyboard' + Math.random().toString(16).slice(2); // extension namespaces added here (to unbind listeners on base.$el upon destroy)\n\n      base.extensionNamespace = []; // Shift and Alt key toggles, sets is true if a layout has more than one keyset\n      // used for mousewheel message\n\n      base.shiftActive = base.altActive = base.metaActive = base.sets = base.capsLock = false; // Class names of the basic key set - meta keysets are handled by the keyname\n\n      base.rows = ['', '-shift', '-alt', '-alt-shift'];\n      base.inPlaceholder = base.$el.attr('placeholder') || ''; // html 5 placeholder/watermark\n\n      base.watermark = $keyboard.watermark && base.inPlaceholder !== ''; // convert mouse repeater rate (characters per second) into a time in milliseconds.\n\n      base.repeatTime = 1000 / (o.repeatRate || 20); // delay in ms to prevent mousedown & touchstart from both firing events at the same time\n\n      o.preventDoubleEventTime = o.preventDoubleEventTime || 100; // flag indication that a keyboard is open\n\n      base.isOpen = false; // is mousewheel plugin loaded?\n\n      base.wheel = typeof $.fn.mousewheel === 'function'; // special character in regex that need to be escaped\n\n      base.escapeRegex = /[-\\/\\\\^$*+?.()|[\\]{}]/g; // keyCode of keys always allowed to be typed\n\n      k = $keyboard.keyCodes; // base.alwaysAllowed = [20,33,34,35,36,37,38,39,40,45,46];\n\n      base.alwaysAllowed = [k.capsLock, k.pageUp, k.pageDown, k.end, k.home, k.left, k.up, k.right, k.down, k.insert, k.delete];\n      base.$keyboard = []; // keyboard enabled; set to false on destroy\n\n      base.enabled = true;\n      base.checkCaret = o.lockInput || $keyboard.checkCaretSupport(); // disable problematic usePreview for contenteditable\n\n      if (base.isContentEditable) {\n        o.usePreview = false;\n      }\n\n      base.last = {\n        start: 0,\n        end: 0,\n        key: '',\n        val: '',\n        preVal: '',\n        layout: '',\n        virtual: true,\n        keyset: [false, false, false],\n        // [shift, alt, meta]\n        wheel_$Keys: [],\n        wheelIndex: 0,\n        wheelLayers: []\n      }; // used when building the keyboard - [keyset element, row, index]\n\n      base.temp = ['', 0, 0]; // Callbacks\n\n      $.each([kbevents.kbInit, kbevents.kbBeforeVisible, kbevents.kbVisible, kbevents.kbHidden, kbevents.inputCanceled, kbevents.inputAccepted, kbevents.kbBeforeClose, kbevents.inputRestricted], function (i, callback) {\n        if (typeof o[callback] === 'function') {\n          // bind callback functions within options to triggered events\n          base.$el.bind(callback + base.namespace + 'callbacks', o[callback]);\n        }\n      }); // Close with esc key & clicking outside\n\n      if (o.alwaysOpen) {\n        o.stayOpen = true;\n      }\n\n      tmp = $(document);\n\n      if (base.el.ownerDocument !== document) {\n        tmp = tmp.add(base.el.ownerDocument);\n      }\n\n      var bindings = 'keyup checkkeyboard mousedown touchstart ';\n\n      if (o.closeByClickEvent) {\n        bindings += 'click ';\n      } // debounce bindings... see #542\n\n\n      tmp.bind(bindings.split(' ').join(base.namespace + ' '), function (e) {\n        clearTimeout(base.timer3);\n        base.timer3 = setTimeout(function () {\n          base.checkClose(e);\n        }, 1);\n      }); // Display keyboard on focus\n\n      base.$el.addClass(kbcss.input + ' ' + o.css.input).attr({\n        'aria-haspopup': 'true',\n        'role': 'textbox'\n      }); // set lockInput if the element is readonly; or make the element readonly if lockInput is set\n\n      if (o.lockInput || base.el.readOnly) {\n        o.lockInput = true;\n        base.$el.addClass(kbcss.locked).attr({\n          'readonly': 'readonly'\n        });\n      } // add disabled/readonly class - dynamically updated on reveal\n\n\n      if (base.isUnavailable()) {\n        base.$el.addClass(kbcss.noKeyboard);\n      }\n\n      if (o.openOn) {\n        base.bindFocus();\n      } // Add placeholder if not supported by the browser\n\n\n      if (!base.watermark && base.getValue(base.$el) === '' && base.inPlaceholder !== '' && base.$el.attr('placeholder') !== '') {\n        // css watermark style (darker text)\n        base.$el.addClass(kbcss.placeholder);\n        base.setValue(base.inPlaceholder, base.$el);\n      }\n\n      base.$el.trigger(kbevents.kbInit, [base, base.el]); // initialized with keyboard open\n\n      if (o.alwaysOpen) {\n        base.reveal();\n      }\n\n      base.initialized = true;\n    };\n\n    base.toggle = function () {\n      if (!base.hasKeyboard()) {\n        return;\n      }\n\n      var $toggle = base.$keyboard.find('.' + $keyboard.css.keyToggle),\n          locked = !base.enabled; // prevent physical keyboard from working\n\n      base.preview.readonly = locked || base.options.lockInput; // disable all buttons\n\n      base.$keyboard.toggleClass($keyboard.css.keyDisabled, locked).find('.' + $keyboard.css.keyButton).not($toggle).attr('aria-disabled', locked).each(function () {\n        this.disabled = locked;\n      });\n      $toggle.toggleClass($keyboard.css.keyDisabled, locked); // stop auto typing\n\n      if (locked && base.typing_options) {\n        base.typing_options.text = '';\n      } // allow chaining\n\n\n      return base;\n    };\n\n    base.setCurrent = function () {\n      var kbcss = $keyboard.css,\n          // close any \"isCurrent\" keyboard (just in case they are always open)\n      $current = $('.' + kbcss.isCurrent),\n          kb = $current.data('keyboard'); // close keyboard, if not self\n\n      if (!$.isEmptyObject(kb) && kb.el !== base.el) {\n        kb.close(kb.options.autoAccept ? 'true' : false);\n      }\n\n      $current.removeClass(kbcss.isCurrent); // ui-keyboard-has-focus is applied in case multiple keyboards have\n      // alwaysOpen = true and are stacked\n\n      $('.' + kbcss.hasFocus).removeClass(kbcss.hasFocus);\n      base.$el.addClass(kbcss.isCurrent);\n      base.$preview.focus();\n      base.$keyboard.addClass(kbcss.hasFocus);\n      base.isCurrent(true);\n      base.isOpen = true;\n    };\n\n    base.isUnavailable = function () {\n      return base.$el.is(':disabled') || !base.options.activeOnReadonly && base.$el.attr('readonly') && !base.$el.hasClass($keyboard.css.locked);\n    };\n\n    base.isCurrent = function (set) {\n      var cur = $keyboard.currentKeyboard || false;\n\n      if (set) {\n        cur = $keyboard.currentKeyboard = base.el;\n      } else if (set === false && cur === base.el) {\n        cur = $keyboard.currentKeyboard = '';\n      }\n\n      return cur === base.el;\n    };\n\n    base.hasKeyboard = function () {\n      return base.$keyboard && base.$keyboard.length > 0;\n    };\n\n    base.isVisible = function () {\n      return base.hasKeyboard() ? base.$keyboard.is(':visible') : false;\n    };\n\n    base.setFocus = function () {\n      var $el = base.$preview || base.$el;\n\n      if (!o.noFocus) {\n        $el.focus();\n      }\n\n      if (base.isContentEditable) {\n        $keyboard.setEditableCaret($el, base.last.start, base.last.end);\n      } else {\n        $keyboard.caret($el, base.last);\n      }\n    };\n\n    base.focusOn = function () {\n      if (!base || !base.el.active) {\n        // keyboard was destroyed\n        return;\n      }\n\n      if (!base.isVisible()) {\n        clearTimeout(base.timer);\n        base.reveal();\n      } else {\n        // keyboard already open, make it the current keyboard\n        base.setCurrent();\n      }\n    }; // add redraw method to make API more clear\n\n\n    base.redraw = function (layout) {\n      if (layout) {\n        // allow updating the layout by calling redraw\n        base.options.layout = layout;\n      } // update keyboard after a layout change\n\n\n      if (base.$keyboard.length) {\n        base.last.preVal = '' + base.last.val;\n        base.saveLastChange();\n        base.setValue(base.last.val, base.$el);\n        base.removeKeyboard();\n        base.shiftActive = base.altActive = base.metaActive = false;\n      }\n\n      base.isOpen = o.alwaysOpen;\n      base.reveal(true);\n      return base;\n    };\n\n    base.reveal = function (redraw) {\n      var temp,\n          alreadyOpen = base.isOpen,\n          kbcss = $keyboard.css;\n      base.opening = !alreadyOpen; // remove all 'extra' keyboards by calling close function\n\n      $('.' + kbcss.keyboard).not('.' + kbcss.alwaysOpen).each(function () {\n        var kb = $(this).data('keyboard');\n\n        if (!$.isEmptyObject(kb)) {\n          // this closes previous keyboard when clicking another input - see #515\n          kb.close(kb.options.autoAccept ? 'true' : false);\n        }\n      }); // Don't open if disabled\n\n      if (base.isUnavailable()) {\n        return;\n      }\n\n      base.$el.removeClass(kbcss.noKeyboard); // Unbind focus to prevent recursion - openOn may be empty if keyboard is opened externally\n\n      if (o.openOn) {\n        base.$el.unbind($.trim((o.openOn + ' ').split(/\\s+/).join(base.namespace + ' ')));\n      } // build keyboard if it doesn't exist; or attach keyboard if it was removed, but not cleared\n\n\n      if (!base.$keyboard || base.$keyboard && (!base.$keyboard.length || $.contains(base.el.ownerDocument.body, base.$keyboard[0]))) {\n        base.startup();\n      } // clear watermark\n\n\n      if (!base.watermark && base.getValue() === base.inPlaceholder) {\n        base.$el.removeClass(kbcss.placeholder);\n        base.setValue('', base.$el);\n      } // save starting content, in case we cancel\n\n\n      base.originalContent = base.isContentEditable ? base.$el.html() : base.getValue(base.$el);\n\n      if (base.el !== base.preview && !base.isContentEditable) {\n        base.setValue(base.originalContent);\n      } // disable/enable accept button\n\n\n      if (o.acceptValid && o.checkValidOnInit) {\n        base.checkValid();\n      }\n\n      if (o.resetDefault) {\n        base.shiftActive = base.altActive = base.metaActive = false;\n      }\n\n      base.showSet(); // beforeVisible event\n\n      if (!base.isVisible()) {\n        base.$el.trigger($keyboard.events.kbBeforeVisible, [base, base.el]);\n      }\n\n      if (base.initialized || o.initialFocus || !o.initialFocus && base.$el.hasClass($keyboard.css.initialFocus)) {\n        base.setCurrent();\n      } // update keyboard - enabled or disabled?\n\n\n      base.toggle(); // show keyboard\n\n      base.$keyboard.show(); // adjust keyboard preview window width - save width so IE won't keep expanding (fix issue #6)\n\n      if (o.usePreview && $keyboard.msie) {\n        if (typeof base.width === 'undefined') {\n          base.$preview.hide(); // preview is 100% browser width in IE7, so hide the damn thing\n\n          base.width = Math.ceil(base.$keyboard.width()); // set input width to match the widest keyboard row\n\n          base.$preview.show();\n        }\n\n        base.$preview.width(base.width);\n      }\n\n      base.reposition();\n      base.checkDecimal(); // get preview area line height\n      // add roughly 4px to get line height from font height, works well for font-sizes from 14-36px\n      // needed for textareas\n\n      base.lineHeight = parseInt(base.$preview.css('lineHeight'), 10) || parseInt(base.$preview.css('font-size'), 10) + 4;\n\n      if (o.caretToEnd) {\n        temp = base.isContentEditable ? $keyboard.getEditableLength(base.el) : base.originalContent.length;\n        base.saveCaret(temp, temp);\n      } // IE caret haxx0rs\n\n\n      if ($keyboard.allie) {\n        // sometimes end = 0 while start is > 0\n        if (base.last.end === 0 && base.last.start > 0) {\n          base.last.end = base.last.start;\n        } // IE will have start -1, end of 0 when not focused (see demo: https://jsfiddle.net/Mottie/fgryQ/3/)\n\n\n        if (base.last.start < 0) {\n          // ensure caret is at the end of the text (needed for IE)\n          base.last.start = base.last.end = base.originalContent.length;\n        }\n      }\n\n      if (alreadyOpen || redraw) {\n        // restore caret position (userClosed)\n        $keyboard.caret(base.$preview, base.last);\n        base.opening = false;\n        return base;\n      } // opening keyboard flag; delay allows switching between keyboards without immediately closing\n      // the keyboard\n\n\n      base.timer2 = setTimeout(function () {\n        var undef;\n        base.opening = false; // Number inputs don't support selectionStart and selectionEnd\n        // Number/email inputs don't support selectionStart and selectionEnd\n\n        if (!/(number|email)/i.test(base.el.type) && !o.caretToEnd) {\n          // caret position is always 0,0 in webkit; and nothing is focused at this point... odd\n          // save caret position in the input to transfer it to the preview\n          // inside delay to get correct caret position\n          base.saveCaret(undef, undef, base.$el);\n        }\n\n        if (o.initialFocus || base.$el.hasClass($keyboard.css.initialFocus)) {\n          $keyboard.caret(base.$preview, base.last);\n        } // save event time for keyboards with stayOpen: true\n\n\n        base.last.eventTime = new Date().getTime();\n        base.$el.trigger($keyboard.events.kbVisible, [base, base.el]);\n        base.timer = setTimeout(function () {\n          // get updated caret information after visible event - fixes #331\n          if (base) {\n            // Check if base exists, this is a case when destroy is called, before timers fire\n            base.saveCaret();\n          }\n        }, 200);\n      }, 10); // return base to allow chaining in typing extension\n\n      return base;\n    };\n\n    base.updateLanguage = function () {\n      // change language if layout is named something like 'french-azerty-1'\n      var layouts = $keyboard.layouts,\n          lang = o.language || layouts[o.layout] && layouts[o.layout].lang && layouts[o.layout].lang || [o.language || 'en'],\n          kblang = $keyboard.language; // some languages include a dash, e.g. 'en-gb' or 'fr-ca'\n      // allow o.language to be a string or array...\n      // array is for future expansion where a layout can be set for multiple languages\n\n      lang = Object.prototype.toString.call(lang) === '[object Array]' ? lang[0] : lang;\n      base.language = lang;\n      lang = lang.split('-')[0]; // set keyboard language\n\n      o.display = $.extend(true, {}, kblang.en.display, kblang[lang] && kblang[lang].display || {}, base.settings.display);\n      o.combos = $.extend(true, {}, kblang.en.combos, kblang[lang] && kblang[lang].combos || {}, base.settings.combos);\n      o.wheelMessage = kblang[lang] && kblang[lang].wheelMessage || kblang.en.wheelMessage; // rtl can be in the layout or in the language definition; defaults to false\n\n      o.rtl = layouts[o.layout] && layouts[o.layout].rtl || kblang[lang] && kblang[lang].rtl || false; // save default regex (in case loading another layout changes it)\n\n      if (kblang[lang] && kblang[lang].comboRegex) {\n        base.regex = kblang[lang].comboRegex;\n      } // determine if US '.' or European ',' system being used\n\n\n      base.decimal = /^\\./.test(o.display.dec);\n      base.$el.toggleClass('rtl', o.rtl).css('direction', o.rtl ? 'rtl' : '');\n    };\n\n    base.startup = function () {\n      var kbcss = $keyboard.css; // ensure base.$preview is defined; but don't overwrite it if keyboard is always visible\n\n      if (!((o.alwaysOpen || o.userClosed) && base.$preview)) {\n        base.makePreview();\n      }\n\n      if (!base.hasKeyboard()) {\n        // custom layout - create a unique layout name based on the hash\n        if (o.layout === 'custom') {\n          o.layoutHash = 'custom' + base.customHash();\n        }\n\n        base.layout = o.layout === 'custom' ? o.layoutHash : o.layout;\n        base.last.layout = base.layout;\n        base.updateLanguage();\n\n        if (typeof $keyboard.builtLayouts[base.layout] === 'undefined') {\n          if (typeof o.create === 'function') {\n            // create must call buildKeyboard() function; or create it's own keyboard\n            base.$keyboard = o.create(base);\n          } else if (!base.$keyboard.length) {\n            base.buildKeyboard(base.layout, true);\n          }\n        }\n\n        base.$keyboard = $keyboard.builtLayouts[base.layout].$keyboard.clone();\n        base.$keyboard.data('keyboard', base);\n\n        if ((base.el.id || '') !== '') {\n          // add ID to keyboard for styling purposes\n          base.$keyboard.attr('id', base.el.id + $keyboard.css.idSuffix);\n        }\n\n        base.makePreview();\n      } // Add layout and laguage data-attibutes\n\n\n      base.$keyboard.attr('data-' + kbcss.keyboard + '-layout', o.layout).attr('data-' + kbcss.keyboard + '-language', base.language);\n      base.$decBtn = base.$keyboard.find('.' + kbcss.keyPrefix + 'dec'); // add enter to allowed keys; fixes #190\n\n      if (o.enterNavigation || base.isTextArea) {\n        base.alwaysAllowed.push($keyboard.keyCodes.enter);\n      }\n\n      base.bindKeyboard();\n      base.$keyboard.appendTo(o.appendLocally ? base.$el.parent() : o.appendTo || 'body');\n      base.bindKeys(); // reposition keyboard on window resize\n\n      if (o.reposition && $.ui && $.ui.position && o.appendTo === 'body') {\n        $(window).bind('resize' + base.namespace, function () {\n          base.reposition();\n        });\n      }\n    };\n\n    base.reposition = function () {\n      base.position = $.isEmptyObject(o.position) ? false : o.position; // position after keyboard is visible (required for UI position utility)\n      // and appropriately sized\n\n      if ($.ui && $.ui.position && base.position) {\n        base.position.of = // get single target position\n        base.position.of || // OR target stored in element data (multiple targets)\n        base.$el.data('keyboardPosition') || // OR default @ element\n        base.$el;\n        base.position.collision = base.position.collision || 'flipfit flipfit';\n        base.position.at = o.usePreview ? o.position.at : o.position.at2;\n\n        if (base.isVisible()) {\n          base.$keyboard.position(base.position);\n        }\n      } // make chainable\n\n\n      return base;\n    };\n\n    base.makePreview = function () {\n      if (o.usePreview) {\n        var indx,\n            attrs,\n            attr,\n            removedAttr,\n            kbcss = $keyboard.css;\n        base.$preview = base.$el.clone(false).data('keyboard', base).removeClass(kbcss.placeholder + ' ' + kbcss.input).addClass(kbcss.preview + ' ' + o.css.input).attr('tabindex', '-1').show(); // for hidden inputs\n\n        base.preview = base.$preview[0]; // remove extraneous attributes.\n\n        removedAttr = /^(data-|id|aria-haspopup)/i;\n        attrs = base.$preview.get(0).attributes;\n\n        for (indx = attrs.length - 1; indx >= 0; indx--) {\n          attr = attrs[indx] && attrs[indx].name;\n\n          if (removedAttr.test(attr)) {\n            // remove data-attributes - see #351\n            base.preview.removeAttribute(attr);\n          }\n        } // build preview container and append preview display\n\n\n        $('<div />').addClass(kbcss.wrapper).append(base.$preview).prependTo(base.$keyboard);\n      } else {\n        base.$preview = base.$el;\n        base.preview = base.el;\n      }\n    }; // Added in v1.26.8 to allow chaining of the caret function, e.g.\n    // keyboard.reveal().caret(4,5).insertText('test').caret('end');\n\n\n    base.caret = function (param1, param2) {\n      var result = $keyboard.caret(base.$preview, param1, param2),\n          wasSetCaret = result instanceof $; // Caret was set, save last position & make chainable\n\n      if (wasSetCaret) {\n        base.saveCaret(result.start, result.end);\n        return base;\n      } // return caret position if using .caret()\n\n\n      return result;\n    };\n\n    base.saveCaret = function (start, end, $el) {\n      if (base.isCurrent()) {\n        var p;\n\n        if (typeof start === 'undefined') {\n          // grab & save current caret position\n          p = $keyboard.caret($el || base.$preview);\n        } else {\n          p = $keyboard.caret($el || base.$preview, start, end);\n        }\n\n        base.last.start = typeof start === 'undefined' ? p.start : start;\n        base.last.end = typeof end === 'undefined' ? p.end : end;\n      }\n    };\n\n    base.saveLastChange = function (val) {\n      base.last.val = val || base.getValue(base.$preview || base.$el);\n\n      if (base.isContentEditable) {\n        base.last.elms = base.el.cloneNode(true);\n      }\n    };\n\n    base.setScroll = function () {\n      // Set scroll so caret & current text is in view\n      // needed for virtual keyboard typing, NOT manual typing - fixes #23\n      if (!base.isContentEditable && base.last.virtual) {\n        var scrollWidth,\n            clientWidth,\n            adjustment,\n            direction,\n            value = base.last.val.substring(0, Math.max(base.last.start, base.last.end));\n\n        if (!base.$previewCopy) {\n          // clone preview\n          base.$previewCopy = base.$preview.clone().removeAttr('id') // fixes #334\n          .css({\n            position: 'absolute',\n            left: 0,\n            zIndex: -10,\n            visibility: 'hidden'\n          }).addClass($keyboard.css.inputClone); // prevent submitting content on form submission\n\n          base.$previewCopy[0].disabled = true;\n\n          if (!base.isTextArea) {\n            // make input zero-width because we need an accurate scrollWidth\n            base.$previewCopy.css({\n              'white-space': 'pre',\n              'width': 0\n            });\n          }\n\n          if (o.usePreview) {\n            // add clone inside of preview wrapper\n            base.$preview.after(base.$previewCopy);\n          } else {\n            // just slap that thing in there somewhere\n            base.$keyboard.prepend(base.$previewCopy);\n          }\n        }\n\n        if (base.isTextArea) {\n          // need the textarea scrollHeight, so set the clone textarea height to be the line height\n          base.$previewCopy.height(base.lineHeight).val(value); // set scrollTop for Textarea\n\n          base.preview.scrollTop = base.lineHeight * (Math.floor(base.$previewCopy[0].scrollHeight / base.lineHeight) - 1);\n        } else {\n          // add non-breaking spaces\n          base.$previewCopy.val(value.replace(/\\s/g, '\\xa0')); // if scrollAdjustment option is set to \"c\" or \"center\" then center the caret\n\n          adjustment = /c/i.test(o.scrollAdjustment) ? base.preview.clientWidth / 2 : o.scrollAdjustment;\n          scrollWidth = base.$previewCopy[0].scrollWidth - 1; // set initial state as moving right\n\n          if (typeof base.last.scrollWidth === 'undefined') {\n            base.last.scrollWidth = scrollWidth;\n            base.last.direction = true;\n          } // if direction = true; we're scrolling to the right\n\n\n          direction = base.last.scrollWidth === scrollWidth ? base.last.direction : base.last.scrollWidth < scrollWidth;\n          clientWidth = base.preview.clientWidth - adjustment; // set scrollLeft for inputs; try to mimic the inherit caret positioning + scrolling:\n          // hug right while scrolling right...\n\n          if (direction) {\n            if (scrollWidth < clientWidth) {\n              base.preview.scrollLeft = 0;\n            } else {\n              base.preview.scrollLeft = scrollWidth - clientWidth;\n            }\n          } else {\n            // hug left while scrolling left...\n            if (scrollWidth >= base.preview.scrollWidth - clientWidth) {\n              base.preview.scrollLeft = base.preview.scrollWidth - adjustment;\n            } else if (scrollWidth - adjustment > 0) {\n              base.preview.scrollLeft = scrollWidth - adjustment;\n            } else {\n              base.preview.scrollLeft = 0;\n            }\n          }\n\n          base.last.scrollWidth = scrollWidth;\n          base.last.direction = direction;\n        }\n      }\n    };\n\n    base.bindFocus = function () {\n      if (o.openOn) {\n        // make sure keyboard isn't destroyed\n        // Check if base exists, this is a case when destroy is called, before timers have fired\n        if (base && base.el.active) {\n          base.$el.bind(o.openOn + base.namespace, function () {\n            base.focusOn();\n          }); // remove focus from element (needed for IE since blur doesn't seem to work)\n\n          if ($(':focus')[0] === base.el) {\n            base.$el.blur();\n          }\n        }\n      }\n    };\n\n    base.bindKeyboard = function () {\n      var evt,\n          keyCodes = $keyboard.keyCodes,\n          layout = $keyboard.builtLayouts[base.layout],\n          namespace = base.namespace + 'keybindings';\n      base.$preview.unbind(base.namespace).bind('click' + namespace + ' touchstart' + namespace, function () {\n        if (o.alwaysOpen && !base.isCurrent()) {\n          base.reveal();\n        } // update last caret position after user click, use at least 150ms or it doesn't work in IE\n\n\n        base.timer2 = setTimeout(function () {\n          if (base) {\n            base.saveCaret();\n          }\n        }, 150);\n      }).bind('keypress' + namespace, function (e) {\n        if (o.lockInput) {\n          return false;\n        }\n\n        if (!base.isCurrent()) {\n          return;\n        }\n\n        var k = e.charCode || e.which,\n            // capsLock can only be checked while typing a-z\n        k1 = k >= keyCodes.A && k <= keyCodes.Z,\n            k2 = k >= keyCodes.a && k <= keyCodes.z,\n            str = base.last.key = String.fromCharCode(k); // check, that keypress wasn't rise by functional key\n        // space is first typing symbol in UTF8 table\n\n        if (k < keyCodes.space) {\n          //see #549\n          return;\n        }\n\n        base.last.virtual = false;\n        base.last.event = e;\n        base.last.$key = []; // not a virtual keyboard key\n\n        if (base.checkCaret) {\n          base.saveCaret();\n        } // update capsLock\n\n\n        if (k !== keyCodes.capsLock && (k1 || k2)) {\n          base.capsLock = k1 && !e.shiftKey || k2 && e.shiftKey; // if shifted keyset not visible, then show it\n\n          if (base.capsLock && !base.shiftActive) {\n            base.shiftActive = true;\n            base.showSet();\n          }\n        } // restrict input - keyCode in keypress special keys:\n        // see http://www.asquare.net/javascript/tests/KeyCode.html\n\n\n        if (o.restrictInput) {\n          // allow navigation keys to work - Chrome doesn't fire a keypress event (8 = bksp)\n          if ((e.which === keyCodes.backSpace || e.which === 0) && $.inArray(e.keyCode, base.alwaysAllowed)) {\n            return;\n          } // quick key check\n\n\n          if ($.inArray(str, layout.acceptedKeys) === -1) {\n            e.preventDefault(); // copy event object in case e.preventDefault() breaks when changing the type\n\n            evt = $.extend({}, e);\n            evt.type = $keyboard.events.inputRestricted;\n            base.$el.trigger(evt, [base, base.el]);\n          }\n        } else if ((e.ctrlKey || e.metaKey) && (e.which === keyCodes.A || e.which === keyCodes.C || e.which === keyCodes.V || e.which >= keyCodes.X && e.which <= keyCodes.Z)) {\n          // Allow select all (ctrl-a), copy (ctrl-c), paste (ctrl-v) & cut (ctrl-x) &\n          // redo (ctrl-y)& undo (ctrl-z); meta key for mac\n          return;\n        } // Mapped Keys - allows typing on a regular keyboard and the mapped key is entered\n        // Set up a key in the layout as follows: 'm(a):label'; m = key to map, (a) = actual keyboard key\n        // to map to (optional), ':label' = title/tooltip (optional)\n        // example: \\u0391 or \\u0391(A) or \\u0391:alpha or \\u0391(A):alpha\n\n\n        if (layout.hasMappedKeys && layout.mappedKeys.hasOwnProperty(str)) {\n          base.last.key = layout.mappedKeys[str];\n          base.insertText(base.last.key);\n          e.preventDefault();\n        }\n\n        if (typeof o.beforeInsert === 'function') {\n          base.insertText(base.last.key);\n          e.preventDefault();\n        }\n\n        base.checkMaxLength();\n      }).bind('keyup' + namespace, function (e) {\n        if (!base.isCurrent()) {\n          return;\n        }\n\n        base.last.virtual = false;\n\n        switch (e.which) {\n          // Insert tab key\n          case keyCodes.tab:\n            // Added a flag to prevent from tabbing into an input, keyboard opening, then adding the tab\n            // to the keyboard preview area on keyup. Sadly it still happens if you don't release the tab\n            // key immediately because keydown event auto-repeats\n            if (base.tab && !o.lockInput) {\n              base.shiftActive = e.shiftKey; // when switching inputs, the tab keyaction returns false\n\n              var notSwitching = $keyboard.keyaction.tab(base);\n              base.tab = false;\n\n              if (!notSwitching) {\n                return false;\n              }\n            } else {\n              e.preventDefault();\n            }\n\n            break;\n          // Escape will hide the keyboard\n\n          case keyCodes.escape:\n            if (!o.ignoreEsc) {\n              base.close(o.autoAccept && o.autoAcceptOnEsc ? 'true' : false);\n            }\n\n            return false;\n        } // throttle the check combo function because fast typers will have an incorrectly positioned caret\n\n\n        clearTimeout(base.throttled);\n        base.throttled = setTimeout(function () {\n          // fix error in OSX? see issue #102\n          if (base && base.isVisible()) {\n            base.checkCombos();\n          }\n        }, 100);\n        base.checkMaxLength();\n        base.last.preVal = '' + base.last.val;\n        base.saveLastChange(); // don't alter \"e\" or the \"keyup\" event never finishes processing; fixes #552\n\n        var event = $.Event($keyboard.events.kbChange); // base.last.key may be empty string (shift, enter, tab, etc) when keyboard is first visible\n        // use e.key instead, if browser supports it\n\n        event.action = base.last.key;\n        base.$el.trigger(event, [base, base.el]); // change callback is no longer bound to the input element as the callback could be\n        // called during an external change event with all the necessary parameters (issue #157)\n\n        if (typeof o.change === 'function') {\n          event.type = $keyboard.events.inputChange;\n          o.change(event, base, base.el);\n          return false;\n        }\n\n        if (o.acceptValid && o.autoAcceptOnValid) {\n          if (typeof o.validate === 'function' && o.validate(base, base.getValue(base.$preview))) {\n            base.$preview.blur();\n            base.accept();\n          }\n        }\n      }).bind('keydown' + namespace, function (e) {\n        base.last.keyPress = e.which; // ensure alwaysOpen keyboards are made active\n\n        if (o.alwaysOpen && !base.isCurrent()) {\n          base.reveal();\n        } // prevent tab key from leaving the preview window\n\n\n        if (e.which === keyCodes.tab) {\n          // allow tab to pass through - tab to next input/shift-tab for prev\n          base.tab = true;\n          return false;\n        }\n\n        if (o.lockInput || e.timeStamp === base.last.timeStamp) {\n          return !o.lockInput;\n        }\n\n        base.last.timeStamp = e.timeStamp; // fixes #659\n\n        base.last.virtual = false;\n\n        switch (e.which) {\n          case keyCodes.backSpace:\n            $keyboard.keyaction.bksp(base, null, e);\n            e.preventDefault();\n            break;\n\n          case keyCodes.enter:\n            $keyboard.keyaction.enter(base, null, e);\n            break;\n          // Show capsLock\n\n          case keyCodes.capsLock:\n            base.shiftActive = base.capsLock = !base.capsLock;\n            base.showSet();\n            break;\n\n          case keyCodes.V:\n            // prevent ctrl-v/cmd-v\n            if (e.ctrlKey || e.metaKey) {\n              if (o.preventPaste) {\n                e.preventDefault();\n                return;\n              }\n\n              base.checkCombos(); // check pasted content\n            }\n\n            break;\n        }\n      }).bind('mouseup touchend '.split(' ').join(namespace + ' '), function () {\n        base.last.virtual = true;\n        base.saveCaret();\n      }); // prevent keyboard event bubbling\n\n      base.$keyboard.bind('mousedown click touchstart '.split(' ').join(base.namespace + ' '), function (e) {\n        e.stopPropagation();\n\n        if (!base.isCurrent()) {\n          base.reveal();\n          $(base.el.ownerDocument).trigger('checkkeyboard' + base.namespace);\n        }\n\n        base.setFocus();\n      }); // If preventing paste, block context menu (right click)\n\n      if (o.preventPaste) {\n        base.$preview.bind('contextmenu' + base.namespace, function (e) {\n          e.preventDefault();\n        });\n        base.$el.bind('contextmenu' + base.namespace, function (e) {\n          e.preventDefault();\n        });\n      }\n    };\n\n    base.bindButton = function (events, handler) {\n      var button = '.' + $keyboard.css.keyButton,\n          callback = function (e) {\n        e.stopPropagation(); // save closest keyboard wrapper/input to check in checkClose function\n\n        e.$target = $(this).closest('.' + $keyboard.css.keyboard + ', .' + $keyboard.css.input);\n        handler.call(this, e);\n      };\n\n      if ($.fn.on) {\n        // jQuery v1.7+\n        base.$keyboard.on(events, button, callback);\n      } else if ($.fn.delegate) {\n        // jQuery v1.4.2 - 3.0.0\n        base.$keyboard.delegate(button, events, callback);\n      }\n\n      return base;\n    };\n\n    base.unbindButton = function (namespace) {\n      if ($.fn.off) {\n        // jQuery v1.7+\n        base.$keyboard.off(namespace);\n      } else if ($.fn.undelegate) {\n        // jQuery v1.4.2 - 3.0.0 (namespace only added in v1.6)\n        base.$keyboard.undelegate('.' + $keyboard.css.keyButton, namespace);\n      }\n\n      return base;\n    };\n\n    base.bindKeys = function () {\n      var kbcss = $keyboard.css;\n      base.unbindButton(base.namespace + ' ' + base.namespace + 'kb') // Change hover class and tooltip - moved this touchstart before option.keyBinding touchstart\n      // to prevent mousewheel lag/duplication - Fixes #379 & #411\n      .bindButton('mouseenter mouseleave touchstart '.split(' ').join(base.namespace + ' '), function (e) {\n        if ((o.alwaysOpen || o.userClosed) && e.type !== 'mouseleave' && !base.isCurrent()) {\n          base.reveal();\n          base.setFocus();\n        }\n\n        if (!base.isCurrent() || this.disabled) {\n          return;\n        }\n\n        var $keys,\n            txt,\n            last = base.last,\n            $this = $(this),\n            type = e.type;\n\n        if (o.useWheel && base.wheel) {\n          $keys = base.getLayers($this);\n          txt = ($keys.length ? $keys.map(function () {\n            return $(this).attr('data-value') || '';\n          }).get() : '') || [$this.text()];\n          last.wheel_$Keys = $keys;\n          last.wheelLayers = txt;\n          last.wheelIndex = $.inArray($this.attr('data-value'), txt);\n        }\n\n        if ((type === 'mouseenter' || type === 'touchstart') && base.el.type !== 'password' && !$this.hasClass(o.css.buttonDisabled)) {\n          $this.addClass(o.css.buttonHover);\n\n          if (o.useWheel && base.wheel) {\n            $this.attr('title', function (i, t) {\n              // show mouse wheel message\n              return base.wheel && t === '' && base.sets && txt.length > 1 && type !== 'touchstart' ? o.wheelMessage : t;\n            });\n          }\n        }\n\n        if (type === 'mouseleave') {\n          // needed or IE flickers really bad\n          $this.removeClass(base.el.type === 'password' ? '' : o.css.buttonHover);\n\n          if (o.useWheel && base.wheel) {\n            last.wheelIndex = 0;\n            last.wheelLayers = [];\n            last.wheel_$Keys = [];\n            $this.attr('title', function (i, t) {\n              return t === o.wheelMessage ? '' : t;\n            }).html($this.attr('data-html')); // restore original button text\n          }\n        }\n      }) // keyBinding = 'mousedown touchstart' by default\n      .bindButton(o.keyBinding.split(' ').join(base.namespace + ' ') + base.namespace + ' ' + $keyboard.events.kbRepeater, function (e) {\n        e.preventDefault(); // prevent errors when external triggers attempt to 'type' - see issue #158\n\n        if (!base.$keyboard.is(':visible') || this.disabled) {\n          return false;\n        }\n\n        var action,\n            last = base.last,\n            $key = $(this),\n            // prevent mousedown & touchstart from both firing events at the same time - see #184\n        timer = new Date().getTime();\n\n        if (o.useWheel && base.wheel) {\n          // get keys from other layers/keysets (shift, alt, meta, etc) that line up by data-position\n          // target mousewheel selected key\n          $key = last.wheel_$Keys.length && last.wheelIndex > -1 ? last.wheel_$Keys.eq(last.wheelIndex) : $key;\n        }\n\n        action = $key.attr('data-action');\n\n        if (timer - (last.eventTime || 0) < o.preventDoubleEventTime) {\n          return;\n        }\n\n        last.eventTime = timer;\n        last.event = e;\n        last.virtual = true;\n        last.$key = $key;\n        last.key = $key.attr('data-value');\n        last.keyPress = ''; // Start caret in IE when not focused (happens with each virtual keyboard button click\n\n        base.setFocus();\n\n        if (/^meta/.test(action)) {\n          action = 'meta';\n        } // keyaction is added as a string, override original action & text\n\n\n        if (action === last.key && typeof $keyboard.keyaction[action] === 'string') {\n          last.key = action = $keyboard.keyaction[action];\n        } else if (action in $keyboard.keyaction && typeof $keyboard.keyaction[action] === 'function') {\n          // stop processing if action returns false (close & cancel)\n          if ($keyboard.keyaction[action](base, this, e) === false) {\n            return false;\n          }\n\n          action = null; // prevent inserting action name\n        } // stop processing if keyboard closed and keyaction did not return false - see #536\n\n\n        if (!base.hasKeyboard()) {\n          return false;\n        }\n\n        if (typeof action !== 'undefined' && action !== null) {\n          last.key = $(this).hasClass(kbcss.keyAction) ? action : last.key;\n          base.insertText(last.key);\n\n          if (!base.capsLock && !o.stickyShift && !e.shiftKey) {\n            base.shiftActive = false;\n            base.showSet($key.attr('data-name'));\n          }\n        } // set caret if caret moved by action function; also, attempt to fix issue #131\n\n\n        $keyboard.caret(base.$preview, last);\n        base.checkCombos();\n        e = $.extend({}, e, $.Event($keyboard.events.kbChange));\n        e.target = base.el;\n        e.action = last.key;\n        base.$el.trigger(e, [base, base.el]);\n        last.preVal = '' + last.val;\n        base.saveLastChange();\n\n        if (typeof o.change === 'function') {\n          e.type = $keyboard.events.inputChange;\n          o.change(e, base, base.el); // return false to prevent reopening keyboard if base.accept() was called\n\n          return false;\n        }\n      }) // using 'kb' namespace for mouse repeat functionality to keep it separate\n      // I need to trigger a 'repeater.keyboard' to make it work\n      .bindButton('mouseup' + base.namespace + ' ' + 'mouseleave touchend touchmove touchcancel '.split(' ').join(base.namespace + 'kb '), function (e) {\n        base.last.virtual = true;\n        var offset,\n            $this = $(this);\n\n        if (e.type === 'touchmove') {\n          // if moving within the same key, don't stop repeating\n          offset = $this.offset();\n          offset.right = offset.left + $this.outerWidth();\n          offset.bottom = offset.top + $this.outerHeight();\n\n          if (e.originalEvent.touches[0].pageX >= offset.left && e.originalEvent.touches[0].pageX < offset.right && e.originalEvent.touches[0].pageY >= offset.top && e.originalEvent.touches[0].pageY < offset.bottom) {\n            return true;\n          }\n        } else if (/(mouseleave|touchend|touchcancel)/i.test(e.type)) {\n          $this.removeClass(o.css.buttonHover); // needed for touch devices\n        } else {\n          if (!o.noFocus && base.isCurrent() && base.isVisible()) {\n            base.$preview.focus();\n          }\n\n          if (base.checkCaret) {\n            $keyboard.caret(base.$preview, base.last);\n          }\n        }\n\n        base.mouseRepeat = [false, ''];\n        clearTimeout(base.repeater); // make sure key repeat stops!\n\n        if (o.acceptValid && o.autoAcceptOnValid) {\n          if (typeof o.validate === 'function' && o.validate(base, base.getValue())) {\n            base.$preview.blur();\n            base.accept();\n          }\n        }\n\n        return false;\n      }) // prevent form submits when keyboard is bound locally - issue #64\n      .bindButton('click' + base.namespace, function () {\n        return false;\n      }) // Allow mousewheel to scroll through other keysets of the same (non-action) key\n      .bindButton('mousewheel' + base.namespace, base.throttleEvent(function (e, delta) {\n        var $btn = $(this); // no mouse repeat for action keys (shift, ctrl, alt, meta, etc)\n\n        if (!$btn || $btn.hasClass(kbcss.keyAction) || base.last.wheel_$Keys[0] !== this) {\n          return;\n        }\n\n        if (o.useWheel && base.wheel) {\n          // deltaY used by newer versions of mousewheel plugin\n          delta = delta || e.deltaY;\n          var n,\n              txt = base.last.wheelLayers || [];\n\n          if (txt.length > 1) {\n            n = base.last.wheelIndex + (delta > 0 ? -1 : 1);\n\n            if (n > txt.length - 1) {\n              n = 0;\n            }\n\n            if (n < 0) {\n              n = txt.length - 1;\n            }\n          } else {\n            n = 0;\n          }\n\n          base.last.wheelIndex = n;\n          $btn.html(txt[n]);\n          return false;\n        }\n      }, 30)).bindButton('mousedown touchstart '.split(' ').join(base.namespace + 'kb '), function () {\n        var $btn = $(this); // no mouse repeat for action keys (shift, ctrl, alt, meta, etc)\n\n        if (!$btn || $btn.hasClass(kbcss.keyAction) && // mouse repeated action key exceptions\n        !$btn.is('.' + kbcss.keyPrefix + 'tab bksp space enter'.split(' ').join(',.' + kbcss.keyPrefix))) {\n          return;\n        }\n\n        if (o.repeatRate !== 0) {\n          // save the key, make sure we are repeating the right one (fast typers)\n          base.mouseRepeat = [true, $btn];\n          setTimeout(function () {\n            // don't repeat keys if it is disabled - see #431\n            if (base && base.mouseRepeat[0] && base.mouseRepeat[1] === $btn && !$btn[0].disabled) {\n              base.repeatKey($btn);\n            }\n          }, o.repeatDelay);\n        }\n\n        return false;\n      });\n    }; // No call on tailing event\n\n\n    base.throttleEvent = function (cb, time) {\n      var interm;\n      return function () {\n        if (!interm) {\n          cb.apply(this, arguments);\n          interm = true;\n          setTimeout(function () {\n            interm = false;\n          }, time);\n        }\n      };\n    };\n\n    base.execCommand = function (cmd, str) {\n      base.el.ownerDocument.execCommand(cmd, false, str);\n      base.el.normalize();\n\n      if (o.reposition) {\n        base.reposition();\n      }\n    };\n\n    base.getValue = function ($el) {\n      $el = $el || base.$preview;\n      return $el[base.isContentEditable ? 'text' : 'val']();\n    };\n\n    base.setValue = function (txt, $el) {\n      $el = $el || base.$preview;\n\n      if (base.isContentEditable) {\n        if (txt !== $el.text()) {\n          $keyboard.replaceContent($el, txt);\n          base.saveCaret();\n        }\n      } else {\n        $el.val(txt);\n      }\n\n      return base;\n    }; // Insert text at caret/selection - thanks to Derek Wickwire for fixing this up!\n\n\n    base.insertText = function (txt) {\n      if (!base.$preview) {\n        return base;\n      }\n\n      if (typeof o.beforeInsert === 'function') {\n        txt = o.beforeInsert(base.last.event, base, base.el, txt);\n      }\n\n      if (typeof txt === 'undefined' || txt === false) {\n        base.last.key = '';\n        return base;\n      }\n\n      if (base.isContentEditable) {\n        return base.insertContentEditable(txt);\n      }\n\n      var t,\n          bksp = false,\n          isBksp = txt === '\\b',\n          // use base.$preview.val() instead of base.preview.value (val.length includes carriage returns in IE).\n      val = base.getValue(),\n          pos = $keyboard.caret(base.$preview),\n          len = val.length; // save original content length\n      // silly IE caret hacks... it should work correctly, but navigating using arrow keys in a textarea\n      // is still difficult\n      // in IE, pos.end can be zero after input loses focus\n\n      if (pos.end < pos.start) {\n        pos.end = pos.start;\n      }\n\n      if (pos.start > len) {\n        pos.end = pos.start = len;\n      }\n\n      if (base.isTextArea) {\n        // This makes sure the caret moves to the next line after clicking on enter (manual typing works fine)\n        if ($keyboard.msie && val.substring(pos.start, pos.start + 1) === '\\n') {\n          pos.start += 1;\n          pos.end += 1;\n        }\n      }\n\n      t = pos.start;\n\n      if (txt === '{d}') {\n        txt = '';\n        pos.end += 1;\n      }\n\n      if (isBksp) {\n        txt = '';\n        bksp = isBksp && t === pos.end && t > 0;\n      }\n\n      val = val.substring(0, t - (bksp ? 1 : 0)) + txt + val.substring(pos.end);\n      t += bksp ? -1 : txt.length;\n      base.setValue(val);\n      base.saveCaret(t, t); // save caret in case of bksp\n\n      base.setScroll(); // see #506.. allow chaining of insertText\n\n      return base;\n    };\n\n    base.insertContentEditable = function (txt) {\n      base.$preview.focus();\n      base.execCommand('insertText', txt);\n      base.saveCaret();\n      return base;\n    }; // check max length\n\n\n    base.checkMaxLength = function () {\n      if (!base.$preview) {\n        return;\n      }\n\n      var start,\n          caret,\n          val = base.getValue(),\n          len = base.isContentEditable ? $keyboard.getEditableLength(base.el) : val.length;\n\n      if (o.maxLength !== false && len > o.maxLength) {\n        start = $keyboard.caret(base.$preview).start;\n        caret = Math.min(start, o.maxLength); // prevent inserting new characters when maxed #289\n\n        if (!o.maxInsert) {\n          val = base.last.val;\n          caret = start - 1; // move caret back one\n        }\n\n        base.setValue(val.substring(0, o.maxLength)); // restore caret on change, otherwise it ends up at the end.\n\n        base.saveCaret(caret, caret);\n      }\n\n      if (base.$decBtn.length) {\n        base.checkDecimal();\n      } // allow chaining\n\n\n      return base;\n    }; // mousedown repeater\n\n\n    base.repeatKey = function (key) {\n      key.trigger($keyboard.events.kbRepeater);\n\n      if (base.mouseRepeat[0]) {\n        base.repeater = setTimeout(function () {\n          if (base) {\n            base.repeatKey(key);\n          }\n        }, base.repeatTime);\n      }\n    };\n\n    base.getKeySet = function () {\n      var sets = [];\n\n      if (base.altActive) {\n        sets.push('alt');\n      }\n\n      if (base.shiftActive) {\n        sets.push('shift');\n      }\n\n      if (base.metaActive) {\n        // base.metaActive contains the string name of the\n        // current meta keyset\n        sets.push(base.metaActive);\n      }\n\n      return sets.length ? sets.join('+') : 'normal';\n    }; // make it easier to switch keysets via API\n    // showKeySet('shift+alt+meta1')\n\n\n    base.showKeySet = function (str) {\n      if (typeof str === 'string') {\n        base.last.keyset = [base.shiftActive, base.altActive, base.metaActive];\n        base.shiftActive = /shift/i.test(str);\n        base.altActive = /alt/i.test(str);\n\n        if (/\\bmeta/.test(str)) {\n          base.metaActive = true;\n          base.showSet(str.match(/\\bmeta[\\w-]+/i)[0]);\n        } else {\n          base.metaActive = false;\n          base.showSet();\n        }\n      } else {\n        base.showSet(str);\n      } // allow chaining\n\n\n      return base;\n    };\n\n    base.showSet = function (name) {\n      if (!base.hasKeyboard()) {\n        return;\n      }\n\n      o = base.options; // refresh options\n\n      var kbcss = $keyboard.css,\n          prefix = '.' + kbcss.keyPrefix,\n          active = o.css.buttonActive,\n          key = '',\n          toShow = (base.shiftActive ? 1 : 0) + (base.altActive ? 2 : 0);\n\n      if (!base.shiftActive) {\n        base.capsLock = false;\n      } // check meta key set\n\n\n      if (base.metaActive) {\n        // remove \"-shift\" and \"-alt\" from meta name if it exists\n        if (base.shiftActive) {\n          name = (name || '').replace('-shift', '');\n        }\n\n        if (base.altActive) {\n          name = (name || '').replace('-alt', '');\n        } // the name attribute contains the meta set name 'meta99'\n\n\n        key = /^meta/i.test(name) ? name : ''; // save active meta keyset name\n\n        if (key === '') {\n          key = base.metaActive === true ? '' : base.metaActive;\n        } else {\n          base.metaActive = key;\n        } // if meta keyset doesn't have a shift or alt keyset, then show just the meta key set\n\n\n        if (!o.stickyShift && base.last.keyset[2] !== base.metaActive || (base.shiftActive || base.altActive) && !base.$keyboard.find('.' + kbcss.keySet + '-' + key + base.rows[toShow]).length) {\n          base.shiftActive = base.altActive = false;\n        }\n      } else if (!o.stickyShift && base.last.keyset[2] !== base.metaActive && base.shiftActive) {\n        // switching from meta key set back to default, reset shift & alt if using stickyShift\n        base.shiftActive = base.altActive = false;\n      }\n\n      toShow = (base.shiftActive ? 1 : 0) + (base.altActive ? 2 : 0);\n      key = toShow === 0 && !base.metaActive ? '-normal' : key === '' ? '' : '-' + key;\n\n      if (!base.$keyboard.find('.' + kbcss.keySet + key + base.rows[toShow]).length) {\n        // keyset doesn't exist, so restore last keyset settings\n        base.shiftActive = base.last.keyset[0];\n        base.altActive = base.last.keyset[1];\n        base.metaActive = base.last.keyset[2];\n        return;\n      }\n\n      base.$keyboard.find(prefix + 'alt,' + prefix + 'shift,.' + kbcss.keyAction + '[class*=meta]').removeClass(active).end().find(prefix + 'alt').toggleClass(active, base.altActive).end().find(prefix + 'shift').toggleClass(active, base.shiftActive).end().find(prefix + 'lock').toggleClass(active, base.capsLock).end().find('.' + kbcss.keySet).hide().end().find('.' + (kbcss.keyAction + prefix + key).replace('--', '-')).addClass(active); // show keyset using inline-block ( extender layout will then line up )\n\n      base.$keyboard.find('.' + kbcss.keySet + key + base.rows[toShow])[0].style.display = 'inline-block';\n\n      if (base.metaActive) {\n        base.$keyboard.find(prefix + base.metaActive) // base.metaActive contains the string \"meta#\" or false\n        // without the !== false, jQuery UI tries to transition the classes\n        .toggleClass(active, base.metaActive !== false);\n      }\n\n      base.last.keyset = [base.shiftActive, base.altActive, base.metaActive];\n      base.$el.trigger($keyboard.events.kbKeysetChange, [base, base.el]);\n\n      if (o.reposition) {\n        base.reposition();\n      }\n    }; // check for key combos (dead keys)\n\n\n    base.checkCombos = function () {\n      // return val for close function\n      if (!(base.isVisible() || base.hasKeyboard() && base.$keyboard.hasClass($keyboard.css.hasFocus))) {\n        return base.getValue(base.$preview || base.$el);\n      }\n\n      var r,\n          t,\n          t2,\n          repl,\n          // use base.$preview.val() instead of base.preview.value\n      // (val.length includes carriage returns in IE).\n      val = base.getValue(),\n          pos = $keyboard.caret(base.$preview),\n          layout = $keyboard.builtLayouts[base.layout],\n          max = base.isContentEditable ? $keyboard.getEditableLength(base.el) : val.length,\n          // save original content length\n      len = max; // return if val is empty; fixes #352\n\n      if (val === '') {\n        // check valid on empty string - see #429\n        if (o.acceptValid) {\n          base.checkValid();\n        }\n\n        return val;\n      } // silly IE caret hacks... it should work correctly, but navigating using arrow keys in a textarea\n      // is still difficult\n      // in IE, pos.end can be zero after input loses focus\n\n\n      if (pos.end < pos.start) {\n        pos.end = pos.start;\n      }\n\n      if (pos.start > len) {\n        pos.end = pos.start = len;\n      } // This makes sure the caret moves to the next line after clicking on enter (manual typing works fine)\n\n\n      if ($keyboard.msie && val.substring(pos.start, pos.start + 1) === '\\n') {\n        pos.start += 1;\n        pos.end += 1;\n      }\n\n      if (o.useCombos) {\n        // keep 'a' and 'o' in the regex for ae and oe ligature (æ,œ)\n        // thanks to KennyTM: http://stackoverflow.com/q/4275077\n        // original regex /([`\\'~\\^\\\"ao])([a-z])/mig moved to $.keyboard.comboRegex\n        if ($keyboard.msie) {\n          // old IE may not have the caret positioned correctly, so just check the whole thing\n          val = val.replace(base.regex, function (s, accent, letter) {\n            return o.combos.hasOwnProperty(accent) ? o.combos[accent][letter] || s : s;\n          }); // prevent combo replace error, in case the keyboard closes - see issue #116\n        } else if (base.$preview.length) {\n          // Modern browsers - check for combos from last two characters left of the caret\n          t = pos.start - (pos.start - 2 >= 0 ? 2 : 0); // target last two characters\n\n          $keyboard.caret(base.$preview, t, pos.end); // do combo replace\n\n          t = $keyboard.caret(base.$preview);\n\n          repl = function (txt) {\n            return (txt || '').replace(base.regex, function (s, accent, letter) {\n              return o.combos.hasOwnProperty(accent) ? o.combos[accent][letter] || s : s;\n            });\n          };\n\n          t2 = repl(t.text); // add combo back\n          // prevent error if caret doesn't return a function\n\n          if (t && t.replaceStr && t2 !== t.text) {\n            if (base.isContentEditable) {\n              $keyboard.replaceContent(el, repl);\n            } else {\n              base.setValue(t.replaceStr(t2));\n            }\n          }\n\n          val = base.getValue();\n        }\n      } // check input restrictions - in case content was pasted\n\n\n      if (o.restrictInput && val !== '') {\n        t = layout.acceptedKeys.length;\n        r = layout.acceptedKeysRegex;\n\n        if (!r) {\n          t2 = $.map(layout.acceptedKeys, function (v) {\n            // escape any special characters\n            return v.replace(base.escapeRegex, '\\\\$&');\n          });\n\n          if (base.alwaysAllowed.indexOf($keyboard.keyCodes.enter) > -1) {\n            t2.push('\\\\n'); // Fixes #686\n          }\n\n          r = layout.acceptedKeysRegex = new RegExp('(' + t2.join('|') + ')', 'g');\n        } // only save matching keys\n\n\n        t2 = val.match(r);\n\n        if (t2) {\n          val = t2.join('');\n        } else {\n          // no valid characters\n          val = '';\n          len = 0;\n        }\n      } // save changes, then reposition caret\n\n\n      pos.start += max - len;\n      pos.end += max - len;\n      base.setValue(val);\n      base.saveCaret(pos.start, pos.end); // set scroll to keep caret in view\n\n      base.setScroll();\n      base.checkMaxLength();\n\n      if (o.acceptValid) {\n        base.checkValid();\n      }\n\n      return val; // return text, used for keyboard closing section\n    }; // Toggle accept button classes, if validating\n\n\n    base.checkValid = function () {\n      var kbcss = $keyboard.css,\n          $accept = base.$keyboard.find('.' + kbcss.keyPrefix + 'accept'),\n          valid = true;\n\n      if (typeof o.validate === 'function') {\n        valid = o.validate(base, base.getValue(), false);\n      } // toggle accept button classes; defined in the css\n\n\n      $accept.toggleClass(kbcss.inputInvalid, !valid).toggleClass(kbcss.inputValid, valid) // update title to indicate that the entry is valid or invalid\n      .attr('title', $accept.attr('data-title') + ' (' + o.display[valid ? 'valid' : 'invalid'] + ')');\n    }; // Decimal button for num pad - only allow one (not used by default)\n\n\n    base.checkDecimal = function () {\n      // Check US '.' or European ',' format\n      if (base.decimal && /\\./g.test(base.preview.value) || !base.decimal && /\\,/g.test(base.preview.value)) {\n        base.$decBtn.attr({\n          'disabled': 'disabled',\n          'aria-disabled': 'true'\n        }).removeClass(o.css.buttonHover).addClass(o.css.buttonDisabled);\n      } else {\n        base.$decBtn.removeAttr('disabled').attr({\n          'aria-disabled': 'false'\n        }).addClass(o.css.buttonDefault).removeClass(o.css.buttonDisabled);\n      }\n    }; // get other layer values for a specific key\n\n\n    base.getLayers = function ($el) {\n      var kbcss = $keyboard.css,\n          key = $el.attr('data-pos'),\n          $keys = $el.closest('.' + kbcss.keyboard).find('button[data-pos=\"' + key + '\"]');\n      return $keys.filter(function () {\n        return $(this).find('.' + kbcss.keyText).text() !== '';\n      }).add($el);\n    }; // Go to next or prev inputs\n    // goToNext = true, then go to next input; if false go to prev\n    // isAccepted is from autoAccept option or true if user presses shift+enter\n\n\n    base.switchInput = function (goToNext, isAccepted) {\n      if (typeof o.switchInput === 'function') {\n        o.switchInput(base, goToNext, isAccepted);\n      } else {\n        // base.$keyboard may be an empty array - see #275 (apod42)\n        if (base.$keyboard.length) {\n          base.$keyboard.hide();\n        }\n\n        var kb,\n            stopped = false,\n            all = $('button, input, select, textarea, a, [contenteditable]').filter(':visible').not(':disabled'),\n            indx = all.index(base.$el) + (goToNext ? 1 : -1);\n\n        if (base.$keyboard.length) {\n          base.$keyboard.show();\n        }\n\n        if (indx > all.length - 1) {\n          stopped = o.stopAtEnd;\n          indx = 0; // go to first input\n        }\n\n        if (indx < 0) {\n          stopped = o.stopAtEnd;\n          indx = all.length - 1; // stop or go to last\n        }\n\n        if (!stopped) {\n          isAccepted = base.close(isAccepted);\n\n          if (!isAccepted) {\n            return;\n          }\n\n          kb = all.eq(indx).data('keyboard');\n\n          if (kb && kb.options.openOn.length) {\n            kb.focusOn();\n          } else {\n            all.eq(indx).focus();\n          }\n        }\n      }\n\n      return false;\n    }; // Close the keyboard, if visible. Pass a status of true, if the content was accepted\n    // (for the event trigger).\n\n\n    base.close = function (accepted) {\n      if (base.isOpen && base.$keyboard.length) {\n        clearTimeout(base.throttled);\n        var kbcss = $keyboard.css,\n            kbevents = $keyboard.events,\n            val = accepted ? base.checkCombos() : base.originalContent; // validate input if accepted\n\n        if (accepted && typeof o.validate === 'function' && !o.validate(base, val, true)) {\n          val = base.originalContent;\n          accepted = false;\n\n          if (o.cancelClose) {\n            return;\n          }\n        }\n\n        base.isCurrent(false);\n        base.isOpen = o.alwaysOpen || o.userClosed;\n\n        if (base.isContentEditable && !accepted) {\n          // base.originalContent stores the HTML\n          base.$el.html(val);\n        } else {\n          base.setValue(val, base.$el);\n        }\n\n        base.$el.removeClass(kbcss.isCurrent + ' ' + kbcss.inputAutoAccepted) // add 'ui-keyboard-autoaccepted' to inputs - see issue #66\n        .addClass(accepted || false ? accepted === true ? '' : kbcss.inputAutoAccepted : '') // trigger default change event - see issue #146\n        .trigger(kbevents.inputChange); // don't trigger an empty event - see issue #463\n\n        if (!o.alwaysOpen) {\n          // don't trigger beforeClose if keyboard is always open\n          base.$el.trigger(kbevents.kbBeforeClose, [base, base.el, accepted || false]);\n        } // save caret after updating value (fixes userClosed issue with changing focus)\n\n\n        $keyboard.caret(base.$preview, base.last);\n        base.$el.trigger(accepted || false ? kbevents.inputAccepted : kbevents.inputCanceled, [base, base.el]).trigger(o.alwaysOpen ? kbevents.kbInactive : kbevents.kbHidden, [base, base.el]).blur(); // base is undefined if keyboard was destroyed - fixes #358\n\n        if (base) {\n          // add close event time\n          base.last.eventTime = new Date().getTime();\n\n          if (!(o.alwaysOpen || o.userClosed && accepted === 'true') && base.$keyboard.length) {\n            // free up memory\n            base.removeKeyboard(); // rebind input focus - delayed to fix IE issue #72\n\n            base.timer = setTimeout(function () {\n              if (base) {\n                base.bindFocus();\n              }\n            }, 200);\n          }\n\n          if (!base.watermark && base.el.value === '' && base.inPlaceholder !== '') {\n            base.$el.addClass(kbcss.placeholder);\n            base.setValue(base.inPlaceholder, base.$el);\n          }\n        }\n      }\n\n      return !!accepted;\n    };\n\n    base.accept = function () {\n      return base.close(true);\n    };\n\n    base.checkClose = function (e) {\n      if (base.opening) {\n        return;\n      }\n\n      var kbcss = $.keyboard.css,\n          $target = e.$target || $(e.target).closest('.' + $keyboard.css.keyboard + ', .' + $keyboard.css.input);\n\n      if (!$target.length) {\n        $target = $(e.target);\n      } // needed for IE to allow switching between keyboards smoothly\n\n\n      if ($target.length && $target.hasClass(kbcss.keyboard)) {\n        var kb = $target.data('keyboard'); // only trigger on self\n\n        if (kb !== base && !kb.$el.hasClass(kbcss.isCurrent) && kb.options.openOn && e.type === o.openOn) {\n          kb.focusOn();\n        }\n      } else {\n        base.escClose(e, $target);\n      }\n    }; // callback functions called to check if the keyboard needs to be closed\n    // e.g. on escape or clicking outside the keyboard\n\n\n    base.escCloseCallback = {\n      // keep keyboard open if alwaysOpen or stayOpen is true - fixes mutliple\n      // always open keyboards or single stay open keyboard\n      keepOpen: function () {\n        return !base.isOpen;\n      }\n    };\n\n    base.escClose = function (e, $el) {\n      if (!base.isOpen) {\n        return;\n      }\n\n      if (e && e.type === 'keyup') {\n        return e.which === $keyboard.keyCodes.escape && !o.ignoreEsc ? base.close(o.autoAccept && o.autoAcceptOnEsc ? 'true' : false) : '';\n      }\n\n      var shouldStayOpen = false,\n          $target = $el.length && $el || $(e.target);\n      $.each(base.escCloseCallback, function (i, callback) {\n        if (typeof callback === 'function') {\n          shouldStayOpen = shouldStayOpen || callback($target);\n        }\n      });\n\n      if (shouldStayOpen) {\n        return;\n      } // ignore autoaccept if using escape - good idea?\n\n\n      if (!base.isCurrent() && base.isOpen || base.isOpen && $target[0] !== base.el) {\n        // don't close if stayOpen is set; but close if a different keyboard is being opened\n        if ((o.stayOpen || o.userClosed) && !$target.hasClass($keyboard.css.input)) {\n          return;\n        } // stop propogation in IE - an input getting focus doesn't open a keyboard if one is already open\n\n\n        if ($keyboard.allie) {\n          e.preventDefault();\n        }\n\n        if (o.closeByClickEvent) {\n          // only close the keyboard if the user is clicking on an input or if they cause a click\n          // event (touchstart/mousedown will not force the close with this setting)\n          var name = $target[0] && $target[0].nodeName.toLowerCase();\n\n          if (name === 'input' || name === 'textarea' || e.type === 'click') {\n            base.close(o.autoAccept ? 'true' : false);\n          }\n        } else {\n          // send 'true' instead of a true (boolean), the input won't get a 'ui-keyboard-autoaccepted'\n          // class name - see issue #66\n          base.close(o.autoAccept ? 'true' : false);\n        }\n      }\n    }; // Build default button\n\n\n    base.keyBtn = $('<button />').attr({\n      'role': 'button',\n      'type': 'button',\n      'aria-disabled': 'false',\n      'tabindex': '-1'\n    }).addClass($keyboard.css.keyButton); // convert key names into a class name\n\n    base.processName = function (name) {\n      var index,\n          n,\n          process = (name || '').replace(/[^a-z0-9-_]/gi, ''),\n          len = process.length,\n          newName = [];\n\n      if (len > 1 && name === process) {\n        // return name if basic text\n        return name;\n      } // return character code sequence\n\n\n      len = name.length;\n\n      if (len) {\n        for (index = 0; index < len; index++) {\n          n = name[index]; // keep '-' and '_'... so for dash, we get two dashes in a row\n\n          newName.push(/[a-z0-9-_]/i.test(n) ? /[-_]/.test(n) && index !== 0 ? '' : n : (index === 0 ? '' : '-') + n.charCodeAt(0));\n        }\n\n        return newName.join('');\n      }\n\n      return name;\n    };\n\n    base.processKeys = function (name) {\n      var tmp,\n          parts,\n          htmlIndex = name.indexOf('</'),\n          data = {\n        name: name,\n        map: '',\n        title: ''\n      };\n\n      if (htmlIndex > -1) {\n        // If it looks like HTML, skip processing; see #743\n        // html may include colons; see #701\n        return data;\n      } // Don't split colons followed by //, e.g. https://; Fixes #555\n\n\n      parts = name.split(/:(?!\\/\\/)/);\n      /* map defined keys\r\n      format 'key(A):Label_for_key_(ignore_parentheses_here)'\r\n      \t'key' = key that is seen (can any character(s); but it might need to be escaped using '\\'\r\n      \tor entered as unicode '\\u####'\r\n      \t'(A)' = the actual key on the real keyboard to remap\r\n      \t':Label_for_key' ends up in the title/tooltip\r\n      Examples:\r\n      \t'\\u0391(A):alpha', 'x(y):this_(might)_cause_problems\r\n      \tor edge cases of ':(x)', 'x(:)', 'x(()' or 'x())'\r\n      Enhancement (if I can get alt keys to work):\r\n      \tA mapped key will include the mod key, e.g. 'x(alt-x)' or 'x(alt-shift-x)'\r\n      */\n\n      if (/\\(.+\\)/.test(parts[0]) || /^:\\(.+\\)/.test(name) || /\\([(:)]\\)/.test(name)) {\n        // edge cases 'x(:)', 'x(()' or 'x())'\n        if (/\\([(:)]\\)/.test(name)) {\n          tmp = parts[0].match(/([^(]+)\\((.+)\\)/);\n\n          if (tmp && tmp.length) {\n            data.name = tmp[1];\n            data.map = tmp[2];\n            data.title = parts.length > 1 ? parts.slice(1).join(':') : '';\n          } else {\n            // edge cases 'x(:)', ':(x)' or ':(:)'\n            data.name = name.match(/([^(]+)/)[0];\n\n            if (data.name === ':') {\n              // ':(:):test' => parts = [ '', '(', ')', 'title' ] need to slice 1\n              parts = parts.slice(1);\n            }\n\n            if (tmp === null) {\n              // 'x(:):test' => parts = [ 'x(', ')', 'title' ] need to slice 2\n              data.map = ':';\n              parts = parts.slice(2);\n            }\n\n            data.title = parts.length ? parts.join(':') : '';\n          }\n        } else {\n          // example: \\u0391(A):alpha; extract 'A' from '(A)'\n          data.map = name.match(/\\(([^()]+?)\\)/)[1]; // remove '(A)', left with '\\u0391:alpha'\n\n          name = name.replace(/\\(([^()]+)\\)/, '');\n          tmp = name.split(':'); // get '\\u0391' from '\\u0391:alpha'\n\n          if (tmp[0] === '') {\n            data.name = ':';\n            parts = parts.slice(1);\n          } else {\n            data.name = tmp[0];\n          }\n\n          data.title = parts.length > 1 ? parts.slice(1).join(':') : '';\n        }\n      } else {\n        // find key label\n        // corner case of '::;' reduced to ':;', split as ['', ';']\n        if (name !== '' && parts[0] === '') {\n          data.name = ':';\n          parts = parts.slice(1);\n        } else {\n          data.name = parts[0];\n        }\n\n        data.title = parts.length > 1 ? parts.slice(1).join(':') : '';\n      }\n\n      data.title = $.trim(data.title).replace(/_/g, ' ');\n      return data;\n    }; // Add key function\n    // keyName = the name of the function called in $.keyboard.keyaction when the button is clicked\n    // name = name added to key, or cross-referenced in the display options\n    // base.temp[0] = keyset to attach the new button\n    // regKey = true when it is not an action key\n\n\n    base.addKey = function (keyName, action, regKey) {\n      var keyClass,\n          tmp,\n          keys,\n          data = {},\n          txt = base.processKeys(regKey ? keyName : action),\n          kbcss = $keyboard.css;\n\n      if (!regKey && o.display[txt.name]) {\n        keys = base.processKeys(o.display[txt.name]); // action contained in \"keyName\" (e.g. keyName = \"accept\",\n        // action = \"a\" (use checkmark instead of text))\n\n        keys.action = base.processKeys(keyName).name;\n      } else {\n        // when regKey is true, keyName is the same as action\n        keys = txt;\n        keys.action = txt.name;\n      }\n\n      data.name = base.processName(txt.name);\n\n      if (keys.name !== '') {\n        if (keys.map !== '') {\n          $keyboard.builtLayouts[base.layout].mappedKeys[keys.map] = keys.name;\n          $keyboard.builtLayouts[base.layout].acceptedKeys.push(keys.name);\n        } else if (regKey) {\n          $keyboard.builtLayouts[base.layout].acceptedKeys.push(keys.name);\n        }\n      }\n\n      if (regKey) {\n        keyClass = data.name === '' ? '' : kbcss.keyPrefix + data.name;\n      } else {\n        // Action keys will have the 'ui-keyboard-actionkey' class\n        keyClass = kbcss.keyAction + ' ' + kbcss.keyPrefix + keys.action;\n      } // '\\u2190'.length = 1 because the unicode is converted, so if more than one character,\n      // add the wide class\n\n\n      keyClass += (keys.name.length > 2 ? ' ' + kbcss.keyWide : '') + ' ' + o.css.buttonDefault; // Allow HTML in the key.name\n\n      data.html = '<span class=\"' + kbcss.keyText + '\">' + keys.name + '</span>';\n      data.$key = base.keyBtn.clone().attr({\n        'data-value': regKey ? keys.name : keys.action,\n        // value\n        'data-name': keys.action,\n        'data-pos': base.temp[1] + ',' + base.temp[2],\n        'data-action': keys.action,\n        'data-html': data.html\n      }) // add 'ui-keyboard-' + data.name for all keys\n      //  (e.g. 'Bksp' will have 'ui-keyboard-bskp' class)\n      // any non-alphanumeric characters will be replaced with\n      //  their decimal unicode value\n      //  (e.g. '~' is a regular key, class = 'ui-keyboard-126'\n      //  (126 is the unicode decimal value - same as &#126;)\n      //  See https://en.wikipedia.org/wiki/List_of_Unicode_characters#Control_codes\n      .addClass(keyClass).html(data.html).appendTo(base.temp[0]);\n\n      if (keys.map) {\n        data.$key.attr('data-mapped', keys.map);\n      }\n\n      if (keys.title || txt.title) {\n        data.$key.attr({\n          'data-title': txt.title || keys.title,\n          // used to allow adding content to title\n          'title': txt.title || keys.title\n        });\n      }\n\n      if (typeof o.buildKey === 'function') {\n        data = o.buildKey(base, data); // copy html back to attributes\n\n        tmp = data.$key.html();\n        data.$key.attr('data-html', tmp);\n      }\n\n      return data.$key;\n    };\n\n    base.customHash = function (layout) {\n      /*jshint bitwise:false */\n      var i,\n          array,\n          hash,\n          character,\n          len,\n          arrays = [],\n          merged = []; // pass layout to allow for testing\n\n      layout = typeof layout === 'undefined' ? o.customLayout : layout; // get all layout arrays\n\n      for (array in layout) {\n        if (layout.hasOwnProperty(array)) {\n          arrays.push(layout[array]);\n        }\n      } // flatten array\n\n\n      merged = merged.concat.apply(merged, arrays).join(' '); // produce hash name - http://stackoverflow.com/a/7616484/145346\n\n      hash = 0;\n      len = merged.length;\n\n      if (len === 0) {\n        return hash;\n      }\n\n      for (i = 0; i < len; i++) {\n        character = merged.charCodeAt(i);\n        hash = (hash << 5) - hash + character;\n        hash = hash & hash; // Convert to 32bit integer\n      }\n\n      return hash;\n    };\n\n    base.buildKeyboard = function (name, internal) {\n      // o.display is empty when this is called from the scramble extension (when alwaysOpen:true)\n      if ($.isEmptyObject(o.display)) {\n        // set keyboard language\n        base.updateLanguage();\n      }\n\n      var index,\n          row,\n          $row,\n          currentSet,\n          kbcss = $keyboard.css,\n          sets = 0,\n          layout = $keyboard.builtLayouts[name || base.layout || o.layout] = {\n        mappedKeys: {},\n        acceptedKeys: []\n      },\n          acceptedKeys = layout.acceptedKeys = o.restrictInclude ? ('' + o.restrictInclude).split(/\\s+/) || [] : [],\n          // using $layout temporarily to hold keyboard popup classnames\n      $layout = kbcss.keyboard + ' ' + o.css.popup + ' ' + o.css.container + (o.alwaysOpen || o.userClosed ? ' ' + kbcss.alwaysOpen : ''),\n          container = $('<div />').addClass($layout).attr({\n        'role': 'textbox'\n      }).hide(); // allow adding \"{space}\" as an accepted key - Fixes #627\n\n      index = $.inArray('{space}', acceptedKeys);\n\n      if (index > -1) {\n        acceptedKeys[index] = ' ';\n      } // verify layout or setup custom keyboard\n\n\n      if (internal && o.layout === 'custom' || !$keyboard.layouts.hasOwnProperty(o.layout)) {\n        o.layout = 'custom';\n        $layout = $keyboard.layouts.custom = o.customLayout || {\n          'normal': ['{cancel}']\n        };\n      } else {\n        $layout = $keyboard.layouts[internal ? o.layout : name || base.layout || o.layout];\n      } // Main keyboard building loop\n\n\n      $.each($layout, function (set, keySet) {\n        // skip layout name & lang settings\n        if (set !== '' && !/^(name|lang|rtl)$/i.test(set)) {\n          // keep backwards compatibility for change from default to normal naming\n          if (set === 'default') {\n            set = 'normal';\n          }\n\n          sets++;\n          $row = $('<div />').attr('name', set) // added for typing extension\n          .addClass(kbcss.keySet + ' ' + kbcss.keySet + '-' + set).appendTo(container).toggle(set === 'normal');\n\n          for (row = 0; row < keySet.length; row++) {\n            // remove extra spaces before spliting (regex probably could be improved)\n            currentSet = $.trim(keySet[row]).replace(/\\{(\\.?)[\\s+]?:[\\s+]?(\\.?)\\}/g, '{$1:$2}');\n            base.buildRow($row, row, currentSet.split(/\\s+/), acceptedKeys);\n            $row.find('.' + kbcss.keyButton + ',.' + kbcss.keySpacer).filter(':last').after('<br class=\"' + kbcss.endRow + '\"/>');\n          }\n        }\n      });\n\n      if (sets > 1) {\n        base.sets = true;\n      }\n\n      layout.hasMappedKeys = !$.isEmptyObject(layout.mappedKeys);\n      layout.$keyboard = container;\n      return container;\n    };\n\n    base.buildRow = function ($row, row, keys, acceptedKeys) {\n      var t,\n          txt,\n          key,\n          isAction,\n          action,\n          margin,\n          kbcss = $keyboard.css;\n\n      for (key = 0; key < keys.length; key++) {\n        // used by addKey function\n        base.temp = [$row, row, key];\n        isAction = false; // ignore empty keys\n\n        if (keys[key].length === 0) {\n          continue;\n        } // process here if it's an action key\n\n\n        if (/^\\{\\S+\\}$/.test(keys[key])) {\n          action = keys[key].match(/^\\{(\\S+)\\}$/)[1]; // add active class if there are double exclamation points in the name\n\n          if (/\\!\\!/.test(action)) {\n            action = action.replace('!!', '');\n            isAction = true;\n          } // add empty space\n\n\n          if (/^sp:((\\d+)?([\\.|,]\\d+)?)(em|px)?$/i.test(action)) {\n            // not perfect globalization, but allows you to use {sp:1,1em}, {sp:1.2em} or {sp:15px}\n            margin = parseFloat(action.replace(/,/, '.').match(/^sp:((\\d+)?([\\.|,]\\d+)?)(em|px)?$/i)[1] || 0);\n            $('<span class=\"' + kbcss.keyText + '\"></span>') // previously {sp:1} would add 1em margin to each side of a 0 width span\n            // now Firefox doesn't seem to render 0px dimensions, so now we set the\n            // 1em margin x 2 for the width\n            .width(action.match(/px/i) ? margin + 'px' : margin * 2 + 'em').addClass(kbcss.keySpacer).appendTo($row);\n          } // add empty button\n\n\n          if (/^empty(:((\\d+)?([\\.|,]\\d+)?)(em|px)?)?$/i.test(action)) {\n            margin = /:/.test(action) ? parseFloat(action.replace(/,/, '.').match(/^empty:((\\d+)?([\\.|,]\\d+)?)(em|px)?$/i)[1] || 0) : '';\n            base.addKey('', ' ', true).addClass(o.css.buttonDisabled + ' ' + o.css.buttonEmpty).attr('aria-disabled', true).width(margin ? action.match('px') ? margin + 'px' : margin * 2 + 'em' : '');\n            continue;\n          } // meta keys\n\n\n          if (/^meta[\\w-]+\\:?(\\w+)?/i.test(action)) {\n            base.addKey(action.split(':')[0], action).addClass(kbcss.keyHasActive);\n            continue;\n          } // switch needed for action keys with multiple names/shortcuts or\n          // default will catch all others\n\n\n          txt = action.split(':');\n\n          switch (txt[0].toLowerCase()) {\n            case 'a':\n            case 'accept':\n              base.addKey('accept', action).addClass(o.css.buttonAction + ' ' + kbcss.keyAction);\n              break;\n\n            case 'alt':\n            case 'altgr':\n              base.addKey('alt', action).addClass(kbcss.keyHasActive);\n              break;\n\n            case 'b':\n            case 'bksp':\n              base.addKey('bksp', action);\n              break;\n\n            case 'c':\n            case 'cancel':\n              base.addKey('cancel', action).addClass(o.css.buttonAction + ' ' + kbcss.keyAction);\n              break;\n            // toggle combo/diacritic key\n\n            /*jshint -W083 */\n\n            case 'combo':\n              base.addKey('combo', action).addClass(kbcss.keyHasActive).attr('title', function (indx, title) {\n                // add combo key state to title\n                return title + ' ' + o.display[o.useCombos ? 'active' : 'disabled'];\n              }).toggleClass(o.css.buttonActive, o.useCombos);\n              break;\n            // Decimal - unique decimal point (num pad layout)\n\n            case 'dec':\n              acceptedKeys.push(base.decimal ? '.' : ',');\n              base.addKey('dec', action);\n              break;\n\n            case 'e':\n            case 'enter':\n              base.addKey('enter', action).addClass(o.css.buttonAction + ' ' + kbcss.keyAction);\n              break;\n\n            case 'lock':\n              base.addKey('lock', action).addClass(kbcss.keyHasActive);\n              break;\n\n            case 's':\n            case 'shift':\n              base.addKey('shift', action).addClass(kbcss.keyHasActive);\n              break;\n            // Change sign (for num pad layout)\n\n            case 'sign':\n              acceptedKeys.push('-');\n              base.addKey('sign', action);\n              break;\n\n            case 'space':\n              acceptedKeys.push(' ');\n              base.addKey('space', action);\n              break;\n\n            case 't':\n            case 'tab':\n              base.addKey('tab', action);\n              break;\n\n            default:\n              if ($keyboard.keyaction.hasOwnProperty(txt[0])) {\n                base.addKey(txt[0], action).toggleClass(o.css.buttonAction + ' ' + kbcss.keyAction, isAction);\n              }\n\n          }\n        } else {\n          // regular button (not an action key)\n          t = keys[key];\n          base.addKey(t, t, true);\n        }\n      }\n    };\n\n    base.removeBindings = function (namespace) {\n      $(document).unbind(namespace);\n\n      if (base.el.ownerDocument !== document) {\n        $(base.el.ownerDocument).unbind(namespace);\n      }\n\n      $(window).unbind(namespace);\n      base.$el.unbind(namespace);\n    };\n\n    base.removeKeyboard = function () {\n      base.$decBtn = []; // base.$preview === base.$el when o.usePreview is false - fixes #442\n\n      if (o.usePreview) {\n        base.$preview.removeData('keyboard');\n      }\n\n      base.$preview.unbind(base.namespace + 'keybindings');\n      base.preview = null;\n      base.$preview = null;\n      base.$previewCopy = null;\n      base.$keyboard.removeData('keyboard');\n      base.$keyboard.remove();\n      base.$keyboard = [];\n      base.isOpen = false;\n      base.isCurrent(false);\n    };\n\n    base.destroy = function (callback) {\n      var index,\n          kbcss = $keyboard.css,\n          len = base.extensionNamespace.length,\n          tmp = [kbcss.input, kbcss.locked, kbcss.placeholder, kbcss.noKeyboard, kbcss.alwaysOpen, o.css.input, kbcss.isCurrent].join(' ');\n      clearTimeout(base.timer);\n      clearTimeout(base.timer2);\n      clearTimeout(base.timer3);\n\n      if (base.$keyboard.length) {\n        base.removeKeyboard();\n      }\n\n      if (base.options.openOn) {\n        base.removeBindings(base.options.openOn);\n      }\n\n      base.removeBindings(base.namespace);\n      base.removeBindings(base.namespace + 'callbacks');\n\n      for (index = 0; index < len; index++) {\n        base.removeBindings(base.extensionNamespace[index]);\n      }\n\n      base.el.active = false;\n      base.$el.removeClass(tmp).removeAttr('aria-haspopup').removeAttr('role').removeData('keyboard');\n      base = null;\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }; // Run initializer\n\n\n    base.init();\n  }; // end $.keyboard definition\n  // event.which & ASCII values\n\n\n  $keyboard.keyCodes = {\n    backSpace: 8,\n    tab: 9,\n    enter: 13,\n    capsLock: 20,\n    escape: 27,\n    space: 32,\n    pageUp: 33,\n    pageDown: 34,\n    end: 35,\n    home: 36,\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    insert: 45,\n    delete: 46,\n    // event.which keyCodes (uppercase letters)\n    A: 65,\n    Z: 90,\n    V: 86,\n    C: 67,\n    X: 88,\n    // ASCII lowercase a & z\n    a: 97,\n    z: 122\n  };\n  $keyboard.css = {\n    // keyboard id suffix\n    idSuffix: '_keyboard',\n    // class name to set initial focus\n    initialFocus: 'keyboard-init-focus',\n    // element class names\n    input: 'ui-keyboard-input',\n    inputClone: 'ui-keyboard-preview-clone',\n    wrapper: 'ui-keyboard-preview-wrapper',\n    preview: 'ui-keyboard-preview',\n    keyboard: 'ui-keyboard',\n    keySet: 'ui-keyboard-keyset',\n    keyButton: 'ui-keyboard-button',\n    keyWide: 'ui-keyboard-widekey',\n    keyPrefix: 'ui-keyboard-',\n    keyText: 'ui-keyboard-text',\n    // span with button text\n    keyHasActive: 'ui-keyboard-hasactivestate',\n    keyAction: 'ui-keyboard-actionkey',\n    keySpacer: 'ui-keyboard-spacer',\n    // empty keys\n    keyToggle: 'ui-keyboard-toggle',\n    keyDisabled: 'ui-keyboard-disabled',\n    // Class for BRs with a div wrapper inside of contenteditable\n    divWrapperCE: 'ui-keyboard-div-wrapper',\n    // states\n    locked: 'ui-keyboard-lockedinput',\n    alwaysOpen: 'ui-keyboard-always-open',\n    noKeyboard: 'ui-keyboard-nokeyboard',\n    placeholder: 'ui-keyboard-placeholder',\n    hasFocus: 'ui-keyboard-has-focus',\n    isCurrent: 'ui-keyboard-input-current',\n    // validation & autoaccept\n    inputValid: 'ui-keyboard-valid-input',\n    inputInvalid: 'ui-keyboard-invalid-input',\n    inputAutoAccepted: 'ui-keyboard-autoaccepted',\n    endRow: 'ui-keyboard-button-endrow' // class added to <br>\n\n  };\n  $keyboard.events = {\n    // keyboard events\n    kbChange: 'keyboardChange',\n    kbBeforeClose: 'beforeClose',\n    kbBeforeVisible: 'beforeVisible',\n    kbVisible: 'visible',\n    kbInit: 'initialized',\n    kbInactive: 'inactive',\n    kbHidden: 'hidden',\n    kbRepeater: 'repeater',\n    kbKeysetChange: 'keysetChange',\n    // input events\n    inputAccepted: 'accepted',\n    inputCanceled: 'canceled',\n    inputChange: 'change',\n    inputRestricted: 'restricted'\n  }; // Action key function list\n\n  $keyboard.keyaction = {\n    accept: function (base) {\n      base.close(true); // same as base.accept();\n\n      return false; // return false prevents further processing\n    },\n    alt: function (base) {\n      base.altActive = !base.altActive;\n      base.showSet();\n    },\n    bksp: function (base) {\n      if (base.isContentEditable) {\n        base.execCommand('delete'); // save new caret position\n\n        base.saveCaret();\n      } else {\n        // the script looks for the '\\b' string and initiates a backspace\n        base.insertText('\\b');\n      }\n    },\n    cancel: function (base) {\n      base.close();\n      return false; // return false prevents further processing\n    },\n    clear: function (base) {\n      base.$preview[base.isContentEditable ? 'text' : 'val']('');\n\n      if (base.$decBtn.length) {\n        base.checkDecimal();\n      }\n    },\n    combo: function (base) {\n      var o = base.options,\n          c = !o.useCombos,\n          $combo = base.$keyboard.find('.' + $keyboard.css.keyPrefix + 'combo');\n      o.useCombos = c;\n      $combo.toggleClass(o.css.buttonActive, c) // update combo key state\n      .attr('title', $combo.attr('data-title') + ' (' + o.display[c ? 'active' : 'disabled'] + ')');\n\n      if (c) {\n        base.checkCombos();\n      }\n\n      return false;\n    },\n    dec: function (base) {\n      base.insertText(base.decimal ? '.' : ',');\n    },\n    del: function (base) {\n      if (base.isContentEditable) {\n        base.execCommand('forwardDelete');\n      } else {\n        // the script looks for the '{d}' string and initiates a delete\n        base.insertText('{d}');\n      }\n    },\n    // resets to base keyset (deprecated because \"default\" is a reserved word)\n    'default': function (base) {\n      base.shiftActive = base.altActive = base.metaActive = false;\n      base.showSet();\n    },\n    // el is the pressed key (button) object; it is null when the real keyboard enter is pressed\n    enter: function (base, el, e) {\n      var o = base.options; // shift+enter in textareas\n\n      if (e.shiftKey) {\n        // textarea, input & contenteditable - enterMod + shift + enter = accept,\n        //  then go to prev; base.switchInput(goToNext, autoAccept)\n        // textarea & input - shift + enter = accept (no navigation)\n        return o.enterNavigation ? base.switchInput(!e[o.enterMod], true) : base.close(true);\n      } // input only - enterMod + enter to navigate\n\n\n      if (o.enterNavigation && (!base.isTextArea || e[o.enterMod])) {\n        return base.switchInput(!e[o.enterMod], o.autoAccept ? 'true' : false);\n      } // pressing virtual enter button inside of a textarea - add a carriage return\n      // e.target is span when clicking on text and button at other times\n\n\n      if (base.isTextArea && $(e.target).closest('button').length) {\n        // IE8 fix (space + \\n) - fixes #71 thanks Blookie!\n        base.insertText(($keyboard.msie ? ' ' : '') + '\\n');\n      }\n\n      if (base.isContentEditable && !o.enterNavigation) {\n        base.execCommand('insertHTML', '<div><br class=\"' + $keyboard.css.divWrapperCE + '\"></div>'); // Using backspace on wrapped BRs will now shift the textnode inside of the wrapped BR\n        // Although not ideal, the caret is moved after the block - see the wiki page for\n        // more details: https://github.com/Mottie/Keyboard/wiki/Contenteditable#limitations\n        // move caret after a delay to allow rendering of HTML\n\n        setTimeout(function () {\n          $keyboard.keyaction.right(base);\n          base.saveCaret();\n        }, 0);\n      }\n    },\n    // caps lock key\n    lock: function (base) {\n      base.last.keyset[0] = base.shiftActive = base.capsLock = !base.capsLock;\n      base.showSet();\n    },\n    left: function (base) {\n      var p = $keyboard.caret(base.$preview);\n\n      if (p.start - 1 >= 0) {\n        // move both start and end of caret (prevents text selection) & save caret position\n        base.last.start = base.last.end = p.start - 1;\n        $keyboard.caret(base.$preview, base.last);\n        base.setScroll();\n      }\n    },\n    meta: function (base, el) {\n      var $el = $(el);\n      base.metaActive = !$el.hasClass(base.options.css.buttonActive);\n      base.showSet($el.attr('data-name'));\n    },\n    next: function (base) {\n      base.switchInput(true, base.options.autoAccept);\n      return false;\n    },\n    // same as 'default' - resets to base keyset\n    normal: function (base) {\n      base.shiftActive = base.altActive = base.metaActive = false;\n      base.showSet();\n    },\n    prev: function (base) {\n      base.switchInput(false, base.options.autoAccept);\n      return false;\n    },\n    right: function (base) {\n      var p = $keyboard.caret(base.$preview),\n          len = base.isContentEditable ? $keyboard.getEditableLength(base.el) : base.getValue().length;\n\n      if (p.end + 1 <= len) {\n        // move both start and end of caret to end position\n        // (prevents text selection) && save caret position\n        base.last.start = base.last.end = p.end + 1;\n        $keyboard.caret(base.$preview, base.last);\n        base.setScroll();\n      }\n    },\n    shift: function (base) {\n      base.last.keyset[0] = base.shiftActive = !base.shiftActive;\n      base.showSet();\n    },\n    sign: function (base) {\n      var signRegex = base.decimal ? /^[+-]?\\d*\\.?\\d*$/ : /^[+-]?\\d*,?\\d*$/;\n\n      if (signRegex.test(base.getValue())) {\n        var caret,\n            p = $keyboard.caret(base.$preview),\n            val = base.getValue(),\n            len = base.isContentEditable ? $keyboard.getEditableLength(base.el) : val.length;\n        base.setValue(val * -1);\n        caret = len - val.length;\n        base.last.start = p.start + caret;\n        base.last.end = p.end + caret;\n        $keyboard.caret(base.$preview, base.last);\n        base.setScroll();\n      }\n    },\n    space: function (base) {\n      base.insertText(' ');\n    },\n    tab: function (base) {\n      var o = base.options;\n\n      if (!base.isTextArea) {\n        if (o.tabNavigation) {\n          return base.switchInput(!base.shiftActive, true);\n        } else if (base.isInput) {\n          // ignore tab key in input\n          return false;\n        }\n      }\n\n      base.insertText('\\t');\n    },\n    toggle: function (base) {\n      base.enabled = !base.enabled;\n      base.toggle();\n    },\n    // *** Special action keys: NBSP & zero-width characters ***\n    // Non-breaking space\n    NBSP: '\\u00a0',\n    // zero width space\n    ZWSP: '\\u200b',\n    // Zero width non-joiner\n    ZWNJ: '\\u200c',\n    // Zero width joiner\n    ZWJ: '\\u200d',\n    // Left-to-right Mark\n    LRM: '\\u200e',\n    // Right-to-left Mark\n    RLM: '\\u200f'\n  }; // Default keyboard layouts\n\n  $keyboard.builtLayouts = {};\n  $keyboard.layouts = {\n    'alpha': {\n      'normal': ['` 1 2 3 4 5 6 7 8 9 0 - = {bksp}', '{tab} a b c d e f g h i j [ ] \\\\', 'k l m n o p q r s ; \\' {enter}', '{shift} t u v w x y z , . / {shift}', '{accept} {space} {cancel}'],\n      'shift': ['~ ! @ # $ % ^ & * ( ) _ + {bksp}', '{tab} A B C D E F G H I J { } |', 'K L M N O P Q R S : \" {enter}', '{shift} T U V W X Y Z < > ? {shift}', '{accept} {space} {cancel}']\n    },\n    'qwerty': {\n      'normal': ['` 1 2 3 4 5 6 7 8 9 0 - = {bksp}', '{tab} q w e r t y u i o p [ ] \\\\', 'a s d f g h j k l ; \\' {enter}', '{shift} z x c v b n m , . / {shift}', '{accept} {space} {cancel}'],\n      'shift': ['~ ! @ # $ % ^ & * ( ) _ + {bksp}', '{tab} Q W E R T Y U I O P { } |', 'A S D F G H J K L : \" {enter}', '{shift} Z X C V B N M < > ? {shift}', '{accept} {space} {cancel}']\n    },\n    'international': {\n      'normal': ['` 1 2 3 4 5 6 7 8 9 0 - = {bksp}', '{tab} q w e r t y u i o p [ ] \\\\', 'a s d f g h j k l ; \\' {enter}', '{shift} z x c v b n m , . / {shift}', '{accept} {alt} {space} {alt} {cancel}'],\n      'shift': ['~ ! @ # $ % ^ & * ( ) _ + {bksp}', '{tab} Q W E R T Y U I O P { } |', 'A S D F G H J K L : \" {enter}', '{shift} Z X C V B N M < > ? {shift}', '{accept} {alt} {space} {alt} {cancel}'],\n      'alt': ['~ \\u00a1 \\u00b2 \\u00b3 \\u00a4 \\u20ac \\u00bc \\u00bd \\u00be \\u2018 \\u2019 \\u00a5 \\u00d7 {bksp}', '{tab} \\u00e4 \\u00e5 \\u00e9 \\u00ae \\u00fe \\u00fc \\u00fa \\u00ed \\u00f3 \\u00f6 \\u00ab \\u00bb \\u00ac', '\\u00e1 \\u00df \\u00f0 f g h j k \\u00f8 \\u00b6 \\u00b4 {enter}', '{shift} \\u00e6 x \\u00a9 v b \\u00f1 \\u00b5 \\u00e7 > \\u00bf {shift}', '{accept} {alt} {space} {alt} {cancel}'],\n      'alt-shift': ['~ \\u00b9 \\u00b2 \\u00b3 \\u00a3 \\u20ac \\u00bc \\u00bd \\u00be \\u2018 \\u2019 \\u00a5 \\u00f7 {bksp}', '{tab} \\u00c4 \\u00c5 \\u00c9 \\u00ae \\u00de \\u00dc \\u00da \\u00cd \\u00d3 \\u00d6 \\u00ab \\u00bb \\u00a6', '\\u00c4 \\u00a7 \\u00d0 F G H J K \\u00d8 \\u00b0 \\u00a8 {enter}', '{shift} \\u00c6 X \\u00a2 V B \\u00d1 \\u00b5 \\u00c7 . \\u00bf {shift}', '{accept} {alt} {space} {alt} {cancel}']\n    },\n    'colemak': {\n      'normal': ['` 1 2 3 4 5 6 7 8 9 0 - = {bksp}', '{tab} q w f p g j l u y ; [ ] \\\\', '{bksp} a r s t d h n e i o \\' {enter}', '{shift} z x c v b k m , . / {shift}', '{accept} {space} {cancel}'],\n      'shift': ['~ ! @ # $ % ^ & * ( ) _ + {bksp}', '{tab} Q W F P G J L U Y : { } |', '{bksp} A R S T D H N E I O \" {enter}', '{shift} Z X C V B K M < > ? {shift}', '{accept} {space} {cancel}']\n    },\n    'dvorak': {\n      'normal': ['` 1 2 3 4 5 6 7 8 9 0 [ ] {bksp}', '{tab} \\' , . p y f g c r l / = \\\\', 'a o e u i d h t n s - {enter}', '{shift} ; q j k x b m w v z {shift}', '{accept} {space} {cancel}'],\n      'shift': ['~ ! @ # $ % ^ & * ( ) { } {bksp}', '{tab} \" < > P Y F G C R L ? + |', 'A O E U I D H T N S _ {enter}', '{shift} : Q J K X B M W V Z {shift}', '{accept} {space} {cancel}']\n    },\n    'num': {\n      'normal': ['= ( ) {b}', '{clear} / * -', '7 8 9 +', '4 5 6 {sign}', '1 2 3 %', '0 {dec} {a} {c}']\n    }\n  };\n  $keyboard.language = {\n    en: {\n      display: {\n        // check mark - same action as accept\n        'a': '\\u2714:Accept (Shift+Enter)',\n        'accept': 'Accept:Accept (Shift+Enter)',\n        // other alternatives \\u2311\n        'alt': 'Alt:\\u2325 AltGr',\n        // Left arrow (same as &larr;)\n        'b': '\\u232b:Backspace',\n        'bksp': 'Bksp:Backspace',\n        // big X, close - same action as cancel\n        'c': '\\u2716:Cancel (Esc)',\n        'cancel': 'Cancel:Cancel (Esc)',\n        // clear num pad\n        'clear': 'C:Clear',\n        'combo': '\\u00f6:Toggle Combo Keys',\n        // decimal point for num pad (optional), change '.' to ',' for European format\n        'dec': '.:Decimal',\n        // down, then left arrow - enter symbol\n        'e': '\\u23ce:Enter',\n        'empty': '\\u00a0',\n        'enter': 'Enter:Enter \\u23ce',\n        // left arrow (move caret)\n        'left': '\\u2190',\n        // caps lock\n        'lock': 'Lock:\\u21ea Caps Lock',\n        'next': 'Next \\u21e8',\n        'prev': '\\u21e6 Prev',\n        // right arrow (move caret)\n        'right': '\\u2192',\n        // thick hollow up arrow\n        's': '\\u21e7:Shift',\n        'shift': 'Shift:Shift',\n        // +/- sign for num pad\n        'sign': '\\u00b1:Change Sign',\n        'space': '\\u00a0:Space',\n        // right arrow to bar (used since this virtual keyboard works with one directional tabs)\n        't': '\\u21e5:Tab',\n        // \\u21b9 is the true tab symbol (left & right arrows)\n        'tab': '\\u21e5 Tab:Tab',\n        // replaced by an image\n        'toggle': ' ',\n        // added to titles of keys\n        // accept key status when acceptValid:true\n        'valid': 'valid',\n        'invalid': 'invalid',\n        // combo key states\n        'active': 'active',\n        'disabled': 'disabled'\n      },\n      // Message added to the key title while hovering, if the mousewheel plugin exists\n      wheelMessage: 'Use mousewheel to see other keys',\n      comboRegex: /([`\\'~\\^\\\"ao])([a-z])/mig,\n      combos: {\n        // grave\n        '`': {\n          a: '\\u00e0',\n          A: '\\u00c0',\n          e: '\\u00e8',\n          E: '\\u00c8',\n          i: '\\u00ec',\n          I: '\\u00cc',\n          o: '\\u00f2',\n          O: '\\u00d2',\n          u: '\\u00f9',\n          U: '\\u00d9',\n          y: '\\u1ef3',\n          Y: '\\u1ef2'\n        },\n        // acute & cedilla\n        \"'\": {\n          a: '\\u00e1',\n          A: '\\u00c1',\n          e: '\\u00e9',\n          E: '\\u00c9',\n          i: '\\u00ed',\n          I: '\\u00cd',\n          o: '\\u00f3',\n          O: '\\u00d3',\n          u: '\\u00fa',\n          U: '\\u00da',\n          y: '\\u00fd',\n          Y: '\\u00dd'\n        },\n        // umlaut/trema\n        '\"': {\n          a: '\\u00e4',\n          A: '\\u00c4',\n          e: '\\u00eb',\n          E: '\\u00cb',\n          i: '\\u00ef',\n          I: '\\u00cf',\n          o: '\\u00f6',\n          O: '\\u00d6',\n          u: '\\u00fc',\n          U: '\\u00dc',\n          y: '\\u00ff',\n          Y: '\\u0178'\n        },\n        // circumflex\n        '^': {\n          a: '\\u00e2',\n          A: '\\u00c2',\n          e: '\\u00ea',\n          E: '\\u00ca',\n          i: '\\u00ee',\n          I: '\\u00ce',\n          o: '\\u00f4',\n          O: '\\u00d4',\n          u: '\\u00fb',\n          U: '\\u00db',\n          y: '\\u0177',\n          Y: '\\u0176'\n        },\n        // tilde\n        '~': {\n          a: '\\u00e3',\n          A: '\\u00c3',\n          e: '\\u1ebd',\n          E: '\\u1ebc',\n          i: '\\u0129',\n          I: '\\u0128',\n          o: '\\u00f5',\n          O: '\\u00d5',\n          u: '\\u0169',\n          U: '\\u0168',\n          y: '\\u1ef9',\n          Y: '\\u1ef8',\n          n: '\\u00f1',\n          N: '\\u00d1'\n        }\n      }\n    }\n  };\n  $keyboard.defaultOptions = {\n    // set this to ISO 639-1 language code to override language set by the layout\n    // http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n    // language defaults to 'en' if not found\n    language: null,\n    rtl: false,\n    // *** choose layout & positioning ***\n    layout: 'qwerty',\n    customLayout: null,\n    position: {\n      // optional - null (attach to input/textarea) or a jQuery object (attach elsewhere)\n      of: null,\n      my: 'center top',\n      at: 'center top',\n      // used when 'usePreview' is false (centers the keyboard at the bottom of the input/textarea)\n      at2: 'center bottom'\n    },\n    // allow jQuery position utility to reposition the keyboard on window resize\n    reposition: true,\n    // preview added above keyboard if true, original input/textarea used if false\n    usePreview: true,\n    // if true, the keyboard will always be visible\n    alwaysOpen: false,\n    // give the preview initial focus when the keyboard becomes visible\n    initialFocus: true,\n    // avoid changing the focus (hardware keyboard probably won't work)\n    noFocus: false,\n    // if true, keyboard will remain open even if the input loses focus, but closes on escape\n    // or when another keyboard opens.\n    stayOpen: false,\n    // Prevents the keyboard from closing when the user clicks or presses outside the keyboard\n    // the `autoAccept` option must also be set to true when this option is true or changes are lost\n    userClosed: false,\n    // if true, keyboard will not close if you press escape.\n    ignoreEsc: false,\n    // if true, keyboard will only closed on click event instead of mousedown and touchstart\n    closeByClickEvent: false,\n    css: {\n      // input & preview\n      input: 'ui-widget-content ui-corner-all',\n      // keyboard container\n      container: 'ui-widget-content ui-widget ui-corner-all ui-helper-clearfix',\n      // keyboard container extra class (same as container, but separate)\n      popup: '',\n      // default state\n      buttonDefault: 'ui-state-default ui-corner-all',\n      // hovered button\n      buttonHover: 'ui-state-hover',\n      // Action keys (e.g. Accept, Cancel, Tab, etc); this replaces 'actionClass' option\n      buttonAction: 'ui-state-active',\n      // Active keys (e.g. shift down, meta keyset active, combo keys active)\n      buttonActive: 'ui-state-active',\n      // used when disabling the decimal button {dec} when a decimal exists in the input area\n      buttonDisabled: 'ui-state-disabled',\n      buttonEmpty: 'ui-keyboard-empty'\n    },\n    // *** Useability ***\n    // Auto-accept content when clicking outside the keyboard (popup will close)\n    autoAccept: false,\n    // Auto-accept content even if the user presses escape (only works if `autoAccept` is `true`)\n    autoAcceptOnEsc: false,\n    // Prevents direct input in the preview window when true\n    lockInput: false,\n    // Prevent keys not in the displayed keyboard from being typed in\n    restrictInput: false,\n    // Additional allowed characters while restrictInput is true\n    restrictInclude: '',\n    // e.g. 'a b foo \\ud83d\\ude38'\n    // Check input against validate function, if valid the accept button gets a class name of\n    // 'ui-keyboard-valid-input'. If invalid, the accept button gets a class name of\n    // 'ui-keyboard-invalid-input'\n    acceptValid: false,\n    // Auto-accept when input is valid; requires `acceptValid` set `true` & validate callback\n    autoAcceptOnValid: false,\n    // Check validation on keyboard initialization. If false, the \"Accept\" key state (color)\n    // will not change to show if the content is valid, or not\n    checkValidOnInit: true,\n    // if acceptValid is true & the validate function returns a false, this option will cancel\n    // a keyboard close only after the accept button is pressed\n    cancelClose: true,\n    // tab to go to next, shift-tab for previous (default behavior)\n    tabNavigation: false,\n    // enter for next input; shift+enter accepts content & goes to next\n    // shift + 'enterMod' + enter ('enterMod' is the alt as set below) will accept content and go\n    // to previous in a textarea\n    enterNavigation: false,\n    // mod key options: 'ctrlKey', 'shiftKey', 'altKey', 'metaKey' (MAC only)\n    enterMod: 'altKey',\n    // alt-enter to go to previous; shift-alt-enter to accept & go to previous\n    // if true, the next button will stop on the last keyboard input/textarea; prev button stops at first\n    // if false, the next button will wrap to target the first input/textarea; prev will go to the last\n    stopAtEnd: true,\n    // Set this to append the keyboard after the input/textarea (appended to the input/textarea parent).\n    // This option works best when the input container doesn't have a set width & when the 'tabNavigation'\n    // option is true.\n    appendLocally: false,\n    // When appendLocally is false, the keyboard will be appended to this object\n    appendTo: 'body',\n    // Wrap all <br>s inside of a contenteditable in a div; without wrapping, the caret\n    // position will not be accurate\n    wrapBRs: true,\n    // If false, the shift key will remain active until the next key is (mouse) clicked on; if true it will\n    // stay active until pressed again\n    stickyShift: true,\n    // Prevent pasting content into the area\n    preventPaste: false,\n    // caret placed at the end of any text when keyboard becomes visible\n    caretToEnd: false,\n    // caret stays this many pixels from the edge of the input while scrolling left/right;\n    // use \"c\" or \"center\" to center the caret while scrolling\n    scrollAdjustment: 10,\n    // Set the max number of characters allowed in the input, setting it to false disables this option\n    maxLength: false,\n    // allow inserting characters @ caret when maxLength is set\n    maxInsert: true,\n    // Mouse repeat delay - when clicking/touching a virtual keyboard key, after this delay the key will\n    // start repeating\n    repeatDelay: 500,\n    // Mouse repeat rate - after the repeatDelay, this is the rate (characters per second) at which the\n    // key is repeated Added to simulate holding down a real keyboard key and having it repeat. I haven't\n    // calculated the upper limit of this rate, but it is limited to how fast the javascript can process\n    // the keys. And for me, in Firefox, it's around 20.\n    repeatRate: 20,\n    // resets the keyboard to the default keyset when visible\n    resetDefault: true,\n    // Event (namespaced) on the input to reveal the keyboard. To disable it, just set it to ''.\n    openOn: 'focus',\n    // enable the keyboard on readonly inputs\n    activeOnReadonly: false,\n    // Event (namepaced) for when the character is added to the input (clicking on the keyboard)\n    keyBinding: 'mousedown touchstart',\n    // enable/disable mousewheel functionality\n    // enabling still depends on the mousewheel plugin\n    useWheel: true,\n    // combos (emulate dead keys : http://en.wikipedia.org/wiki/Keyboard_layout#US-International)\n    // if user inputs `a the script converts it to à, ^o becomes ô, etc.\n    useCombos: true,\n\n    /*\r\n    \t// *** Methods ***\r\n    \t// commenting these out to reduce the size of the minified version\r\n    \t// Callbacks - attach a function to any of these callbacks as desired\r\n    \tinitialized   : function(e, keyboard, el) {},\r\n    \tbeforeVisible : function(e, keyboard, el) {},\r\n    \tvisible       : function(e, keyboard, el) {},\r\n    \tbeforeInsert  : function(e, keyboard, el, textToAdd) { return textToAdd; },\r\n    \tchange        : function(e, keyboard, el) {},\r\n    \tbeforeClose   : function(e, keyboard, el, accepted) {},\r\n    \taccepted      : function(e, keyboard, el) {},\r\n    \tcanceled      : function(e, keyboard, el) {},\r\n    \trestricted    : function(e, keyboard, el) {},\r\n    \thidden        : function(e, keyboard, el) {},\r\n    \t// called instead of base.switchInput\r\n    \tswitchInput   : function(keyboard, goToNext, isAccepted) {},\r\n    \t// used if you want to create a custom layout or modify the built-in keyboard\r\n    \tcreate        : function(keyboard) { return keyboard.buildKeyboard(); },\r\n    \t\t\t// build key callback\r\n    \tbuildKey : function( keyboard, data ) {\r\n    \t\t/ *\r\n    \t\tdata = {\r\n    \t\t// READ ONLY\r\n    \t\tisAction : [boolean] true if key is an action key\r\n    \t\tname     : [string]  key class name suffix ( prefix = 'ui-keyboard-' );\r\n    \t\t\t\t\t\t\t\t\t\t\t\t may include decimal ascii value of character\r\n    \t\tvalue    : [string]  text inserted (non-action keys)\r\n    \t\ttitle    : [string]  title attribute of key\r\n    \t\taction   : [string]  keyaction name\r\n    \t\thtml     : [string]  HTML of the key; it includes a <span> wrapping the text\r\n    \t\t// use to modify key HTML\r\n    \t\t$key     : [object]  jQuery selector of key which is already appended to keyboard\r\n    \t\t}\r\n    \t\t* /\r\n    \t\treturn data;\r\n    \t},\r\n    */\n    // this callback is called, if the acceptValid is true, and just before the 'beforeClose' to check\n    // the value if the value is valid, return true and the keyboard will continue as it should\n    // (close if not always open, etc). If the value is not valid, return false and clear the keyboard\n    // value ( like this \"keyboard.$preview.val('');\" ), if desired. The validate function is called after\n    // each input, the 'isClosing' value will be false; when the accept button is clicked,\n    // 'isClosing' is true\n    validate: function\n      /* keyboard, value, isClosing */\n    () {\n      return true;\n    }\n  };\n  $keyboard.supportedInputTypes = ['text', 'search', 'url', 'tel', 'password']; // for checking combos\n\n  $keyboard.comboRegex = /([`\\'~\\^\\\"ao])([a-z])/mig; // store current keyboard element; used by base.isCurrent()\n\n  $keyboard.currentKeyboard = '';\n  $('<!--[if lte IE 8]><script>jQuery(\"body\").addClass(\"oldie\");</script><![endif]--><!--[if IE]>' + '<script>jQuery(\"body\").addClass(\"ie\");</script><![endif]-->').appendTo('body').remove();\n  $keyboard.msie = $('body').hasClass('oldie'); // Old IE flag, used for caret positioning\n\n  $keyboard.allie = $('body').hasClass('ie');\n  $keyboard.watermark = typeof document.createElement('input').placeholder !== 'undefined';\n\n  $keyboard.checkCaretSupport = function () {\n    if (typeof $keyboard.checkCaret !== 'boolean') {\n      // Check if caret position is saved when input is hidden or loses focus\n      // (*cough* all versions of IE and I think Opera has/had an issue as well\n      var $temp = $('<div style=\"height:0px;width:0px;overflow:hidden;position:fixed;top:0;left:-100px;\">' + '<input type=\"text\" value=\"testing\"/></div>').prependTo('body'); // stop page scrolling\n\n      $keyboard.caret($temp.find('input'), 3, 3); // Also save caret position of the input if it is locked\n\n      $keyboard.checkCaret = $keyboard.caret($temp.find('input').hide().show()).start !== 3;\n      $temp.remove();\n    }\n\n    return $keyboard.checkCaret;\n  };\n\n  $keyboard.caret = function ($el, param1, param2) {\n    if (!$el || !$el.length || $el.is(':hidden') || $el.css('visibility') === 'hidden') {\n      return {};\n    }\n\n    var start,\n        end,\n        txt,\n        pos,\n        kb = $el.data('keyboard'),\n        noFocus = kb && kb.options.noFocus,\n        formEl = /(textarea|input)/i.test($el[0].nodeName);\n\n    if (!noFocus) {\n      $el.focus();\n    } // set caret position\n\n\n    if (typeof param1 !== 'undefined') {\n      // allow setting caret using ( $el, { start: x, end: y } )\n      if (typeof param1 === 'object' && 'start' in param1 && 'end' in param1) {\n        start = param1.start;\n        end = param1.end;\n      } else if (typeof param2 === 'undefined') {\n        param2 = param1; // set caret using start position\n      } // set caret using ( $el, start, end );\n\n\n      if (typeof param1 === 'number' && typeof param2 === 'number') {\n        start = param1;\n        end = param2;\n      } else if (param1 === 'start') {\n        start = end = 0;\n      } else if (typeof param1 === 'string') {\n        // unknown string setting, move caret to end\n        start = end = 'end';\n      } // *** SET CARET POSITION ***\n      // modify the line below to adapt to other caret plugins\n\n\n      return formEl ? $el.caret(start, end, noFocus) : $keyboard.setEditableCaret($el, start, end);\n    } // *** GET CARET POSITION ***\n    // modify the line below to adapt to other caret plugins\n\n\n    if (formEl) {\n      // modify the line below to adapt to other caret plugins\n      pos = $el.caret();\n    } else {\n      // contenteditable\n      pos = $keyboard.getEditableCaret($el[0]);\n    }\n\n    start = pos.start;\n    end = pos.end; // *** utilities ***\n\n    txt = formEl && $el[0].value || $el.text() || '';\n    return {\n      start: start,\n      end: end,\n      // return selected text\n      text: txt.substring(start, end),\n      // return a replace selected string method\n      replaceStr: function (str) {\n        return txt.substring(0, start) + str + txt.substring(end, txt.length);\n      }\n    };\n  };\n\n  $keyboard.isTextNode = function (el) {\n    return el && el.nodeType === 3;\n  };\n\n  $keyboard.isBlock = function (el, node) {\n    var win = el.ownerDocument.defaultView;\n\n    if (node && node.nodeType === 1 && node !== el && win.getComputedStyle(node).display === 'block') {\n      return 1;\n    }\n\n    return 0;\n  }; // Wrap all BR's inside of contenteditable\n\n\n  $keyboard.wrapBRs = function (container) {\n    var $el = $(container).find('br:not(.' + $keyboard.css.divWrapperCE + ')');\n\n    if ($el.length) {\n      $.each($el, function (i, el) {\n        var len = el.parentNode.childNodes.length;\n\n        if ( // wrap BRs if not solo child\n        len !== 1 || // Or if BR is wrapped by a span\n        len === 1 && !$keyboard.isBlock(container, el.parentNode)) {\n          $(el).addClass($keyboard.css.divWrapperCE).wrap('<div>');\n        }\n      });\n    }\n  };\n\n  $keyboard.getEditableCaret = function (container) {\n    container = $(container)[0];\n\n    if (!container.isContentEditable) {\n      return {};\n    }\n\n    var end,\n        text,\n        options = ($(container).data('keyboard') || {}).options,\n        doc = container.ownerDocument,\n        range = doc.getSelection().getRangeAt(0),\n        result = pathToNode(range.startContainer, range.startOffset),\n        start = result.position;\n\n    if (options.wrapBRs !== false) {\n      $keyboard.wrapBRs(container);\n    }\n\n    function pathToNode(endNode, offset) {\n      var node,\n          adjust,\n          txt = '',\n          done = false,\n          position = 0,\n          nodes = $.makeArray(container.childNodes);\n\n      function checkBlock(val) {\n        if (val) {\n          position += val;\n          txt += options && options.replaceCR || '\\n';\n        }\n      }\n\n      while (!done && nodes.length) {\n        node = nodes.shift();\n\n        if (node === endNode) {\n          done = true;\n        } // Add one if previous sibling was a block node (div, p, etc)\n\n\n        adjust = $keyboard.isBlock(container, node.previousSibling);\n        checkBlock(adjust);\n\n        if ($keyboard.isTextNode(node)) {\n          position += done ? offset : node.length;\n          txt += node.textContent;\n\n          if (done) {\n            return {\n              position: position,\n              text: txt\n            };\n          }\n        } else if (!done && node.childNodes) {\n          nodes = $.makeArray(node.childNodes).concat(nodes);\n        } // Add one if we're inside a block node (div, p, etc)\n        // and previous sibling was a text node\n\n\n        adjust = $keyboard.isTextNode(node.previousSibling) && $keyboard.isBlock(container, node);\n        checkBlock(adjust);\n      }\n\n      return {\n        position: position,\n        text: txt\n      };\n    } // check of start and end are the same\n\n\n    if (range.endContainer === range.startContainer && range.endOffset === range.startOffset) {\n      end = start;\n      text = '';\n    } else {\n      result = pathToNode(range.endContainer, range.endOffset);\n      end = result.position;\n      text = result.text.substring(start, end);\n    }\n\n    return {\n      start: start,\n      end: end,\n      text: text\n    };\n  };\n\n  $keyboard.getEditableLength = function (container) {\n    var result = $keyboard.setEditableCaret(container, 'getMax'); // if not a number, the container is not a contenteditable element\n\n    return typeof result === 'number' ? result : null;\n  };\n\n  $keyboard.setEditableCaret = function (container, start, end) {\n    container = $(container)[0];\n\n    if (!container.isContentEditable) {\n      return {};\n    }\n\n    var doc = container.ownerDocument,\n        range = doc.createRange(),\n        sel = doc.getSelection(),\n        options = ($(container).data('keyboard') || {}).options,\n        s = start,\n        e = end,\n        text = '',\n        result = findNode(start === 'getMax' ? 'end' : start);\n\n    function findNode(offset) {\n      if (offset === 'end') {\n        // Set some value > content length; but return max\n        offset = container.innerHTML.length;\n      } else if (offset < 0) {\n        offset = 0;\n      }\n\n      var node,\n          check,\n          txt = '',\n          done = false,\n          position = 0,\n          last = 0,\n          max = 0,\n          nodes = $.makeArray(container.childNodes);\n\n      function updateText(val) {\n        txt += val ? options && options.replaceCR || '\\n' : '';\n        return val > 0;\n      }\n\n      function checkDone(adj) {\n        var val = position + adj;\n        last = max;\n        max += adj;\n\n        if (offset - val >= 0) {\n          position = val;\n          return offset - position <= 0;\n        }\n\n        return offset - val <= 0;\n      }\n\n      while (!done && nodes.length) {\n        node = nodes.shift(); // Add one if the previous sibling was a block node (div, p, etc)\n\n        check = $keyboard.isBlock(container, node.previousSibling);\n\n        if (updateText(check) && checkDone(check)) {\n          done = true;\n        } // Add one if we're inside a block node (div, p, etc)\n\n\n        check = $keyboard.isTextNode(node.previousSibling) && $keyboard.isBlock(container, node);\n\n        if (updateText(check) && checkDone(check)) {\n          done = true;\n        }\n\n        if ($keyboard.isTextNode(node)) {\n          txt += node.textContent;\n\n          if (checkDone(node.length)) {\n            check = offset - position === 0 && position - last >= 1 ? node.length : offset - position;\n            return {\n              node: node,\n              offset: check,\n              position: offset,\n              text: txt\n            };\n          }\n        } else if (!done && node.childNodes) {\n          nodes = $.makeArray(node.childNodes).concat(nodes);\n        }\n      }\n\n      return nodes.length ? {\n        node: node,\n        offset: offset - position,\n        position: offset,\n        text: txt\n      } : // Offset is larger than content, return max\n      {\n        node: node,\n        offset: node && node.length || 0,\n        position: max,\n        text: txt\n      };\n    }\n\n    if (result.node) {\n      s = result.position; // Adjust if start > content length\n\n      if (start === 'getMax') {\n        return s;\n      }\n\n      range.setStart(result.node, result.offset); // Only find end if > start and is defined... this allows passing\n      // setEditableCaret(el, 'end') or setEditableCaret(el, 10, 'end');\n\n      if (typeof end !== 'undefined' && end !== start) {\n        result = findNode(end);\n      }\n\n      if (result.node) {\n        e = result.position; // Adjust if end > content length\n\n        range.setEnd(result.node, result.offset);\n        text = s === e ? '' : result.text.substring(s, e);\n      }\n\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n\n    return {\n      start: s,\n      end: e,\n      text: text\n    };\n  };\n\n  $keyboard.replaceContent = function (el, param) {\n    el = $(el)[0];\n    var node,\n        i,\n        str,\n        type = typeof param,\n        caret = $keyboard.getEditableCaret(el).start,\n        charIndex = 0,\n        nodeStack = [el];\n\n    while (node = nodeStack.pop()) {\n      if ($keyboard.isTextNode(node)) {\n        if (type === 'function') {\n          if (caret >= charIndex && caret <= charIndex + node.length) {\n            node.textContent = param(node.textContent);\n          }\n        } else if (type === 'string') {\n          // maybe not the best method, but it works for simple changes\n          str = param.substring(charIndex, charIndex + node.length);\n\n          if (str !== node.textContent) {\n            node.textContent = str;\n          }\n        }\n\n        charIndex += node.length;\n      } else if (node && node.childNodes) {\n        i = node.childNodes.length;\n\n        while (i--) {\n          nodeStack.push(node.childNodes[i]);\n        }\n      }\n    }\n\n    i = $keyboard.getEditableCaret(el);\n    $keyboard.setEditableCaret(el, i.start, i.start);\n  };\n\n  $.fn.keyboard = function (options) {\n    return this.each(function () {\n      if (!$(this).data('keyboard')) {\n        /*jshint nonew:false */\n        new $.keyboard(this, options);\n      }\n    });\n  };\n\n  $.fn.getkeyboard = function () {\n    return this.data('keyboard');\n  };\n  /* Copyright (c) 2010 C. F., Wong (<a href=\"http://cloudgen.w0ng.hk\">Cloudgen Examplet Store</a>)\r\n   * Licensed under the MIT License:\r\n   * http://www.opensource.org/licenses/mit-license.php\r\n   * Highly modified from the original\r\n   */\n\n\n  $.fn.caret = function (start, end, noFocus) {\n    if (typeof this[0] === 'undefined' || this.is(':hidden') || this.css('visibility') === 'hidden' || !/(INPUT|TEXTAREA)/i.test(this[0].nodeName)) {\n      return this;\n    }\n\n    var selRange,\n        range,\n        stored_range,\n        txt,\n        val,\n        $el = this,\n        el = $el[0],\n        selection = el.ownerDocument.selection,\n        sTop = el.scrollTop,\n        ss = false,\n        supportCaret = true;\n\n    try {\n      ss = 'selectionStart' in el;\n    } catch (err) {\n      supportCaret = false;\n    }\n\n    if (supportCaret && typeof start !== 'undefined') {\n      if (!/(email|number)/i.test(el.type)) {\n        if (ss) {\n          el.selectionStart = start;\n          el.selectionEnd = end;\n        } else {\n          selRange = el.createTextRange();\n          selRange.collapse(true);\n          selRange.moveStart('character', start);\n          selRange.moveEnd('character', end - start);\n          selRange.select();\n        }\n      } // must be visible or IE8 crashes; IE9 in compatibility mode works fine - issue #56\n\n\n      if (!noFocus && ($el.is(':visible') || $el.css('visibility') !== 'hidden')) {\n        el.focus();\n      }\n\n      el.scrollTop = sTop;\n      return this;\n    }\n\n    if (/(email|number)/i.test(el.type)) {\n      // fix suggested by raduanastase (https://github.com/Mottie/Keyboard/issues/105#issuecomment-40456535)\n      start = end = $el.val().length;\n    } else if (ss) {\n      start = el.selectionStart;\n      end = el.selectionEnd;\n    } else if (selection) {\n      if (el.nodeName.toUpperCase() === 'TEXTAREA') {\n        val = $el.val();\n        range = selection.createRange();\n        stored_range = range.duplicate();\n        stored_range.moveToElementText(el);\n        stored_range.setEndPoint('EndToEnd', range); // thanks to the awesome comments in the rangy plugin\n\n        start = stored_range.text.replace(/\\r/g, '\\n').length;\n        end = start + range.text.replace(/\\r/g, '\\n').length;\n      } else {\n        val = $el.val().replace(/\\r/g, '\\n');\n        range = selection.createRange().duplicate();\n        range.moveEnd('character', val.length);\n        start = range.text === '' ? val.length : val.lastIndexOf(range.text);\n        range = selection.createRange().duplicate();\n        range.moveStart('character', -val.length);\n        end = range.text.length;\n      }\n    } else {\n      // caret positioning not supported\n      start = end = (el.value || '').length;\n    }\n\n    txt = el.value || '';\n    return {\n      start: start,\n      end: end,\n      text: txt.substring(start, end),\n      replace: function (str) {\n        return txt.substring(0, start) + str + txt.substring(end, txt.length);\n      }\n    };\n  };\n\n  return $keyboard;\n});","map":{"version":3,"sources":["C:/Users/shash/Desktop/tamil_dict/e-dict/node_modules/virtual-keyboard/dist/js/jquery.keyboard.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","$keyboard","keyboard","el","options","o","base","version","$el","data","init","initialized","isTextArea","nodeName","toLowerCase","isInput","isContentEditable","k","position","tmp","kbcss","css","kbevents","events","inArray","type","supportedInputTypes","TypeError","settings","extend","defaultOptions","active","namespace","Math","random","toString","slice","extensionNamespace","shiftActive","altActive","metaActive","sets","capsLock","rows","inPlaceholder","attr","watermark","repeatTime","repeatRate","preventDoubleEventTime","isOpen","wheel","fn","mousewheel","escapeRegex","keyCodes","alwaysAllowed","pageUp","pageDown","end","home","left","up","right","down","insert","delete","enabled","checkCaret","lockInput","checkCaretSupport","usePreview","last","start","key","val","preVal","layout","virtual","keyset","wheel_$Keys","wheelIndex","wheelLayers","temp","each","kbInit","kbBeforeVisible","kbVisible","kbHidden","inputCanceled","inputAccepted","kbBeforeClose","inputRestricted","i","callback","bind","alwaysOpen","stayOpen","document","ownerDocument","add","bindings","closeByClickEvent","split","join","e","clearTimeout","timer3","setTimeout","checkClose","addClass","input","readOnly","locked","isUnavailable","noKeyboard","openOn","bindFocus","getValue","placeholder","setValue","trigger","reveal","toggle","hasKeyboard","$toggle","find","keyToggle","preview","readonly","toggleClass","keyDisabled","keyButton","not","disabled","typing_options","text","setCurrent","$current","isCurrent","kb","isEmptyObject","close","autoAccept","removeClass","hasFocus","$preview","focus","is","activeOnReadonly","hasClass","set","cur","currentKeyboard","length","isVisible","setFocus","noFocus","setEditableCaret","caret","focusOn","timer","redraw","saveLastChange","removeKeyboard","alreadyOpen","opening","unbind","trim","contains","body","startup","originalContent","html","acceptValid","checkValidOnInit","checkValid","resetDefault","showSet","initialFocus","show","msie","width","hide","ceil","reposition","checkDecimal","lineHeight","parseInt","caretToEnd","getEditableLength","saveCaret","allie","timer2","undef","test","eventTime","Date","getTime","updateLanguage","layouts","lang","language","kblang","Object","prototype","call","display","en","combos","wheelMessage","rtl","comboRegex","regex","decimal","dec","userClosed","makePreview","layoutHash","customHash","builtLayouts","create","buildKeyboard","clone","id","idSuffix","$decBtn","keyPrefix","enterNavigation","push","enter","bindKeyboard","appendTo","appendLocally","parent","bindKeys","ui","window","of","collision","at","at2","indx","attrs","removedAttr","get","attributes","name","removeAttribute","wrapper","append","prependTo","param1","param2","result","wasSetCaret","p","elms","cloneNode","setScroll","scrollWidth","clientWidth","adjustment","direction","value","substring","max","$previewCopy","removeAttr","zIndex","visibility","inputClone","after","prepend","height","scrollTop","floor","scrollHeight","replace","scrollAdjustment","scrollLeft","blur","evt","charCode","which","k1","A","Z","k2","a","z","str","String","fromCharCode","space","event","$key","shiftKey","restrictInput","backSpace","keyCode","acceptedKeys","preventDefault","ctrlKey","metaKey","C","V","X","hasMappedKeys","mappedKeys","hasOwnProperty","insertText","beforeInsert","checkMaxLength","tab","notSwitching","keyaction","escape","ignoreEsc","autoAcceptOnEsc","throttled","checkCombos","Event","kbChange","action","change","inputChange","autoAcceptOnValid","validate","accept","keyPress","timeStamp","bksp","preventPaste","stopPropagation","bindButton","handler","button","$target","closest","on","delegate","unbindButton","off","undelegate","$keys","txt","$this","useWheel","getLayers","map","buttonDisabled","buttonHover","t","keyBinding","kbRepeater","eq","keyAction","stickyShift","target","offset","outerWidth","bottom","top","outerHeight","originalEvent","touches","pageX","pageY","mouseRepeat","repeater","throttleEvent","delta","$btn","deltaY","n","repeatKey","repeatDelay","cb","time","interm","apply","arguments","execCommand","cmd","normalize","replaceContent","insertContentEditable","isBksp","pos","len","maxLength","min","maxInsert","getKeySet","showKeySet","match","prefix","buttonActive","toShow","keySet","style","kbKeysetChange","r","t2","repl","useCombos","s","accent","letter","replaceStr","acceptedKeysRegex","v","indexOf","RegExp","$accept","valid","inputInvalid","inputValid","buttonDefault","filter","keyText","switchInput","goToNext","isAccepted","stopped","all","index","stopAtEnd","accepted","cancelClose","inputAutoAccepted","kbInactive","escClose","escCloseCallback","keepOpen","shouldStayOpen","keyBtn","processName","process","newName","charCodeAt","processKeys","parts","htmlIndex","title","addKey","keyName","regKey","keyClass","keys","keyWide","buildKey","array","hash","character","arrays","merged","customLayout","concat","internal","row","$row","currentSet","restrictInclude","$layout","popup","container","custom","buildRow","keySpacer","endRow","isAction","margin","parseFloat","buttonEmpty","keyHasActive","buttonAction","removeBindings","removeData","remove","destroy","divWrapperCE","alt","cancel","clear","combo","c","$combo","del","enterMod","lock","meta","next","normal","prev","shift","sign","signRegex","tabNavigation","NBSP","ZWSP","ZWNJ","ZWJ","LRM","RLM","E","I","O","u","U","y","Y","N","my","wrapBRs","createElement","$temp","formEl","getEditableCaret","isTextNode","nodeType","isBlock","node","win","defaultView","getComputedStyle","parentNode","childNodes","wrap","doc","range","getSelection","getRangeAt","pathToNode","startContainer","startOffset","endNode","adjust","done","nodes","makeArray","checkBlock","replaceCR","previousSibling","textContent","endContainer","endOffset","createRange","sel","findNode","innerHTML","check","updateText","checkDone","adj","setStart","setEnd","removeAllRanges","addRange","param","charIndex","nodeStack","pop","getkeyboard","selRange","stored_range","selection","sTop","ss","supportCaret","err","selectionStart","selectionEnd","createTextRange","collapse","moveStart","moveEnd","select","toUpperCase","duplicate","moveToElementText","setEndPoint","lastIndexOf"],"mappings":"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","sourcesContent":["/*! jQuery UI Virtual Keyboard v1.30.3 *//*\r\nAuthor: Jeremy Satterfield\r\nMaintained: Rob Garrison (Mottie on github)\r\nLicensed under the MIT License\r\n\r\nAn on-screen virtual keyboard embedded within the browser window which\r\nwill popup when a specified entry field is focused. The user can then\r\ntype and preview their input before Accepting or Canceling.\r\n\r\nThis plugin adds default class names to match jQuery UI theme styling.\r\nBootstrap & custom themes may also be applied - See\r\nhttps://github.com/Mottie/Keyboard#themes\r\n\r\nRequires:\r\n\tjQuery v1.4.3+\r\n\tCaret plugin (included)\r\nOptional:\r\n\tjQuery UI (position utility only) & CSS theme\r\n\tjQuery mousewheel\r\n\r\nSetup/Usage:\r\n\tPlease refer to https://github.com/Mottie/Keyboard/wiki\r\n\r\n-----------------------------------------\r\nCaret code modified from jquery.caret.1.02.js\r\nLicensed under the MIT License:\r\nhttp://www.opensource.org/licenses/mit-license.php\r\n-----------------------------------------\r\n*/\r\n/*jshint browser:true, jquery:true, unused:false */\r\n/*global require:false, define:false, module:false */\r\n;(function (factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(['jquery'], factory);\r\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n\t\tmodule.exports = factory(require('jquery'));\r\n\t} else {\r\n\t\tfactory(jQuery);\r\n\t}\r\n}(function ($) {\r\n\t'use strict';\r\n\tvar $keyboard = $.keyboard = function (el, options) {\r\n\tvar o, base = this;\r\n\r\n\tbase.version = '1.30.3';\r\n\r\n\t// Access to jQuery and DOM versions of element\r\n\tbase.$el = $(el);\r\n\tbase.el = el;\r\n\r\n\t// Add a reverse reference to the DOM object\r\n\tbase.$el.data('keyboard', base);\r\n\r\n\tbase.init = function () {\r\n\t\tbase.initialized = false;\r\n\t\tbase.isTextArea = base.el.nodeName.toLowerCase() === 'textarea';\r\n\t\tbase.isInput = base.el.nodeName.toLowerCase() === 'input';\r\n\t\t// detect contenteditable\r\n\t\tbase.isContentEditable = !base.isTextArea &&\r\n\t\t\t!base.isInput &&\r\n\t\t\tbase.el.isContentEditable;\r\n\r\n\t\tvar k, position, tmp,\r\n\t\t\tkbcss = $keyboard.css,\r\n\t\t\tkbevents = $keyboard.events;\r\n\t\tif (\r\n\t\t\tbase.isInput &&\r\n\t\t\t$.inArray((base.el.type || '').toLowerCase(), $keyboard.supportedInputTypes) < 0\r\n\t\t) {\r\n\t\t\tthrow new TypeError('Input of type \"' + base.el.type + '\" is not supported; use type text, search, URL, tel or password');\r\n\t\t}\r\n\r\n\t\tbase.settings = options || {};\r\n\t\t// shallow copy position to prevent performance issues; see #357\r\n\t\tif (options && options.position) {\r\n\t\t\tposition = $.extend({}, options.position);\r\n\t\t\toptions.position = null;\r\n\t\t}\r\n\t\tbase.options = o = $.extend(true, {}, $keyboard.defaultOptions, options);\r\n\t\tif (position) {\r\n\t\t\to.position = position;\r\n\t\t\toptions.position = position;\r\n\t\t}\r\n\r\n\t\t// keyboard is active (not destroyed);\r\n\t\tbase.el.active = true;\r\n\t\t// unique keyboard namespace\r\n\t\tbase.namespace = '.keyboard' + Math.random().toString(16).slice(2);\r\n\t\t// extension namespaces added here (to unbind listeners on base.$el upon destroy)\r\n\t\tbase.extensionNamespace = [];\r\n\t\t// Shift and Alt key toggles, sets is true if a layout has more than one keyset\r\n\t\t// used for mousewheel message\r\n\t\tbase.shiftActive = base.altActive = base.metaActive = base.sets = base.capsLock = false;\r\n\t\t// Class names of the basic key set - meta keysets are handled by the keyname\r\n\t\tbase.rows = ['', '-shift', '-alt', '-alt-shift'];\r\n\r\n\t\tbase.inPlaceholder = base.$el.attr('placeholder') || '';\r\n\t\t// html 5 placeholder/watermark\r\n\t\tbase.watermark = $keyboard.watermark && base.inPlaceholder !== '';\r\n\t\t// convert mouse repeater rate (characters per second) into a time in milliseconds.\r\n\t\tbase.repeatTime = 1000 / (o.repeatRate || 20);\r\n\t\t// delay in ms to prevent mousedown & touchstart from both firing events at the same time\r\n\t\to.preventDoubleEventTime = o.preventDoubleEventTime || 100;\r\n\t\t// flag indication that a keyboard is open\r\n\t\tbase.isOpen = false;\r\n\t\t// is mousewheel plugin loaded?\r\n\t\tbase.wheel = typeof $.fn.mousewheel === 'function';\r\n\t\t// special character in regex that need to be escaped\r\n\t\tbase.escapeRegex = /[-\\/\\\\^$*+?.()|[\\]{}]/g;\r\n\r\n\t\t// keyCode of keys always allowed to be typed\r\n\t\tk = $keyboard.keyCodes;\r\n\t\t// base.alwaysAllowed = [20,33,34,35,36,37,38,39,40,45,46];\r\n\t\tbase.alwaysAllowed = [\r\n\t\t\tk.capsLock,\r\n\t\t\tk.pageUp,\r\n\t\t\tk.pageDown,\r\n\t\t\tk.end,\r\n\t\t\tk.home,\r\n\t\t\tk.left,\r\n\t\t\tk.up,\r\n\t\t\tk.right,\r\n\t\t\tk.down,\r\n\t\t\tk.insert,\r\n\t\t\tk.delete\r\n\t\t];\r\n\t\tbase.$keyboard = [];\r\n\t\t// keyboard enabled; set to false on destroy\r\n\t\tbase.enabled = true;\r\n\r\n\t\tbase.checkCaret = (o.lockInput || $keyboard.checkCaretSupport());\r\n\r\n\t\t// disable problematic usePreview for contenteditable\r\n\t\tif (base.isContentEditable) {\r\n\t\t\to.usePreview = false;\r\n\t\t}\r\n\r\n\t\tbase.last = {\r\n\t\t\tstart: 0,\r\n\t\t\tend: 0,\r\n\t\t\tkey: '',\r\n\t\t\tval: '',\r\n\t\t\tpreVal: '',\r\n\t\t\tlayout: '',\r\n\t\t\tvirtual: true,\r\n\t\t\tkeyset: [false, false, false], // [shift, alt, meta]\r\n\t\t\twheel_$Keys: [],\r\n\t\t\twheelIndex: 0,\r\n\t\t\twheelLayers: []\r\n\t\t};\r\n\t\t// used when building the keyboard - [keyset element, row, index]\r\n\t\tbase.temp = ['', 0, 0];\r\n\r\n\t\t// Callbacks\r\n\t\t$.each([\r\n\t\t\tkbevents.kbInit,\r\n\t\t\tkbevents.kbBeforeVisible,\r\n\t\t\tkbevents.kbVisible,\r\n\t\t\tkbevents.kbHidden,\r\n\t\t\tkbevents.inputCanceled,\r\n\t\t\tkbevents.inputAccepted,\r\n\t\t\tkbevents.kbBeforeClose,\r\n\t\t\tkbevents.inputRestricted\r\n\t\t], function (i, callback) {\r\n\t\t\tif (typeof o[callback] === 'function') {\r\n\t\t\t\t// bind callback functions within options to triggered events\r\n\t\t\t\tbase.$el.bind(callback + base.namespace + 'callbacks', o[callback]);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Close with esc key & clicking outside\r\n\t\tif (o.alwaysOpen) {\r\n\t\t\to.stayOpen = true;\r\n\t\t}\r\n\r\n\t\ttmp = $(document);\r\n\t\tif (base.el.ownerDocument !== document) {\r\n\t\t\ttmp = tmp.add(base.el.ownerDocument);\r\n\t\t}\r\n\r\n\t\tvar bindings = 'keyup checkkeyboard mousedown touchstart ';\r\n\t\tif (o.closeByClickEvent) {\r\n\t\t\tbindings += 'click ';\r\n\t\t}\r\n\t\t// debounce bindings... see #542\r\n\t\ttmp.bind(bindings.split(' ').join(base.namespace + ' '), function(e) {\r\n\t\t\tclearTimeout(base.timer3);\r\n\t\t\tbase.timer3 = setTimeout(function() {\r\n\t\t\t\tbase.checkClose(e);\r\n\t\t\t}, 1);\r\n\t\t});\r\n\r\n\t\t// Display keyboard on focus\r\n\t\tbase.$el\r\n\t\t\t.addClass(kbcss.input + ' ' + o.css.input)\r\n\t\t\t.attr({\r\n\t\t\t\t'aria-haspopup': 'true',\r\n\t\t\t\t'role': 'textbox'\r\n\t\t\t});\r\n\r\n\t\t// set lockInput if the element is readonly; or make the element readonly if lockInput is set\r\n\t\tif (o.lockInput || base.el.readOnly) {\r\n\t\t\to.lockInput = true;\r\n\t\t\tbase.$el\r\n\t\t\t\t.addClass(kbcss.locked)\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t'readonly': 'readonly'\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t// add disabled/readonly class - dynamically updated on reveal\r\n\t\tif (base.isUnavailable()) {\r\n\t\t\tbase.$el.addClass(kbcss.noKeyboard);\r\n\t\t}\r\n\t\tif (o.openOn) {\r\n\t\t\tbase.bindFocus();\r\n\t\t}\r\n\r\n\t\t// Add placeholder if not supported by the browser\r\n\t\tif (\r\n\t\t\t!base.watermark &&\r\n\t\t\tbase.getValue(base.$el) === '' &&\r\n\t\t\tbase.inPlaceholder !== '' &&\r\n\t\t\tbase.$el.attr('placeholder') !== ''\r\n\t\t) {\r\n\t\t\t// css watermark style (darker text)\r\n\t\t\tbase.$el.addClass(kbcss.placeholder);\r\n\t\t\tbase.setValue(base.inPlaceholder, base.$el);\r\n\t\t}\r\n\r\n\t\tbase.$el.trigger(kbevents.kbInit, [base, base.el]);\r\n\r\n\t\t// initialized with keyboard open\r\n\t\tif (o.alwaysOpen) {\r\n\t\t\tbase.reveal();\r\n\t\t}\r\n\t\tbase.initialized = true;\r\n\t};\r\n\r\n\tbase.toggle = function () {\r\n\t\tif (!base.hasKeyboard()) { return; }\r\n\t\tvar $toggle = base.$keyboard.find('.' + $keyboard.css.keyToggle),\r\n\t\t\tlocked = !base.enabled;\r\n\t\t// prevent physical keyboard from working\r\n\t\tbase.preview.readonly = locked || base.options.lockInput;\r\n\t\t// disable all buttons\r\n\t\tbase.$keyboard\r\n\t\t\t.toggleClass($keyboard.css.keyDisabled, locked)\r\n\t\t\t.find('.' + $keyboard.css.keyButton)\r\n\t\t\t.not($toggle)\r\n\t\t\t.attr('aria-disabled', locked)\r\n\t\t\t.each(function() {\r\n\t\t\t\tthis.disabled = locked;\r\n\t\t\t});\r\n\t\t$toggle.toggleClass($keyboard.css.keyDisabled, locked);\r\n\t\t// stop auto typing\r\n\t\tif (locked && base.typing_options) {\r\n\t\t\tbase.typing_options.text = '';\r\n\t\t}\r\n\t\t// allow chaining\r\n\t\treturn base;\r\n\t};\r\n\r\n\tbase.setCurrent = function () {\r\n\t\tvar kbcss = $keyboard.css,\r\n\t\t\t// close any \"isCurrent\" keyboard (just in case they are always open)\r\n\t\t\t$current = $('.' + kbcss.isCurrent),\r\n\t\t\tkb = $current.data('keyboard');\r\n\t\t// close keyboard, if not self\r\n\t\tif (!$.isEmptyObject(kb) && kb.el !== base.el) {\r\n\t\t\tkb.close(kb.options.autoAccept ? 'true' : false);\r\n\t\t}\r\n\t\t$current.removeClass(kbcss.isCurrent);\r\n\t\t// ui-keyboard-has-focus is applied in case multiple keyboards have\r\n\t\t// alwaysOpen = true and are stacked\r\n\t\t$('.' + kbcss.hasFocus).removeClass(kbcss.hasFocus);\r\n\r\n\t\tbase.$el.addClass(kbcss.isCurrent);\r\n\t\tbase.$preview.focus();\r\n\t\tbase.$keyboard.addClass(kbcss.hasFocus);\r\n\t\tbase.isCurrent(true);\r\n\t\tbase.isOpen = true;\r\n\t};\r\n\r\n\tbase.isUnavailable = function() {\r\n\t\treturn (\r\n\t\t\tbase.$el.is(':disabled') || (\r\n\t\t\t\t!base.options.activeOnReadonly &&\r\n\t\t\t\tbase.$el.attr('readonly') &&\r\n\t\t\t\t!base.$el.hasClass($keyboard.css.locked)\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\tbase.isCurrent = function (set) {\r\n\t\tvar cur = $keyboard.currentKeyboard || false;\r\n\t\tif (set) {\r\n\t\t\tcur = $keyboard.currentKeyboard = base.el;\r\n\t\t} else if (set === false && cur === base.el) {\r\n\t\t\tcur = $keyboard.currentKeyboard = '';\r\n\t\t}\r\n\t\treturn cur === base.el;\r\n\t};\r\n\r\n\tbase.hasKeyboard = function () {\r\n\t\treturn base.$keyboard && base.$keyboard.length > 0;\r\n\t};\r\n\r\n\tbase.isVisible = function () {\r\n\t\treturn base.hasKeyboard() ? base.$keyboard.is(':visible') : false;\r\n\t};\r\n\r\n\tbase.setFocus = function () {\r\n\t\tvar $el = base.$preview || base.$el;\r\n\t\tif (!o.noFocus) {\r\n\t\t\t$el.focus();\r\n\t\t}\r\n\t\tif (base.isContentEditable) {\r\n\t\t\t$keyboard.setEditableCaret($el, base.last.start, base.last.end);\r\n\t\t} else {\r\n\t\t\t$keyboard.caret($el, base.last);\r\n\t\t}\r\n\t};\r\n\r\n\tbase.focusOn = function () {\r\n\t\tif (!base || !base.el.active) {\r\n\t\t\t// keyboard was destroyed\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!base.isVisible()) {\r\n\t\t\tclearTimeout(base.timer);\r\n\t\t\tbase.reveal();\r\n\t\t} else {\r\n\t\t\t// keyboard already open, make it the current keyboard\r\n\t\t\tbase.setCurrent();\r\n\t\t}\r\n\t};\r\n\r\n\t// add redraw method to make API more clear\r\n\tbase.redraw = function (layout) {\r\n\t\tif (layout) {\r\n\t\t\t// allow updating the layout by calling redraw\r\n\t\t\tbase.options.layout = layout;\r\n\t\t}\r\n\t\t// update keyboard after a layout change\r\n\t\tif (base.$keyboard.length) {\r\n\r\n\t\t\tbase.last.preVal = '' + base.last.val;\r\n\t\t\tbase.saveLastChange();\r\n\t\t\tbase.setValue(base.last.val, base.$el);\r\n\r\n\t\t\tbase.removeKeyboard();\r\n\t\t\tbase.shiftActive = base.altActive = base.metaActive = false;\r\n\t\t}\r\n\t\tbase.isOpen = o.alwaysOpen;\r\n\t\tbase.reveal(true);\r\n\t\treturn base;\r\n\t};\r\n\r\n\tbase.reveal = function (redraw) {\r\n\t\tvar temp,\r\n\t\t\talreadyOpen = base.isOpen,\r\n\t\t\tkbcss = $keyboard.css;\r\n\t\tbase.opening = !alreadyOpen;\r\n\t\t// remove all 'extra' keyboards by calling close function\r\n\t\t$('.' + kbcss.keyboard).not('.' + kbcss.alwaysOpen).each(function(){\r\n\t\t\tvar kb = $(this).data('keyboard');\r\n\t\t\tif (!$.isEmptyObject(kb)) {\r\n\t\t\t\t// this closes previous keyboard when clicking another input - see #515\r\n\t\t\t\tkb.close(kb.options.autoAccept ? 'true' : false);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Don't open if disabled\r\n\t\tif (base.isUnavailable()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tbase.$el.removeClass(kbcss.noKeyboard);\r\n\r\n\t\t// Unbind focus to prevent recursion - openOn may be empty if keyboard is opened externally\r\n\t\tif (o.openOn) {\r\n\t\t\tbase.$el.unbind($.trim((o.openOn + ' ').split(/\\s+/).join(base.namespace + ' ')));\r\n\t\t}\r\n\r\n\t\t// build keyboard if it doesn't exist; or attach keyboard if it was removed, but not cleared\r\n\t\tif (!base.$keyboard || base.$keyboard &&\r\n\t\t\t(!base.$keyboard.length || $.contains(base.el.ownerDocument.body, base.$keyboard[0]))) {\r\n\t\t\tbase.startup();\r\n\t\t}\r\n\r\n\t\t// clear watermark\r\n\t\tif (!base.watermark && base.getValue() === base.inPlaceholder) {\r\n\t\t\tbase.$el.removeClass(kbcss.placeholder);\r\n\t\t\tbase.setValue('', base.$el);\r\n\t\t}\r\n\t\t// save starting content, in case we cancel\r\n\t\tbase.originalContent = base.isContentEditable ?\r\n\t\t\tbase.$el.html() :\r\n\t\t\tbase.getValue(base.$el);\r\n\t\tif (base.el !== base.preview && !base.isContentEditable) {\r\n\t\t\tbase.setValue(base.originalContent);\r\n\t\t}\r\n\r\n\t\t// disable/enable accept button\r\n\t\tif (o.acceptValid && o.checkValidOnInit) {\r\n\t\t\tbase.checkValid();\r\n\t\t}\r\n\r\n\t\tif (o.resetDefault) {\r\n\t\t\tbase.shiftActive = base.altActive = base.metaActive = false;\r\n\t\t}\r\n\t\tbase.showSet();\r\n\r\n\t\t// beforeVisible event\r\n\t\tif (!base.isVisible()) {\r\n\t\t\tbase.$el.trigger($keyboard.events.kbBeforeVisible, [base, base.el]);\r\n\t\t}\r\n\t\tif (\r\n\t\t\tbase.initialized ||\r\n\t\t\to.initialFocus ||\r\n\t\t\t( !o.initialFocus && base.$el.hasClass($keyboard.css.initialFocus) )\r\n\t\t) {\r\n\t\t\tbase.setCurrent();\r\n\t\t}\r\n\t\t// update keyboard - enabled or disabled?\r\n\t\tbase.toggle();\r\n\r\n\t\t// show keyboard\r\n\t\tbase.$keyboard.show();\r\n\r\n\t\t// adjust keyboard preview window width - save width so IE won't keep expanding (fix issue #6)\r\n\t\tif (o.usePreview && $keyboard.msie) {\r\n\t\t\tif (typeof base.width === 'undefined') {\r\n\t\t\t\tbase.$preview.hide(); // preview is 100% browser width in IE7, so hide the damn thing\r\n\t\t\t\tbase.width = Math.ceil(base.$keyboard.width()); // set input width to match the widest keyboard row\r\n\t\t\t\tbase.$preview.show();\r\n\t\t\t}\r\n\t\t\tbase.$preview.width(base.width);\r\n\t\t}\r\n\r\n\t\tbase.reposition();\r\n\r\n\t\tbase.checkDecimal();\r\n\r\n\t\t// get preview area line height\r\n\t\t// add roughly 4px to get line height from font height, works well for font-sizes from 14-36px\r\n\t\t// needed for textareas\r\n\t\tbase.lineHeight = parseInt(base.$preview.css('lineHeight'), 10) ||\r\n\t\t\tparseInt(base.$preview.css('font-size'), 10) + 4;\r\n\r\n\t\tif (o.caretToEnd) {\r\n\t\t\ttemp = base.isContentEditable ? $keyboard.getEditableLength(base.el) : base.originalContent.length;\r\n\t\t\tbase.saveCaret(temp, temp);\r\n\t\t}\r\n\r\n\t\t// IE caret haxx0rs\r\n\t\tif ($keyboard.allie) {\r\n\t\t\t// sometimes end = 0 while start is > 0\r\n\t\t\tif (base.last.end === 0 && base.last.start > 0) {\r\n\t\t\t\tbase.last.end = base.last.start;\r\n\t\t\t}\r\n\t\t\t// IE will have start -1, end of 0 when not focused (see demo: https://jsfiddle.net/Mottie/fgryQ/3/)\r\n\t\t\tif (base.last.start < 0) {\r\n\t\t\t\t// ensure caret is at the end of the text (needed for IE)\r\n\t\t\t\tbase.last.start = base.last.end = base.originalContent.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (alreadyOpen || redraw) {\r\n\t\t\t// restore caret position (userClosed)\r\n\t\t\t$keyboard.caret(base.$preview, base.last);\r\n\t\t\tbase.opening = false;\r\n\t\t\treturn base;\r\n\t\t}\r\n\r\n\t\t// opening keyboard flag; delay allows switching between keyboards without immediately closing\r\n\t\t// the keyboard\r\n\t\tbase.timer2 = setTimeout(function () {\r\n\t\t\tvar undef;\r\n\t\t\tbase.opening = false;\r\n\t\t\t// Number inputs don't support selectionStart and selectionEnd\r\n\t\t\t// Number/email inputs don't support selectionStart and selectionEnd\r\n\t\t\tif (!/(number|email)/i.test(base.el.type) && !o.caretToEnd) {\r\n\t\t\t\t// caret position is always 0,0 in webkit; and nothing is focused at this point... odd\r\n\t\t\t\t// save caret position in the input to transfer it to the preview\r\n\t\t\t\t// inside delay to get correct caret position\r\n\t\t\t\tbase.saveCaret(undef, undef, base.$el);\r\n\t\t\t}\r\n\t\t\tif (o.initialFocus || base.$el.hasClass($keyboard.css.initialFocus)) {\r\n\t\t\t\t$keyboard.caret(base.$preview, base.last);\r\n\t\t\t}\r\n\t\t\t// save event time for keyboards with stayOpen: true\r\n\t\t\tbase.last.eventTime = new Date().getTime();\r\n\t\t\tbase.$el.trigger($keyboard.events.kbVisible, [base, base.el]);\r\n\t\t\tbase.timer = setTimeout(function () {\r\n\t\t\t\t// get updated caret information after visible event - fixes #331\r\n\t\t\t\tif (base) { // Check if base exists, this is a case when destroy is called, before timers fire\r\n\t\t\t\t\tbase.saveCaret();\r\n\t\t\t\t}\r\n\t\t\t}, 200);\r\n\t\t}, 10);\r\n\t\t// return base to allow chaining in typing extension\r\n\t\treturn base;\r\n\t};\r\n\r\n\tbase.updateLanguage = function () {\r\n\t\t// change language if layout is named something like 'french-azerty-1'\r\n\t\tvar layouts = $keyboard.layouts,\r\n\t\t\tlang = o.language || layouts[o.layout] && layouts[o.layout].lang &&\r\n\t\t\t\tlayouts[o.layout].lang || [o.language || 'en'],\r\n\t\t\tkblang = $keyboard.language;\r\n\r\n\t\t// some languages include a dash, e.g. 'en-gb' or 'fr-ca'\r\n\t\t// allow o.language to be a string or array...\r\n\t\t// array is for future expansion where a layout can be set for multiple languages\r\n\t\tlang = (Object.prototype.toString.call(lang) === '[object Array]' ? lang[0] : lang);\r\n\t\tbase.language = lang;\r\n\t\tlang = lang.split('-')[0];\r\n\r\n\t\t// set keyboard language\r\n\t\to.display = $.extend(true, {},\r\n\t\t\tkblang.en.display,\r\n\t\t\tkblang[lang] && kblang[lang].display || {},\r\n\t\t\tbase.settings.display\r\n\t\t);\r\n\t\to.combos = $.extend(true, {},\r\n\t\t\tkblang.en.combos,\r\n\t\t\tkblang[lang] && kblang[lang].combos || {},\r\n\t\t\tbase.settings.combos\r\n\t\t);\r\n\t\to.wheelMessage = kblang[lang] && kblang[lang].wheelMessage || kblang.en.wheelMessage;\r\n\t\t// rtl can be in the layout or in the language definition; defaults to false\r\n\t\to.rtl = layouts[o.layout] && layouts[o.layout].rtl || kblang[lang] && kblang[lang].rtl || false;\r\n\r\n\t\t// save default regex (in case loading another layout changes it)\r\n\t\tif (kblang[lang] && kblang[lang].comboRegex) {\r\n\t\t\tbase.regex = kblang[lang].comboRegex;\r\n\t\t}\r\n\t\t// determine if US '.' or European ',' system being used\r\n\t\tbase.decimal = /^\\./.test(o.display.dec);\r\n\t\tbase.$el\r\n\t\t\t.toggleClass('rtl', o.rtl)\r\n\t\t\t.css('direction', o.rtl ? 'rtl' : '');\r\n\t};\r\n\r\n\tbase.startup = function () {\r\n\t\tvar kbcss = $keyboard.css;\r\n\t\t// ensure base.$preview is defined; but don't overwrite it if keyboard is always visible\r\n\t\tif (!((o.alwaysOpen || o.userClosed) && base.$preview)) {\r\n\t\t\tbase.makePreview();\r\n\t\t}\r\n\t\tif (!base.hasKeyboard()) {\r\n\t\t\t// custom layout - create a unique layout name based on the hash\r\n\t\t\tif (o.layout === 'custom') {\r\n\t\t\t\to.layoutHash = 'custom' + base.customHash();\r\n\t\t\t}\r\n\t\t\tbase.layout = o.layout === 'custom' ? o.layoutHash : o.layout;\r\n\t\t\tbase.last.layout = base.layout;\r\n\r\n\t\t\tbase.updateLanguage();\r\n\t\t\tif (typeof $keyboard.builtLayouts[base.layout] === 'undefined') {\r\n\t\t\t\tif (typeof o.create === 'function') {\r\n\t\t\t\t\t// create must call buildKeyboard() function; or create it's own keyboard\r\n\t\t\t\t\tbase.$keyboard = o.create(base);\r\n\t\t\t\t} else if (!base.$keyboard.length) {\r\n\t\t\t\t\tbase.buildKeyboard(base.layout, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbase.$keyboard = $keyboard.builtLayouts[base.layout].$keyboard.clone();\r\n\t\t\tbase.$keyboard.data('keyboard', base);\r\n\t\t\tif ((base.el.id || '') !== '') {\r\n\t\t\t\t// add ID to keyboard for styling purposes\r\n\t\t\t\tbase.$keyboard.attr('id', base.el.id + $keyboard.css.idSuffix);\r\n\t\t\t}\r\n\r\n\t\t\tbase.makePreview();\r\n\t\t}\r\n\r\n\t\t// Add layout and laguage data-attibutes\r\n\t\tbase.$keyboard\r\n\t\t\t.attr('data-' + kbcss.keyboard + '-layout', o.layout)\r\n\t\t\t.attr('data-' + kbcss.keyboard + '-language', base.language);\r\n\r\n\t\tbase.$decBtn = base.$keyboard.find('.' + kbcss.keyPrefix + 'dec');\r\n\t\t// add enter to allowed keys; fixes #190\r\n\t\tif (o.enterNavigation || base.isTextArea) {\r\n\t\t\tbase.alwaysAllowed.push($keyboard.keyCodes.enter);\r\n\t\t}\r\n\r\n\t\tbase.bindKeyboard();\r\n\r\n\t\tbase.$keyboard.appendTo(o.appendLocally ? base.$el.parent() : o.appendTo || 'body');\r\n\r\n\t\tbase.bindKeys();\r\n\r\n\t\t// reposition keyboard on window resize\r\n\t\tif (o.reposition && $.ui && $.ui.position && o.appendTo === 'body') {\r\n\t\t\t$(window).bind('resize' + base.namespace, function () {\r\n\t\t\t\tbase.reposition();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tbase.reposition = function () {\r\n\t\tbase.position = $.isEmptyObject(o.position) ? false : o.position;\r\n\t\t// position after keyboard is visible (required for UI position utility)\r\n\t\t// and appropriately sized\r\n\t\tif ($.ui && $.ui.position && base.position) {\r\n\t\t\tbase.position.of =\r\n\t\t\t\t// get single target position\r\n\t\t\t\tbase.position.of ||\r\n\t\t\t\t// OR target stored in element data (multiple targets)\r\n\t\t\t\tbase.$el.data('keyboardPosition') ||\r\n\t\t\t\t// OR default @ element\r\n\t\t\t\tbase.$el;\r\n\t\t\tbase.position.collision = base.position.collision || 'flipfit flipfit';\r\n\t\t\tbase.position.at = o.usePreview ? o.position.at : o.position.at2;\r\n\t\t\tif (base.isVisible()) {\r\n\t\t\t\tbase.$keyboard.position(base.position);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// make chainable\r\n\t\treturn base;\r\n\t};\r\n\r\n\tbase.makePreview = function () {\r\n\t\tif (o.usePreview) {\r\n\t\t\tvar indx, attrs, attr, removedAttr,\r\n\t\t\t\tkbcss = $keyboard.css;\r\n\t\t\tbase.$preview = base.$el.clone(false)\r\n\t\t\t\t.data('keyboard', base)\r\n\t\t\t\t.removeClass(kbcss.placeholder + ' ' + kbcss.input)\r\n\t\t\t\t.addClass(kbcss.preview + ' ' + o.css.input)\r\n\t\t\t\t.attr('tabindex', '-1')\r\n\t\t\t\t.show(); // for hidden inputs\r\n\t\t\tbase.preview = base.$preview[0];\r\n\r\n\t\t\t// remove extraneous attributes.\r\n\t\t\tremovedAttr = /^(data-|id|aria-haspopup)/i;\r\n\t\t\tattrs = base.$preview.get(0).attributes;\r\n\t\t\tfor (indx = attrs.length - 1; indx >= 0; indx--) {\r\n\t\t\t\tattr = attrs[indx] && attrs[indx].name;\r\n\t\t\t\tif (removedAttr.test(attr)) {\r\n\t\t\t\t\t// remove data-attributes - see #351\r\n\t\t\t\t\tbase.preview.removeAttribute(attr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// build preview container and append preview display\r\n\t\t\t$('<div />')\r\n\t\t\t\t.addClass(kbcss.wrapper)\r\n\t\t\t\t.append(base.$preview)\r\n\t\t\t\t.prependTo(base.$keyboard);\r\n\t\t} else {\r\n\t\t\tbase.$preview = base.$el;\r\n\t\t\tbase.preview = base.el;\r\n\t\t}\r\n\t};\r\n\r\n\t// Added in v1.26.8 to allow chaining of the caret function, e.g.\r\n\t// keyboard.reveal().caret(4,5).insertText('test').caret('end');\r\n\tbase.caret = function(param1, param2) {\r\n\t\tvar result = $keyboard.caret(base.$preview, param1, param2),\r\n\t\t\twasSetCaret = result instanceof $;\r\n\t\t// Caret was set, save last position & make chainable\r\n\t\tif (wasSetCaret) {\r\n\t\t\tbase.saveCaret(result.start, result.end);\r\n\t\t\treturn base;\r\n\t\t}\r\n\t\t// return caret position if using .caret()\r\n\t\treturn result;\r\n\t};\r\n\r\n\tbase.saveCaret = function (start, end, $el) {\r\n\t\tif (base.isCurrent()) {\r\n\t\t\tvar p;\r\n\t\t\tif (typeof start === 'undefined') {\r\n\t\t\t\t// grab & save current caret position\r\n\t\t\t\tp = $keyboard.caret($el || base.$preview);\r\n\t\t\t} else {\r\n\t\t\t\tp = $keyboard.caret($el || base.$preview, start, end);\r\n\t\t\t}\r\n\t\t\tbase.last.start = typeof start === 'undefined' ? p.start : start;\r\n\t\t\tbase.last.end = typeof end === 'undefined' ? p.end : end;\r\n\t\t}\r\n\t};\r\n\r\n\tbase.saveLastChange = function (val) {\r\n\t\tbase.last.val = val || base.getValue(base.$preview || base.$el);\r\n\t\tif (base.isContentEditable) {\r\n\t\t\tbase.last.elms = base.el.cloneNode(true);\r\n\t\t}\r\n\t};\r\n\r\n\tbase.setScroll = function () {\r\n\t\t// Set scroll so caret & current text is in view\r\n\t\t// needed for virtual keyboard typing, NOT manual typing - fixes #23\r\n\t\tif (!base.isContentEditable && base.last.virtual) {\r\n\r\n\t\t\tvar scrollWidth, clientWidth, adjustment, direction,\r\n\t\t\t\tvalue = base.last.val.substring(0, Math.max(base.last.start, base.last.end));\r\n\r\n\t\t\tif (!base.$previewCopy) {\r\n\t\t\t\t// clone preview\r\n\t\t\t\tbase.$previewCopy = base.$preview.clone()\r\n\t\t\t\t\t.removeAttr('id') // fixes #334\r\n\t\t\t\t\t.css({\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\tzIndex: -10,\r\n\t\t\t\t\t\tvisibility: 'hidden'\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.addClass($keyboard.css.inputClone);\r\n\t\t\t\t// prevent submitting content on form submission\r\n\t\t\t\tbase.$previewCopy[0].disabled = true;\r\n\t\t\t\tif (!base.isTextArea) {\r\n\t\t\t\t\t// make input zero-width because we need an accurate scrollWidth\r\n\t\t\t\t\tbase.$previewCopy.css({\r\n\t\t\t\t\t\t'white-space': 'pre',\r\n\t\t\t\t\t\t'width': 0\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (o.usePreview) {\r\n\t\t\t\t\t// add clone inside of preview wrapper\r\n\t\t\t\t\tbase.$preview.after(base.$previewCopy);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// just slap that thing in there somewhere\r\n\t\t\t\t\tbase.$keyboard.prepend(base.$previewCopy);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (base.isTextArea) {\r\n\t\t\t\t// need the textarea scrollHeight, so set the clone textarea height to be the line height\r\n\t\t\t\tbase.$previewCopy\r\n\t\t\t\t\t.height(base.lineHeight)\r\n\t\t\t\t\t.val(value);\r\n\t\t\t\t// set scrollTop for Textarea\r\n\t\t\t\tbase.preview.scrollTop = base.lineHeight *\r\n\t\t\t\t\t(Math.floor(base.$previewCopy[0].scrollHeight / base.lineHeight) - 1);\r\n\t\t\t} else {\r\n\t\t\t\t// add non-breaking spaces\r\n\t\t\t\tbase.$previewCopy.val(value.replace(/\\s/g, '\\xa0'));\r\n\r\n\t\t\t\t// if scrollAdjustment option is set to \"c\" or \"center\" then center the caret\r\n\t\t\t\tadjustment = /c/i.test(o.scrollAdjustment) ? base.preview.clientWidth / 2 : o.scrollAdjustment;\r\n\t\t\t\tscrollWidth = base.$previewCopy[0].scrollWidth - 1;\r\n\r\n\t\t\t\t// set initial state as moving right\r\n\t\t\t\tif (typeof base.last.scrollWidth === 'undefined') {\r\n\t\t\t\t\tbase.last.scrollWidth = scrollWidth;\r\n\t\t\t\t\tbase.last.direction = true;\r\n\t\t\t\t}\r\n\t\t\t\t// if direction = true; we're scrolling to the right\r\n\t\t\t\tdirection = base.last.scrollWidth === scrollWidth ?\r\n\t\t\t\t\tbase.last.direction :\r\n\t\t\t\t\tbase.last.scrollWidth < scrollWidth;\r\n\t\t\t\tclientWidth = base.preview.clientWidth - adjustment;\r\n\r\n\t\t\t\t// set scrollLeft for inputs; try to mimic the inherit caret positioning + scrolling:\r\n\t\t\t\t// hug right while scrolling right...\r\n\t\t\t\tif (direction) {\r\n\t\t\t\t\tif (scrollWidth < clientWidth) {\r\n\t\t\t\t\t\tbase.preview.scrollLeft = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbase.preview.scrollLeft = scrollWidth - clientWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// hug left while scrolling left...\r\n\t\t\t\t\tif (scrollWidth >= base.preview.scrollWidth - clientWidth) {\r\n\t\t\t\t\t\tbase.preview.scrollLeft = base.preview.scrollWidth - adjustment;\r\n\t\t\t\t\t} else if (scrollWidth - adjustment > 0) {\r\n\t\t\t\t\t\tbase.preview.scrollLeft = scrollWidth - adjustment;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbase.preview.scrollLeft = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbase.last.scrollWidth = scrollWidth;\r\n\t\t\t\tbase.last.direction = direction;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tbase.bindFocus = function () {\r\n\t\tif (o.openOn) {\r\n\t\t\t// make sure keyboard isn't destroyed\r\n\t\t\t// Check if base exists, this is a case when destroy is called, before timers have fired\r\n\t\t\tif (base && base.el.active) {\r\n\t\t\t\tbase.$el.bind(o.openOn + base.namespace, function () {\r\n\t\t\t\t\tbase.focusOn();\r\n\t\t\t\t});\r\n\t\t\t\t// remove focus from element (needed for IE since blur doesn't seem to work)\r\n\t\t\t\tif ($(':focus')[0] === base.el) {\r\n\t\t\t\t\tbase.$el.blur();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tbase.bindKeyboard = function () {\r\n\t\tvar evt,\r\n\t\t\tkeyCodes = $keyboard.keyCodes,\r\n\t\t\tlayout = $keyboard.builtLayouts[base.layout],\r\n\t\t\tnamespace = base.namespace + 'keybindings';\r\n\t\tbase.$preview\r\n\t\t\t.unbind(base.namespace)\r\n\t\t\t.bind('click' + namespace + ' touchstart' + namespace, function () {\r\n\t\t\t\tif (o.alwaysOpen && !base.isCurrent()) {\r\n\t\t\t\t\tbase.reveal();\r\n\t\t\t\t}\r\n\t\t\t\t// update last caret position after user click, use at least 150ms or it doesn't work in IE\r\n\t\t\t\tbase.timer2 = setTimeout(function () {\r\n\t\t\t\t\tif (base){\r\n\t\t\t\t\t\tbase.saveCaret();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 150);\r\n\r\n\t\t\t})\r\n\t\t\t.bind('keypress' + namespace, function (e) {\r\n\t\t\t\tif (o.lockInput) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (!base.isCurrent()) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar k = e.charCode || e.which,\r\n\t\t\t\t\t// capsLock can only be checked while typing a-z\r\n\t\t\t\t\tk1 = k >= keyCodes.A && k <= keyCodes.Z,\r\n\t\t\t\t\tk2 = k >= keyCodes.a && k <= keyCodes.z,\r\n\t\t\t\t\tstr = base.last.key = String.fromCharCode(k);\r\n\t\t\t\t// check, that keypress wasn't rise by functional key\r\n\t\t\t\t// space is first typing symbol in UTF8 table\r\n\t\t\t\tif (k < keyCodes.space) { //see #549\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tbase.last.virtual = false;\r\n\t\t\t\tbase.last.event = e;\r\n\t\t\t\tbase.last.$key = []; // not a virtual keyboard key\r\n\t\t\t\tif (base.checkCaret) {\r\n\t\t\t\t\tbase.saveCaret();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// update capsLock\r\n\t\t\t\tif (k !== keyCodes.capsLock && (k1 || k2)) {\r\n\t\t\t\t\tbase.capsLock = (k1 && !e.shiftKey) || (k2 && e.shiftKey);\r\n\t\t\t\t\t// if shifted keyset not visible, then show it\r\n\t\t\t\t\tif (base.capsLock && !base.shiftActive) {\r\n\t\t\t\t\t\tbase.shiftActive = true;\r\n\t\t\t\t\t\tbase.showSet();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// restrict input - keyCode in keypress special keys:\r\n\t\t\t\t// see http://www.asquare.net/javascript/tests/KeyCode.html\r\n\t\t\t\tif (o.restrictInput) {\r\n\t\t\t\t\t// allow navigation keys to work - Chrome doesn't fire a keypress event (8 = bksp)\r\n\t\t\t\t\tif ((e.which === keyCodes.backSpace || e.which === 0) &&\r\n\t\t\t\t\t\t$.inArray(e.keyCode, base.alwaysAllowed)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// quick key check\r\n\t\t\t\t\tif ($.inArray(str, layout.acceptedKeys) === -1) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t// copy event object in case e.preventDefault() breaks when changing the type\r\n\t\t\t\t\t\tevt = $.extend({}, e);\r\n\t\t\t\t\t\tevt.type = $keyboard.events.inputRestricted;\r\n\t\t\t\t\t\tbase.$el.trigger(evt, [base, base.el]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if ((e.ctrlKey || e.metaKey) &&\r\n\t\t\t\t\t(e.which === keyCodes.A || e.which === keyCodes.C || e.which === keyCodes.V ||\r\n\t\t\t\t\t\t(e.which >= keyCodes.X && e.which <= keyCodes.Z))) {\r\n\t\t\t\t\t// Allow select all (ctrl-a), copy (ctrl-c), paste (ctrl-v) & cut (ctrl-x) &\r\n\t\t\t\t\t// redo (ctrl-y)& undo (ctrl-z); meta key for mac\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// Mapped Keys - allows typing on a regular keyboard and the mapped key is entered\r\n\t\t\t\t// Set up a key in the layout as follows: 'm(a):label'; m = key to map, (a) = actual keyboard key\r\n\t\t\t\t// to map to (optional), ':label' = title/tooltip (optional)\r\n\t\t\t\t// example: \\u0391 or \\u0391(A) or \\u0391:alpha or \\u0391(A):alpha\r\n\t\t\t\tif (layout.hasMappedKeys && layout.mappedKeys.hasOwnProperty(str)) {\r\n\t\t\t\t\tbase.last.key = layout.mappedKeys[str];\r\n\t\t\t\t\tbase.insertText(base.last.key);\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof o.beforeInsert === 'function') {\r\n\t\t\t\t\tbase.insertText(base.last.key);\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbase.checkMaxLength();\r\n\r\n\t\t\t})\r\n\t\t\t.bind('keyup' + namespace, function (e) {\r\n\t\t\t\tif (!base.isCurrent()) { return; }\r\n\t\t\t\tbase.last.virtual = false;\r\n\t\t\t\tswitch (e.which) {\r\n\t\t\t\t\t// Insert tab key\r\n\t\t\t\tcase keyCodes.tab:\r\n\t\t\t\t\t// Added a flag to prevent from tabbing into an input, keyboard opening, then adding the tab\r\n\t\t\t\t\t// to the keyboard preview area on keyup. Sadly it still happens if you don't release the tab\r\n\t\t\t\t\t// key immediately because keydown event auto-repeats\r\n\t\t\t\t\tif (base.tab && !o.lockInput) {\r\n\t\t\t\t\t\tbase.shiftActive = e.shiftKey;\r\n\t\t\t\t\t\t// when switching inputs, the tab keyaction returns false\r\n\t\t\t\t\t\tvar notSwitching = $keyboard.keyaction.tab(base);\r\n\t\t\t\t\t\tbase.tab = false;\r\n\t\t\t\t\t\tif (!notSwitching) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// Escape will hide the keyboard\r\n\t\t\t\tcase keyCodes.escape:\r\n\t\t\t\t\tif (!o.ignoreEsc) {\r\n\t\t\t\t\t\tbase.close(o.autoAccept && o.autoAcceptOnEsc ? 'true' : false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// throttle the check combo function because fast typers will have an incorrectly positioned caret\r\n\t\t\t\tclearTimeout(base.throttled);\r\n\t\t\t\tbase.throttled = setTimeout(function () {\r\n\t\t\t\t\t// fix error in OSX? see issue #102\r\n\t\t\t\t\tif (base && base.isVisible()) {\r\n\t\t\t\t\t\tbase.checkCombos();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 100);\r\n\r\n\t\t\t\tbase.checkMaxLength();\r\n\r\n\t\t\t\tbase.last.preVal = '' + base.last.val;\r\n\t\t\t\tbase.saveLastChange();\r\n\r\n\t\t\t\t// don't alter \"e\" or the \"keyup\" event never finishes processing; fixes #552\r\n\t\t\t\tvar event = $.Event( $keyboard.events.kbChange );\r\n\t\t\t\t// base.last.key may be empty string (shift, enter, tab, etc) when keyboard is first visible\r\n\t\t\t\t// use e.key instead, if browser supports it\r\n\t\t\t\tevent.action = base.last.key;\r\n\t\t\t\tbase.$el.trigger(event, [base, base.el]);\r\n\r\n\t\t\t\t// change callback is no longer bound to the input element as the callback could be\r\n\t\t\t\t// called during an external change event with all the necessary parameters (issue #157)\r\n\t\t\t\tif (typeof o.change === 'function') {\r\n\t\t\t\t\tevent.type = $keyboard.events.inputChange;\r\n\t\t\t\t\to.change(event, base, base.el);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (o.acceptValid && o.autoAcceptOnValid) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ttypeof o.validate === 'function' &&\r\n\t\t\t\t\t\to.validate(base, base.getValue(base.$preview))\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tbase.$preview.blur();\r\n\t\t\t\t\t\tbase.accept();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.bind('keydown' + namespace, function (e) {\r\n\t\t\t\tbase.last.keyPress = e.which;\r\n\t\t\t\t// ensure alwaysOpen keyboards are made active\r\n\t\t\t\tif (o.alwaysOpen && !base.isCurrent()) {\r\n\t\t\t\t\tbase.reveal();\r\n\t\t\t\t}\r\n\t\t\t\t// prevent tab key from leaving the preview window\r\n\t\t\t\tif (e.which === keyCodes.tab) {\r\n\t\t\t\t\t// allow tab to pass through - tab to next input/shift-tab for prev\r\n\t\t\t\t\tbase.tab = true;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (o.lockInput || e.timeStamp === base.last.timeStamp) {\r\n\t\t\t\t\treturn !o.lockInput;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbase.last.timeStamp = e.timeStamp; // fixes #659\r\n\t\t\t\tbase.last.virtual = false;\r\n\t\t\t\tswitch (e.which) {\r\n\r\n\t\t\t\tcase keyCodes.backSpace:\r\n\t\t\t\t\t$keyboard.keyaction.bksp(base, null, e);\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase keyCodes.enter:\r\n\t\t\t\t\t$keyboard.keyaction.enter(base, null, e);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// Show capsLock\r\n\t\t\t\tcase keyCodes.capsLock:\r\n\t\t\t\t\tbase.shiftActive = base.capsLock = !base.capsLock;\r\n\t\t\t\t\tbase.showSet();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase keyCodes.V:\r\n\t\t\t\t\t// prevent ctrl-v/cmd-v\r\n\t\t\t\t\tif (e.ctrlKey || e.metaKey) {\r\n\t\t\t\t\t\tif (o.preventPaste) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbase.checkCombos(); // check pasted content\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.bind('mouseup touchend '.split(' ').join(namespace + ' '), function () {\r\n\t\t\t\tbase.last.virtual = true;\r\n\t\t\t\tbase.saveCaret();\r\n\t\t\t});\r\n\r\n\t\t// prevent keyboard event bubbling\r\n\t\tbase.$keyboard.bind('mousedown click touchstart '.split(' ').join(base.namespace + ' '), function (e) {\r\n\t\t\te.stopPropagation();\r\n\t\t\tif (!base.isCurrent()) {\r\n\t\t\t\tbase.reveal();\r\n\t\t\t\t$(base.el.ownerDocument).trigger('checkkeyboard' + base.namespace);\r\n\t\t\t}\r\n\t\t\tbase.setFocus();\r\n\t\t});\r\n\r\n\t\t// If preventing paste, block context menu (right click)\r\n\t\tif (o.preventPaste) {\r\n\t\t\tbase.$preview.bind('contextmenu' + base.namespace, function (e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t});\r\n\t\t\tbase.$el.bind('contextmenu' + base.namespace, function (e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tbase.bindButton = function(events, handler) {\r\n\t\tvar button = '.' + $keyboard.css.keyButton,\r\n\t\t\tcallback = function(e) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\t// save closest keyboard wrapper/input to check in checkClose function\r\n\t\t\t\te.$target = $(this).closest('.' + $keyboard.css.keyboard + ', .' + $keyboard.css.input);\r\n\t\t\t\thandler.call(this, e);\r\n\t\t\t};\r\n\t\tif ($.fn.on) {\r\n\t\t\t// jQuery v1.7+\r\n\t\t\tbase.$keyboard.on(events, button, callback);\r\n\t\t} else if ($.fn.delegate) {\r\n\t\t\t// jQuery v1.4.2 - 3.0.0\r\n\t\t\tbase.$keyboard.delegate(button, events, callback);\r\n\t\t}\r\n\t\treturn base;\r\n\t};\r\n\r\n\tbase.unbindButton = function(namespace) {\r\n\t\tif ($.fn.off) {\r\n\t\t\t// jQuery v1.7+\r\n\t\t\tbase.$keyboard.off(namespace);\r\n\t\t} else if ($.fn.undelegate) {\r\n\t\t\t// jQuery v1.4.2 - 3.0.0 (namespace only added in v1.6)\r\n\t\t\tbase.$keyboard.undelegate('.' + $keyboard.css.keyButton, namespace);\r\n\t\t}\r\n\t\treturn base;\r\n\t};\r\n\r\n\tbase.bindKeys = function () {\r\n\t\tvar kbcss = $keyboard.css;\r\n\t\tbase\r\n\t\t\t.unbindButton(base.namespace + ' ' + base.namespace + 'kb')\r\n\t\t\t// Change hover class and tooltip - moved this touchstart before option.keyBinding touchstart\r\n\t\t\t// to prevent mousewheel lag/duplication - Fixes #379 & #411\r\n\t\t\t.bindButton('mouseenter mouseleave touchstart '.split(' ').join(base.namespace + ' '), function (e) {\r\n\t\t\t\tif ((o.alwaysOpen || o.userClosed) && e.type !== 'mouseleave' && !base.isCurrent()) {\r\n\t\t\t\t\tbase.reveal();\r\n\t\t\t\t\tbase.setFocus();\r\n\t\t\t\t}\r\n\t\t\t\tif (!base.isCurrent() || this.disabled) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar $keys, txt,\r\n\t\t\t\t\tlast = base.last,\r\n\t\t\t\t\t$this = $(this),\r\n\t\t\t\t\ttype = e.type;\r\n\r\n\t\t\t\tif (o.useWheel && base.wheel) {\r\n\t\t\t\t\t$keys = base.getLayers($this);\r\n\t\t\t\t\ttxt = ($keys.length ? $keys.map(function () {\r\n\t\t\t\t\t\t\treturn $(this).attr('data-value') || '';\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.get() : '') || [$this.text()];\r\n\t\t\t\t\tlast.wheel_$Keys = $keys;\r\n\t\t\t\t\tlast.wheelLayers = txt;\r\n\t\t\t\t\tlast.wheelIndex = $.inArray($this.attr('data-value'), txt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((type === 'mouseenter' || type === 'touchstart') && base.el.type !== 'password' &&\r\n\t\t\t\t\t!$this.hasClass(o.css.buttonDisabled)) {\r\n\t\t\t\t\t$this.addClass(o.css.buttonHover);\r\n\t\t\t\t\tif (o.useWheel && base.wheel) {\r\n\t\t\t\t\t\t$this.attr('title', function (i, t) {\r\n\t\t\t\t\t\t\t// show mouse wheel message\r\n\t\t\t\t\t\t\treturn (base.wheel && t === '' && base.sets && txt.length > 1 && type !== 'touchstart') ?\r\n\t\t\t\t\t\t\t\to.wheelMessage : t;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (type === 'mouseleave') {\r\n\t\t\t\t\t// needed or IE flickers really bad\r\n\t\t\t\t\t$this.removeClass((base.el.type === 'password') ? '' : o.css.buttonHover);\r\n\t\t\t\t\tif (o.useWheel && base.wheel) {\r\n\t\t\t\t\t\tlast.wheelIndex = 0;\r\n\t\t\t\t\t\tlast.wheelLayers = [];\r\n\t\t\t\t\t\tlast.wheel_$Keys = [];\r\n\t\t\t\t\t\t$this\r\n\t\t\t\t\t\t\t.attr('title', function (i, t) {\r\n\t\t\t\t\t\t\t\treturn (t === o.wheelMessage) ? '' : t;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.html($this.attr('data-html')); // restore original button text\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// keyBinding = 'mousedown touchstart' by default\r\n\t\t\t.bindButton(o.keyBinding.split(' ').join(base.namespace + ' ') + base.namespace + ' ' +\r\n\t\t\t\t$keyboard.events.kbRepeater, function (e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t// prevent errors when external triggers attempt to 'type' - see issue #158\r\n\t\t\t\tif (!base.$keyboard.is(':visible') || this.disabled) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tvar action,\r\n\t\t\t\t\tlast = base.last,\r\n\t\t\t\t\t$key = $(this),\r\n\t\t\t\t\t// prevent mousedown & touchstart from both firing events at the same time - see #184\r\n\t\t\t\t\ttimer = new Date().getTime();\r\n\r\n\t\t\t\tif (o.useWheel && base.wheel) {\r\n\t\t\t\t\t// get keys from other layers/keysets (shift, alt, meta, etc) that line up by data-position\r\n\t\t\t\t\t// target mousewheel selected key\r\n\t\t\t\t\t$key = last.wheel_$Keys.length && last.wheelIndex > -1 ? last.wheel_$Keys.eq(last.wheelIndex) : $key;\r\n\t\t\t\t}\r\n\t\t\t\taction = $key.attr('data-action');\r\n\t\t\t\tif (timer - (last.eventTime || 0) < o.preventDoubleEventTime) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlast.eventTime = timer;\r\n\t\t\t\tlast.event = e;\r\n\t\t\t\tlast.virtual = true;\r\n\t\t\t\tlast.$key = $key;\r\n\t\t\t\tlast.key = $key.attr('data-value');\r\n\t\t\t\tlast.keyPress = '';\r\n\t\t\t\t// Start caret in IE when not focused (happens with each virtual keyboard button click\r\n\t\t\t\tbase.setFocus();\r\n\t\t\t\tif (/^meta/.test(action)) {\r\n\t\t\t\t\taction = 'meta';\r\n\t\t\t\t}\r\n\t\t\t\t// keyaction is added as a string, override original action & text\r\n\t\t\t\tif (action === last.key && typeof $keyboard.keyaction[action] === 'string') {\r\n\t\t\t\t\tlast.key = action = $keyboard.keyaction[action];\r\n\t\t\t\t} else if (action in $keyboard.keyaction && typeof $keyboard.keyaction[action] === 'function') {\r\n\t\t\t\t\t// stop processing if action returns false (close & cancel)\r\n\t\t\t\t\tif ($keyboard.keyaction[action](base, this, e) === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\taction = null; // prevent inserting action name\r\n\t\t\t\t}\r\n\t\t\t\t// stop processing if keyboard closed and keyaction did not return false - see #536\r\n\t\t\t\tif (!base.hasKeyboard()) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof action !== 'undefined' && action !== null) {\r\n\t\t\t\t\tlast.key = $(this).hasClass(kbcss.keyAction) ? action : last.key;\r\n\t\t\t\t\tbase.insertText(last.key);\r\n\t\t\t\t\tif (!base.capsLock && !o.stickyShift && !e.shiftKey) {\r\n\t\t\t\t\t\tbase.shiftActive = false;\r\n\t\t\t\t\t\tbase.showSet($key.attr('data-name'));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// set caret if caret moved by action function; also, attempt to fix issue #131\r\n\t\t\t\t$keyboard.caret(base.$preview, last);\r\n\t\t\t\tbase.checkCombos();\r\n\t\t\t\te = $.extend({}, e, $.Event($keyboard.events.kbChange));\r\n\t\t\t\te.target = base.el;\r\n\t\t\t\te.action = last.key;\r\n\t\t\t\tbase.$el.trigger(e, [base, base.el]);\r\n\t\t\t\tlast.preVal = '' + last.val;\r\n\t\t\t\tbase.saveLastChange();\r\n\r\n\t\t\t\tif (typeof o.change === 'function') {\r\n\t\t\t\t\te.type = $keyboard.events.inputChange;\r\n\t\t\t\t\to.change(e, base, base.el);\r\n\t\t\t\t\t// return false to prevent reopening keyboard if base.accept() was called\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t})\r\n\t\t\t// using 'kb' namespace for mouse repeat functionality to keep it separate\r\n\t\t\t// I need to trigger a 'repeater.keyboard' to make it work\r\n\t\t\t.bindButton('mouseup' + base.namespace + ' ' + 'mouseleave touchend touchmove touchcancel '.split(' ')\r\n\t\t\t\t.join(base.namespace + 'kb '), function (e) {\r\n\t\t\t\tbase.last.virtual = true;\r\n\t\t\t\tvar offset,\r\n\t\t\t\t\t$this = $(this);\r\n\t\t\t\tif (e.type === 'touchmove') {\r\n\t\t\t\t\t// if moving within the same key, don't stop repeating\r\n\t\t\t\t\toffset = $this.offset();\r\n\t\t\t\t\toffset.right = offset.left + $this.outerWidth();\r\n\t\t\t\t\toffset.bottom = offset.top + $this.outerHeight();\r\n\t\t\t\t\tif (e.originalEvent.touches[0].pageX >= offset.left &&\r\n\t\t\t\t\t\te.originalEvent.touches[0].pageX < offset.right &&\r\n\t\t\t\t\t\te.originalEvent.touches[0].pageY >= offset.top &&\r\n\t\t\t\t\t\te.originalEvent.touches[0].pageY < offset.bottom) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (/(mouseleave|touchend|touchcancel)/i.test(e.type)) {\r\n\t\t\t\t\t$this.removeClass(o.css.buttonHover); // needed for touch devices\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!o.noFocus && base.isCurrent() && base.isVisible()) {\r\n\t\t\t\t\t\tbase.$preview.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (base.checkCaret) {\r\n\t\t\t\t\t\t$keyboard.caret(base.$preview, base.last);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbase.mouseRepeat = [false, ''];\r\n\t\t\t\tclearTimeout(base.repeater); // make sure key repeat stops!\r\n\t\t\t\tif (o.acceptValid && o.autoAcceptOnValid) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ttypeof o.validate === 'function' &&\r\n\t\t\t\t\t\to.validate(base, base.getValue())\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tbase.$preview.blur();\r\n\t\t\t\t\t\tbase.accept();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t})\r\n\t\t\t// prevent form submits when keyboard is bound locally - issue #64\r\n\t\t\t.bindButton('click' + base.namespace, function () {\r\n\t\t\t\treturn false;\r\n\t\t\t})\r\n\t\t\t// Allow mousewheel to scroll through other keysets of the same (non-action) key\r\n\t\t\t.bindButton('mousewheel' + base.namespace, base.throttleEvent(function (e, delta) {\r\n\t\t\t\tvar $btn = $(this);\r\n\t\t\t\t// no mouse repeat for action keys (shift, ctrl, alt, meta, etc)\r\n\t\t\t\tif (!$btn || $btn.hasClass(kbcss.keyAction) || base.last.wheel_$Keys[0] !== this) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (o.useWheel && base.wheel) {\r\n\t\t\t\t\t// deltaY used by newer versions of mousewheel plugin\r\n\t\t\t\t\tdelta = delta || e.deltaY;\r\n\t\t\t\t\tvar n,\r\n\t\t\t\t\t\ttxt = base.last.wheelLayers || [];\r\n\t\t\t\t\tif (txt.length > 1) {\r\n\t\t\t\t\t\tn = base.last.wheelIndex + (delta > 0 ? -1 : 1);\r\n\t\t\t\t\t\tif (n > txt.length - 1) {\r\n\t\t\t\t\t\t\tn = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (n < 0) {\r\n\t\t\t\t\t\t\tn = txt.length - 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbase.last.wheelIndex = n;\r\n\t\t\t\t\t$btn.html(txt[n]);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}, 30))\r\n\t\t\t.bindButton('mousedown touchstart '.split(' ').join(base.namespace + 'kb '), function () {\r\n\t\t\t\tvar $btn = $(this);\r\n\t\t\t\t// no mouse repeat for action keys (shift, ctrl, alt, meta, etc)\r\n\t\t\t\tif (\r\n\t\t\t\t\t!$btn || (\r\n\t\t\t\t\t\t$btn.hasClass(kbcss.keyAction) &&\r\n\t\t\t\t\t\t// mouse repeated action key exceptions\r\n\t\t\t\t\t\t!$btn.is('.' + kbcss.keyPrefix + ('tab bksp space enter'.split(' ').join(',.' + kbcss.keyPrefix)))\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (o.repeatRate !== 0) {\r\n\t\t\t\t\t// save the key, make sure we are repeating the right one (fast typers)\r\n\t\t\t\t\tbase.mouseRepeat = [true, $btn];\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t// don't repeat keys if it is disabled - see #431\r\n\t\t\t\t\t\tif (base && base.mouseRepeat[0] && base.mouseRepeat[1] === $btn && !$btn[0].disabled) {\r\n\t\t\t\t\t\t\tbase.repeatKey($btn);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, o.repeatDelay);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t};\r\n\r\n\t// No call on tailing event\r\n\tbase.throttleEvent = function(cb, time) {\r\n\t\tvar interm;\r\n\t\treturn function() {\r\n\t\t\tif (!interm) {\r\n\t\t\t\tcb.apply(this, arguments);\r\n\t\t\t\tinterm = true;\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tinterm = false;\r\n\t\t\t\t}, time);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tbase.execCommand = function(cmd, str) {\r\n\t\tbase.el.ownerDocument.execCommand(cmd, false, str);\r\n\t\tbase.el.normalize();\r\n\t\tif (o.reposition) {\r\n\t\t\tbase.reposition();\r\n\t\t}\r\n\t};\r\n\r\n\tbase.getValue = function ($el) {\r\n\t\t$el = $el || base.$preview;\r\n\t\treturn $el[base.isContentEditable ? 'text' : 'val']();\r\n\t};\r\n\r\n\tbase.setValue = function (txt, $el) {\r\n\t\t$el = $el || base.$preview;\r\n\t\tif (base.isContentEditable) {\r\n\t\t\tif (txt !== $el.text()) {\r\n\t\t\t\t$keyboard.replaceContent($el, txt);\r\n\t\t\t\tbase.saveCaret();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t$el.val(txt);\r\n\t\t}\r\n\t\treturn base;\r\n\t};\r\n\r\n\t// Insert text at caret/selection - thanks to Derek Wickwire for fixing this up!\r\n\tbase.insertText = function (txt) {\r\n\t\tif (!base.$preview) { return base; }\r\n\t\tif (typeof o.beforeInsert === 'function') {\r\n\t\t\ttxt = o.beforeInsert(base.last.event, base, base.el, txt);\r\n\t\t}\r\n\t\tif (typeof txt === 'undefined' || txt === false) {\r\n\t\t\tbase.last.key = '';\r\n\t\t\treturn base;\r\n\t\t}\r\n\t\tif (base.isContentEditable) {\r\n\t\t\treturn base.insertContentEditable(txt);\r\n\t\t}\r\n\t\tvar t,\r\n\t\t\tbksp = false,\r\n\t\t\tisBksp = txt === '\\b',\r\n\t\t\t// use base.$preview.val() instead of base.preview.value (val.length includes carriage returns in IE).\r\n\t\t\tval = base.getValue(),\r\n\t\t\tpos = $keyboard.caret(base.$preview),\r\n\t\t\tlen = val.length; // save original content length\r\n\r\n\t\t// silly IE caret hacks... it should work correctly, but navigating using arrow keys in a textarea\r\n\t\t// is still difficult\r\n\t\t// in IE, pos.end can be zero after input loses focus\r\n\t\tif (pos.end < pos.start) {\r\n\t\t\tpos.end = pos.start;\r\n\t\t}\r\n\t\tif (pos.start > len) {\r\n\t\t\tpos.end = pos.start = len;\r\n\t\t}\r\n\r\n\t\tif (base.isTextArea) {\r\n\t\t\t// This makes sure the caret moves to the next line after clicking on enter (manual typing works fine)\r\n\t\t\tif ($keyboard.msie && val.substring(pos.start, pos.start + 1) === '\\n') {\r\n\t\t\t\tpos.start += 1;\r\n\t\t\t\tpos.end += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tt = pos.start;\r\n\t\tif (txt === '{d}') {\r\n\t\t\ttxt = '';\r\n\t\t\tpos.end += 1;\r\n\t\t}\r\n\r\n\t\tif (isBksp) {\r\n\t\t\ttxt = '';\r\n\t\t\tbksp = isBksp && t === pos.end && t > 0;\r\n\t\t}\r\n\t\tval = val.substring(0, t - (bksp ? 1 : 0)) + txt + val.substring(pos.end);\r\n\t\tt += bksp ? -1 : txt.length;\r\n\r\n\t\tbase.setValue(val);\r\n\t\tbase.saveCaret(t, t); // save caret in case of bksp\r\n\t\tbase.setScroll();\r\n\t\t// see #506.. allow chaining of insertText\r\n\t\treturn base;\r\n\t};\r\n\r\n\tbase.insertContentEditable = function (txt) {\r\n\t\tbase.$preview.focus();\r\n\t\tbase.execCommand('insertText', txt);\r\n\t\tbase.saveCaret();\r\n\t\treturn base;\r\n\t};\r\n\r\n\t// check max length\r\n\tbase.checkMaxLength = function () {\r\n\t\tif (!base.$preview) { return; }\r\n\t\tvar start, caret,\r\n\t\t\tval = base.getValue(),\r\n\t\t\tlen = base.isContentEditable ? $keyboard.getEditableLength(base.el) : val.length;\r\n\t\tif (o.maxLength !== false && len > o.maxLength) {\r\n\t\t\tstart = $keyboard.caret(base.$preview).start;\r\n\t\t\tcaret = Math.min(start, o.maxLength);\r\n\r\n\t\t\t// prevent inserting new characters when maxed #289\r\n\t\t\tif (!o.maxInsert) {\r\n\t\t\t\tval = base.last.val;\r\n\t\t\t\tcaret = start - 1; // move caret back one\r\n\t\t\t}\r\n\t\t\tbase.setValue(val.substring(0, o.maxLength));\r\n\t\t\t// restore caret on change, otherwise it ends up at the end.\r\n\t\t\tbase.saveCaret(caret, caret);\r\n\t\t}\r\n\t\tif (base.$decBtn.length) {\r\n\t\t\tbase.checkDecimal();\r\n\t\t}\r\n\t\t// allow chaining\r\n\t\treturn base;\r\n\t};\r\n\r\n\t// mousedown repeater\r\n\tbase.repeatKey = function (key) {\r\n\t\tkey.trigger($keyboard.events.kbRepeater);\r\n\t\tif (base.mouseRepeat[0]) {\r\n\t\t\tbase.repeater = setTimeout(function () {\r\n\t\t\t\tif (base){\r\n\t\t\t\t\tbase.repeatKey(key);\r\n\t\t\t\t}\r\n\t\t\t}, base.repeatTime);\r\n\t\t}\r\n\t};\r\n\r\n\tbase.getKeySet = function () {\r\n\t\tvar sets = [];\r\n\t\tif (base.altActive) {\r\n\t\t\tsets.push('alt');\r\n\t\t}\r\n\t\tif (base.shiftActive) {\r\n\t\t\tsets.push('shift');\r\n\t\t}\r\n\t\tif (base.metaActive) {\r\n\t\t\t// base.metaActive contains the string name of the\r\n\t\t\t// current meta keyset\r\n\t\t\tsets.push(base.metaActive);\r\n\t\t}\r\n\t\treturn sets.length ? sets.join('+') : 'normal';\r\n\t};\r\n\r\n\t// make it easier to switch keysets via API\r\n\t// showKeySet('shift+alt+meta1')\r\n\tbase.showKeySet = function (str) {\r\n\t\tif (typeof str === 'string') {\r\n\t\t\tbase.last.keyset = [base.shiftActive, base.altActive, base.metaActive];\r\n\t\t\tbase.shiftActive = /shift/i.test(str);\r\n\t\t\tbase.altActive = /alt/i.test(str);\r\n\t\t\tif (/\\bmeta/.test(str)) {\r\n\t\t\t\tbase.metaActive = true;\r\n\t\t\t\tbase.showSet(str.match(/\\bmeta[\\w-]+/i)[0]);\r\n\t\t\t} else {\r\n\t\t\t\tbase.metaActive = false;\r\n\t\t\t\tbase.showSet();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tbase.showSet(str);\r\n\t\t}\r\n\t\t// allow chaining\r\n\t\treturn base;\r\n\t};\r\n\r\n\tbase.showSet = function (name) {\r\n\t\tif (!base.hasKeyboard()) { return; }\r\n\t\to = base.options; // refresh options\r\n\t\tvar kbcss = $keyboard.css,\r\n\t\t\tprefix = '.' + kbcss.keyPrefix,\r\n\t\t\tactive = o.css.buttonActive,\r\n\t\t\tkey = '',\r\n\t\t\ttoShow = (base.shiftActive ? 1 : 0) + (base.altActive ? 2 : 0);\r\n\t\tif (!base.shiftActive) {\r\n\t\t\tbase.capsLock = false;\r\n\t\t}\r\n\t\t// check meta key set\r\n\t\tif (base.metaActive) {\r\n\t\t\t// remove \"-shift\" and \"-alt\" from meta name if it exists\r\n\t\t\tif (base.shiftActive) {\r\n\t\t\t\tname = (name || '').replace('-shift', '');\r\n\t\t\t}\r\n\t\t\tif (base.altActive) {\r\n\t\t\t\tname = (name || '').replace('-alt', '');\r\n\t\t\t}\r\n\t\t\t// the name attribute contains the meta set name 'meta99'\r\n\t\t\tkey = (/^meta/i.test(name)) ? name : '';\r\n\t\t\t// save active meta keyset name\r\n\t\t\tif (key === '') {\r\n\t\t\t\tkey = (base.metaActive === true) ? '' : base.metaActive;\r\n\t\t\t} else {\r\n\t\t\t\tbase.metaActive = key;\r\n\t\t\t}\r\n\t\t\t// if meta keyset doesn't have a shift or alt keyset, then show just the meta key set\r\n\t\t\tif ((!o.stickyShift && base.last.keyset[2] !== base.metaActive) ||\r\n\t\t\t\t((base.shiftActive || base.altActive) &&\r\n\t\t\t\t!base.$keyboard.find('.' + kbcss.keySet + '-' + key + base.rows[toShow]).length)) {\r\n\t\t\t\tbase.shiftActive = base.altActive = false;\r\n\t\t\t}\r\n\t\t} else if (!o.stickyShift && base.last.keyset[2] !== base.metaActive && base.shiftActive) {\r\n\t\t\t// switching from meta key set back to default, reset shift & alt if using stickyShift\r\n\t\t\tbase.shiftActive = base.altActive = false;\r\n\t\t}\r\n\t\ttoShow = (base.shiftActive ? 1 : 0) + (base.altActive ? 2 : 0);\r\n\t\tkey = (toShow === 0 && !base.metaActive) ? '-normal' : (key === '') ? '' : '-' + key;\r\n\t\tif (!base.$keyboard.find('.' + kbcss.keySet + key + base.rows[toShow]).length) {\r\n\t\t\t// keyset doesn't exist, so restore last keyset settings\r\n\t\t\tbase.shiftActive = base.last.keyset[0];\r\n\t\t\tbase.altActive = base.last.keyset[1];\r\n\t\t\tbase.metaActive = base.last.keyset[2];\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tbase.$keyboard\r\n\t\t\t.find(prefix + 'alt,' + prefix + 'shift,.' + kbcss.keyAction + '[class*=meta]')\r\n\t\t\t.removeClass(active)\r\n\t\t\t.end()\r\n\t\t\t.find(prefix + 'alt')\r\n\t\t\t.toggleClass(active, base.altActive)\r\n\t\t\t.end()\r\n\t\t\t.find(prefix + 'shift')\r\n\t\t\t.toggleClass(active, base.shiftActive)\r\n\t\t\t.end()\r\n\t\t\t.find(prefix + 'lock')\r\n\t\t\t.toggleClass(active, base.capsLock)\r\n\t\t\t.end()\r\n\t\t\t.find('.' + kbcss.keySet)\r\n\t\t\t.hide()\r\n\t\t\t.end()\r\n\t\t\t.find('.' + (kbcss.keyAction + prefix + key).replace('--', '-'))\r\n\t\t\t.addClass(active);\r\n\r\n\t\t// show keyset using inline-block ( extender layout will then line up )\r\n\t\tbase.$keyboard.find('.' + kbcss.keySet + key + base.rows[toShow])[0].style.display = 'inline-block';\r\n\t\tif (base.metaActive) {\r\n\t\t\tbase.$keyboard.find(prefix + base.metaActive)\r\n\t\t\t\t// base.metaActive contains the string \"meta#\" or false\r\n\t\t\t\t// without the !== false, jQuery UI tries to transition the classes\r\n\t\t\t\t.toggleClass(active, base.metaActive !== false);\r\n\t\t}\r\n\t\tbase.last.keyset = [base.shiftActive, base.altActive, base.metaActive];\r\n\t\tbase.$el.trigger($keyboard.events.kbKeysetChange, [base, base.el]);\r\n\t\tif (o.reposition) {\r\n\t\t\tbase.reposition();\r\n\t\t}\r\n\t};\r\n\r\n\t// check for key combos (dead keys)\r\n\tbase.checkCombos = function () {\r\n\t\t// return val for close function\r\n\t\tif ( !(\r\n\t\t\tbase.isVisible() || (\r\n\t\t\t\tbase.hasKeyboard() &&\r\n\t\t\t\tbase.$keyboard.hasClass( $keyboard.css.hasFocus )\r\n\t\t\t)\r\n\t\t) ) {\r\n\t\t\treturn base.getValue(base.$preview || base.$el);\r\n\t\t}\r\n\t\tvar r, t, t2, repl,\r\n\t\t\t// use base.$preview.val() instead of base.preview.value\r\n\t\t\t// (val.length includes carriage returns in IE).\r\n\t\t\tval = base.getValue(),\r\n\t\t\tpos = $keyboard.caret(base.$preview),\r\n\t\t\tlayout = $keyboard.builtLayouts[base.layout],\r\n\t\t\tmax = base.isContentEditable ? $keyboard.getEditableLength(base.el) : val.length,\r\n\t\t\t// save original content length\r\n\t\t\tlen = max;\r\n\t\t// return if val is empty; fixes #352\r\n\t\tif (val === '') {\r\n\t\t\t// check valid on empty string - see #429\r\n\t\t\tif (o.acceptValid) {\r\n\t\t\t\tbase.checkValid();\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t\t// silly IE caret hacks... it should work correctly, but navigating using arrow keys in a textarea\r\n\t\t// is still difficult\r\n\t\t// in IE, pos.end can be zero after input loses focus\r\n\t\tif (pos.end < pos.start) {\r\n\t\t\tpos.end = pos.start;\r\n\t\t}\r\n\t\tif (pos.start > len) {\r\n\t\t\tpos.end = pos.start = len;\r\n\t\t}\r\n\t\t// This makes sure the caret moves to the next line after clicking on enter (manual typing works fine)\r\n\t\tif ($keyboard.msie && val.substring(pos.start, pos.start + 1) === '\\n') {\r\n\t\t\tpos.start += 1;\r\n\t\t\tpos.end += 1;\r\n\t\t}\r\n\r\n\t\tif (o.useCombos) {\r\n\t\t\t// keep 'a' and 'o' in the regex for ae and oe ligature (æ,œ)\r\n\t\t\t// thanks to KennyTM: http://stackoverflow.com/q/4275077\r\n\t\t\t// original regex /([`\\'~\\^\\\"ao])([a-z])/mig moved to $.keyboard.comboRegex\r\n\t\t\tif ($keyboard.msie) {\r\n\t\t\t\t// old IE may not have the caret positioned correctly, so just check the whole thing\r\n\t\t\t\tval = val.replace(base.regex, function (s, accent, letter) {\r\n\t\t\t\t\treturn (o.combos.hasOwnProperty(accent)) ? o.combos[accent][letter] || s : s;\r\n\t\t\t\t});\r\n\t\t\t\t// prevent combo replace error, in case the keyboard closes - see issue #116\r\n\t\t\t} else if (base.$preview.length) {\r\n\t\t\t\t// Modern browsers - check for combos from last two characters left of the caret\r\n\t\t\t\tt = pos.start - (pos.start - 2 >= 0 ? 2 : 0);\r\n\t\t\t\t// target last two characters\r\n\t\t\t\t$keyboard.caret(base.$preview, t, pos.end);\r\n\t\t\t\t// do combo replace\r\n\t\t\t\tt = $keyboard.caret(base.$preview);\r\n\t\t\t\trepl = function (txt) {\r\n\t\t\t\t\treturn (txt || '').replace(base.regex, function (s, accent, letter) {\r\n\t\t\t\t\t\treturn (o.combos.hasOwnProperty(accent)) ? o.combos[accent][letter] || s : s;\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tt2 = repl(t.text);\r\n\t\t\t\t// add combo back\r\n\t\t\t\t// prevent error if caret doesn't return a function\r\n\t\t\t\tif (t && t.replaceStr && t2 !== t.text) {\r\n\t\t\t\t\tif (base.isContentEditable) {\r\n\t\t\t\t\t\t$keyboard.replaceContent(el, repl);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbase.setValue(t.replaceStr(t2));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tval = base.getValue();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check input restrictions - in case content was pasted\r\n\t\tif (o.restrictInput && val !== '') {\r\n\t\t\tt = layout.acceptedKeys.length;\r\n\r\n\t\t\tr = layout.acceptedKeysRegex;\r\n\t\t\tif (!r) {\r\n\t\t\t\tt2 = $.map(layout.acceptedKeys, function (v) {\r\n\t\t\t\t\t// escape any special characters\r\n\t\t\t\t\treturn v.replace(base.escapeRegex, '\\\\$&');\r\n\t\t\t\t});\r\n\t\t\t\tif (base.alwaysAllowed.indexOf($keyboard.keyCodes.enter) > -1) {\r\n\t\t\t\t\tt2.push('\\\\n'); // Fixes #686\r\n\t\t\t\t}\r\n\t\t\t\tr = layout.acceptedKeysRegex = new RegExp('(' + t2.join('|') + ')', 'g');\r\n\t\t\t}\r\n\t\t\t// only save matching keys\r\n\t\t\tt2 = val.match(r);\r\n\t\t\tif (t2) {\r\n\t\t\t\tval = t2.join('');\r\n\t\t\t} else {\r\n\t\t\t\t// no valid characters\r\n\t\t\t\tval = '';\r\n\t\t\t\tlen = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// save changes, then reposition caret\r\n\t\tpos.start += max - len;\r\n\t\tpos.end += max - len;\r\n\r\n\t\tbase.setValue(val);\r\n\t\tbase.saveCaret(pos.start, pos.end);\r\n\t\t// set scroll to keep caret in view\r\n\t\tbase.setScroll();\r\n\t\tbase.checkMaxLength();\r\n\r\n\t\tif (o.acceptValid) {\r\n\t\t\tbase.checkValid();\r\n\t\t}\r\n\t\treturn val; // return text, used for keyboard closing section\r\n\t};\r\n\r\n\t// Toggle accept button classes, if validating\r\n\tbase.checkValid = function () {\r\n\t\tvar kbcss = $keyboard.css,\r\n\t\t\t$accept = base.$keyboard.find('.' + kbcss.keyPrefix + 'accept'),\r\n\t\t\tvalid = true;\r\n\t\tif (typeof o.validate === 'function') {\r\n\t\t\tvalid = o.validate(base, base.getValue(), false);\r\n\t\t}\r\n\t\t// toggle accept button classes; defined in the css\r\n\t\t$accept\r\n\t\t\t.toggleClass(kbcss.inputInvalid, !valid)\r\n\t\t\t.toggleClass(kbcss.inputValid, valid)\r\n\t\t\t// update title to indicate that the entry is valid or invalid\r\n\t\t\t.attr('title', $accept.attr('data-title') + ' (' + o.display[valid ? 'valid' : 'invalid'] + ')');\r\n\t};\r\n\r\n\t// Decimal button for num pad - only allow one (not used by default)\r\n\tbase.checkDecimal = function () {\r\n\t\t// Check US '.' or European ',' format\r\n\t\tif ((base.decimal && /\\./g.test(base.preview.value)) ||\r\n\t\t\t(!base.decimal && /\\,/g.test(base.preview.value))) {\r\n\t\t\tbase.$decBtn\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t'disabled': 'disabled',\r\n\t\t\t\t\t'aria-disabled': 'true'\r\n\t\t\t\t})\r\n\t\t\t\t.removeClass(o.css.buttonHover)\r\n\t\t\t\t.addClass(o.css.buttonDisabled);\r\n\t\t} else {\r\n\t\t\tbase.$decBtn\r\n\t\t\t\t.removeAttr('disabled')\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t'aria-disabled': 'false'\r\n\t\t\t\t})\r\n\t\t\t\t.addClass(o.css.buttonDefault)\r\n\t\t\t\t.removeClass(o.css.buttonDisabled);\r\n\t\t}\r\n\t};\r\n\r\n\t// get other layer values for a specific key\r\n\tbase.getLayers = function ($el) {\r\n\t\tvar kbcss = $keyboard.css,\r\n\t\t\tkey = $el.attr('data-pos'),\r\n\t\t\t$keys = $el.closest('.' + kbcss.keyboard)\r\n\t\t\t.find('button[data-pos=\"' + key + '\"]');\r\n\t\treturn $keys.filter(function () {\r\n\t\t\treturn $(this)\r\n\t\t\t\t.find('.' + kbcss.keyText)\r\n\t\t\t\t.text() !== '';\r\n\t\t})\r\n\t\t.add($el);\r\n\t};\r\n\r\n\t// Go to next or prev inputs\r\n\t// goToNext = true, then go to next input; if false go to prev\r\n\t// isAccepted is from autoAccept option or true if user presses shift+enter\r\n\tbase.switchInput = function (goToNext, isAccepted) {\r\n\t\tif (typeof o.switchInput === 'function') {\r\n\t\t\to.switchInput(base, goToNext, isAccepted);\r\n\t\t} else {\r\n\t\t\t// base.$keyboard may be an empty array - see #275 (apod42)\r\n\t\t\tif (base.$keyboard.length) {\r\n\t\t\t\tbase.$keyboard.hide();\r\n\t\t\t}\r\n\t\t\tvar kb,\r\n\t\t\t\tstopped = false,\r\n\t\t\t\tall = $('button, input, select, textarea, a, [contenteditable]')\r\n\t\t\t\t\t.filter(':visible')\r\n\t\t\t\t\t.not(':disabled'),\r\n\t\t\t\tindx = all.index(base.$el) + (goToNext ? 1 : -1);\r\n\t\t\tif (base.$keyboard.length) {\r\n\t\t\t\tbase.$keyboard.show();\r\n\t\t\t}\r\n\t\t\tif (indx > all.length - 1) {\r\n\t\t\t\tstopped = o.stopAtEnd;\r\n\t\t\t\tindx = 0; // go to first input\r\n\t\t\t}\r\n\t\t\tif (indx < 0) {\r\n\t\t\t\tstopped = o.stopAtEnd;\r\n\t\t\t\tindx = all.length - 1; // stop or go to last\r\n\t\t\t}\r\n\t\t\tif (!stopped) {\r\n\t\t\t\tisAccepted = base.close(isAccepted);\r\n\t\t\t\tif (!isAccepted) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tkb = all.eq(indx).data('keyboard');\r\n\t\t\t\tif (kb && kb.options.openOn.length) {\r\n\t\t\t\t\tkb.focusOn();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tall.eq(indx).focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t// Close the keyboard, if visible. Pass a status of true, if the content was accepted\r\n\t// (for the event trigger).\r\n\tbase.close = function (accepted) {\r\n\t\tif (base.isOpen && base.$keyboard.length) {\r\n\t\t\tclearTimeout(base.throttled);\r\n\t\t\tvar kbcss = $keyboard.css,\r\n\t\t\t\tkbevents = $keyboard.events,\r\n\t\t\t\tval = accepted ? base.checkCombos() : base.originalContent;\r\n\t\t\t// validate input if accepted\r\n\t\t\tif (accepted && typeof o.validate === 'function' && !o.validate(base, val, true)) {\r\n\t\t\t\tval = base.originalContent;\r\n\t\t\t\taccepted = false;\r\n\t\t\t\tif (o.cancelClose) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbase.isCurrent(false);\r\n\t\t\tbase.isOpen = o.alwaysOpen || o.userClosed;\r\n\t\t\tif (base.isContentEditable && !accepted) {\r\n\t\t\t\t// base.originalContent stores the HTML\r\n\t\t\t\tbase.$el.html(val);\r\n\t\t\t} else {\r\n\t\t\t\tbase.setValue(val, base.$el);\r\n\t\t\t}\r\n\t\t\tbase.$el\r\n\t\t\t\t.removeClass(kbcss.isCurrent + ' ' + kbcss.inputAutoAccepted)\r\n\t\t\t\t// add 'ui-keyboard-autoaccepted' to inputs - see issue #66\r\n\t\t\t\t.addClass((accepted || false) ? accepted === true ? '' : kbcss.inputAutoAccepted : '')\r\n\t\t\t\t// trigger default change event - see issue #146\r\n\t\t\t\t.trigger(kbevents.inputChange);\r\n\t\t\t// don't trigger an empty event - see issue #463\r\n\t\t\tif (!o.alwaysOpen) {\r\n\t\t\t\t// don't trigger beforeClose if keyboard is always open\r\n\t\t\t\tbase.$el.trigger(kbevents.kbBeforeClose, [base, base.el, (accepted || false)]);\r\n\t\t\t}\r\n\t\t\t// save caret after updating value (fixes userClosed issue with changing focus)\r\n\t\t\t$keyboard.caret(base.$preview, base.last);\r\n\r\n\t\t\tbase.$el\r\n\t\t\t\t.trigger(((accepted || false) ? kbevents.inputAccepted : kbevents.inputCanceled), [base, base.el])\r\n\t\t\t\t.trigger((o.alwaysOpen) ? kbevents.kbInactive : kbevents.kbHidden, [base, base.el])\r\n\t\t\t\t.blur();\r\n\r\n\t\t\t// base is undefined if keyboard was destroyed - fixes #358\r\n\t\t\tif (base) {\r\n\t\t\t\t// add close event time\r\n\t\t\t\tbase.last.eventTime = new Date().getTime();\r\n\t\t\t\tif (!(o.alwaysOpen || o.userClosed && accepted === 'true') && base.$keyboard.length) {\r\n\t\t\t\t\t// free up memory\r\n\t\t\t\t\tbase.removeKeyboard();\r\n\t\t\t\t\t// rebind input focus - delayed to fix IE issue #72\r\n\t\t\t\t\tbase.timer = setTimeout(function () {\r\n\t\t\t\t\t\tif (base) {\r\n\t\t\t\t\t\t\tbase.bindFocus();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 200);\r\n\t\t\t\t}\r\n\t\t\t\tif (!base.watermark && base.el.value === '' && base.inPlaceholder !== '') {\r\n\t\t\t\t\tbase.$el.addClass(kbcss.placeholder);\r\n\t\t\t\t\tbase.setValue(base.inPlaceholder, base.$el);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !!accepted;\r\n\t};\r\n\r\n\tbase.accept = function () {\r\n\t\treturn base.close(true);\r\n\t};\r\n\r\n\tbase.checkClose = function (e) {\r\n\t\tif (base.opening) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar kbcss = $.keyboard.css,\r\n\t\t\t$target = e.$target || $(e.target).closest('.' + $keyboard.css.keyboard + ', .' + $keyboard.css.input);\r\n\t\tif (!$target.length) {\r\n\t\t\t$target = $(e.target);\r\n\t\t}\r\n\t\t// needed for IE to allow switching between keyboards smoothly\r\n\t\tif ($target.length && $target.hasClass(kbcss.keyboard)) {\r\n\t\t\tvar kb = $target.data('keyboard');\r\n\t\t\t// only trigger on self\r\n\t\t\tif (\r\n\t\t\t\tkb !== base &&\r\n\t\t\t\t!kb.$el.hasClass(kbcss.isCurrent) &&\r\n\t\t\t\tkb.options.openOn &&\r\n\t\t\t\te.type === o.openOn\r\n\t\t\t) {\r\n\t\t\t\tkb.focusOn();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tbase.escClose(e, $target);\r\n\t\t}\r\n\t};\r\n\r\n\t// callback functions called to check if the keyboard needs to be closed\r\n\t// e.g. on escape or clicking outside the keyboard\r\n\tbase.escCloseCallback = {\r\n\t\t// keep keyboard open if alwaysOpen or stayOpen is true - fixes mutliple\r\n\t\t// always open keyboards or single stay open keyboard\r\n\t\tkeepOpen: function() {\r\n\t\t\treturn !base.isOpen;\r\n\t\t}\r\n\t};\r\n\r\n\tbase.escClose = function (e, $el) {\r\n\t\tif (!base.isOpen) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (e && e.type === 'keyup') {\r\n\t\t\treturn (e.which === $keyboard.keyCodes.escape && !o.ignoreEsc) ?\r\n\t\t\t\tbase.close(o.autoAccept && o.autoAcceptOnEsc ? 'true' : false) :\r\n\t\t\t\t'';\r\n\t\t}\r\n\t\tvar shouldStayOpen = false,\r\n\t\t\t$target = $el.length && $el || $(e.target);\r\n\t\t$.each(base.escCloseCallback, function(i, callback) {\r\n\t\t\tif (typeof callback === 'function') {\r\n\t\t\t\tshouldStayOpen = shouldStayOpen || callback($target);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (shouldStayOpen) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// ignore autoaccept if using escape - good idea?\r\n\t\tif (!base.isCurrent() && base.isOpen || base.isOpen && $target[0] !== base.el) {\r\n\t\t\t// don't close if stayOpen is set; but close if a different keyboard is being opened\r\n\t\t\tif ((o.stayOpen || o.userClosed) && !$target.hasClass($keyboard.css.input)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// stop propogation in IE - an input getting focus doesn't open a keyboard if one is already open\r\n\t\t\tif ($keyboard.allie) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\tif (o.closeByClickEvent) {\r\n\t\t\t\t// only close the keyboard if the user is clicking on an input or if they cause a click\r\n\t\t\t\t// event (touchstart/mousedown will not force the close with this setting)\r\n\t\t\t\tvar name = $target[0] && $target[0].nodeName.toLowerCase();\r\n\t\t\t\tif (name === 'input' || name === 'textarea' || e.type === 'click') {\r\n\t\t\t\t\tbase.close(o.autoAccept ? 'true' : false);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// send 'true' instead of a true (boolean), the input won't get a 'ui-keyboard-autoaccepted'\r\n\t\t\t\t// class name - see issue #66\r\n\t\t\t\tbase.close(o.autoAccept ? 'true' : false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Build default button\r\n\tbase.keyBtn = $('<button />')\r\n\t\t.attr({\r\n\t\t\t'role': 'button',\r\n\t\t\t'type': 'button',\r\n\t\t\t'aria-disabled': 'false',\r\n\t\t\t'tabindex': '-1'\r\n\t\t})\r\n\t\t.addClass($keyboard.css.keyButton);\r\n\r\n\t// convert key names into a class name\r\n\tbase.processName = function (name) {\r\n\t\tvar index, n,\r\n\t\t\tprocess = (name || '').replace(/[^a-z0-9-_]/gi, ''),\r\n\t\t\tlen = process.length,\r\n\t\t\tnewName = [];\r\n\t\tif (len > 1 && name === process) {\r\n\t\t\t// return name if basic text\r\n\t\t\treturn name;\r\n\t\t}\r\n\t\t// return character code sequence\r\n\t\tlen = name.length;\r\n\t\tif (len) {\r\n\t\t\tfor (index = 0; index < len; index++) {\r\n\t\t\t\tn = name[index];\r\n\t\t\t\t// keep '-' and '_'... so for dash, we get two dashes in a row\r\n\t\t\t\tnewName.push(/[a-z0-9-_]/i.test(n) ?\r\n\t\t\t\t\t(/[-_]/.test(n) && index !== 0 ? '' : n) :\r\n\t\t\t\t\t(index === 0 ? '' : '-') + n.charCodeAt(0)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn newName.join('');\r\n\t\t}\r\n\t\treturn name;\r\n\t};\r\n\r\n\tbase.processKeys = function (name) {\r\n\t\tvar tmp, parts,\r\n\t\t\thtmlIndex = name.indexOf('</'),\r\n\t\t\tdata = {\r\n\t\t\t\tname: name,\r\n\t\t\t\tmap: '',\r\n\t\t\t\ttitle: ''\r\n\t\t\t};\r\n\t\tif (htmlIndex > -1) {\r\n\t\t\t// If it looks like HTML, skip processing; see #743\r\n\t\t\t// html may include colons; see #701\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\t// Don't split colons followed by //, e.g. https://; Fixes #555\r\n\t\tparts = name.split(/:(?!\\/\\/)/);\r\n\r\n\t\t/* map defined keys\r\n\t\tformat 'key(A):Label_for_key_(ignore_parentheses_here)'\r\n\t\t\t'key' = key that is seen (can any character(s); but it might need to be escaped using '\\'\r\n\t\t\tor entered as unicode '\\u####'\r\n\t\t\t'(A)' = the actual key on the real keyboard to remap\r\n\t\t\t':Label_for_key' ends up in the title/tooltip\r\n\t\tExamples:\r\n\t\t\t'\\u0391(A):alpha', 'x(y):this_(might)_cause_problems\r\n\t\t\tor edge cases of ':(x)', 'x(:)', 'x(()' or 'x())'\r\n\t\tEnhancement (if I can get alt keys to work):\r\n\t\t\tA mapped key will include the mod key, e.g. 'x(alt-x)' or 'x(alt-shift-x)'\r\n\t\t*/\r\n\t\tif (/\\(.+\\)/.test(parts[0]) || /^:\\(.+\\)/.test(name) || /\\([(:)]\\)/.test(name)) {\r\n\t\t\t// edge cases 'x(:)', 'x(()' or 'x())'\r\n\t\t\tif (/\\([(:)]\\)/.test(name)) {\r\n\t\t\t\ttmp = parts[0].match(/([^(]+)\\((.+)\\)/);\r\n\t\t\t\tif (tmp && tmp.length) {\r\n\t\t\t\t\tdata.name = tmp[1];\r\n\t\t\t\t\tdata.map = tmp[2];\r\n\t\t\t\t\tdata.title = parts.length > 1 ? parts.slice(1).join(':') : '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// edge cases 'x(:)', ':(x)' or ':(:)'\r\n\t\t\t\t\tdata.name = name.match(/([^(]+)/)[0];\r\n\t\t\t\t\tif (data.name === ':') {\r\n\t\t\t\t\t\t// ':(:):test' => parts = [ '', '(', ')', 'title' ] need to slice 1\r\n\t\t\t\t\t\tparts = parts.slice(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tmp === null) {\r\n\t\t\t\t\t\t// 'x(:):test' => parts = [ 'x(', ')', 'title' ] need to slice 2\r\n\t\t\t\t\t\tdata.map = ':';\r\n\t\t\t\t\t\tparts = parts.slice(2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata.title = parts.length ? parts.join(':') : '';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// example: \\u0391(A):alpha; extract 'A' from '(A)'\r\n\t\t\t\tdata.map = name.match(/\\(([^()]+?)\\)/)[1];\r\n\t\t\t\t// remove '(A)', left with '\\u0391:alpha'\r\n\t\t\t\tname = name.replace(/\\(([^()]+)\\)/, '');\r\n\t\t\t\ttmp = name.split(':');\r\n\t\t\t\t// get '\\u0391' from '\\u0391:alpha'\r\n\t\t\t\tif (tmp[0] === '') {\r\n\t\t\t\t\tdata.name = ':';\r\n\t\t\t\t\tparts = parts.slice(1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata.name = tmp[0];\r\n\t\t\t\t}\r\n\t\t\t\tdata.title = parts.length > 1 ? parts.slice(1).join(':') : '';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// find key label\r\n\t\t\t// corner case of '::;' reduced to ':;', split as ['', ';']\r\n\t\t\tif (name !== '' && parts[0] === '') {\r\n\t\t\t\tdata.name = ':';\r\n\t\t\t\tparts = parts.slice(1);\r\n\t\t\t} else {\r\n\t\t\t\tdata.name = parts[0];\r\n\t\t\t}\r\n\t\t\tdata.title = parts.length > 1 ? parts.slice(1).join(':') : '';\r\n\t\t}\r\n\t\tdata.title = $.trim(data.title).replace(/_/g, ' ');\r\n\t\treturn data;\r\n\t};\r\n\r\n\t// Add key function\r\n\t// keyName = the name of the function called in $.keyboard.keyaction when the button is clicked\r\n\t// name = name added to key, or cross-referenced in the display options\r\n\t// base.temp[0] = keyset to attach the new button\r\n\t// regKey = true when it is not an action key\r\n\tbase.addKey = function (keyName, action, regKey) {\r\n\t\tvar keyClass, tmp, keys,\r\n\t\t\tdata = {},\r\n\t\t\ttxt = base.processKeys(regKey ? keyName : action),\r\n\t\t\tkbcss = $keyboard.css;\r\n\r\n\t\tif (!regKey && o.display[txt.name]) {\r\n\t\t\tkeys = base.processKeys(o.display[txt.name]);\r\n\t\t\t// action contained in \"keyName\" (e.g. keyName = \"accept\",\r\n\t\t\t// action = \"a\" (use checkmark instead of text))\r\n\t\t\tkeys.action = base.processKeys(keyName).name;\r\n\t\t} else {\r\n\t\t\t// when regKey is true, keyName is the same as action\r\n\t\t\tkeys = txt;\r\n\t\t\tkeys.action = txt.name;\r\n\t\t}\r\n\r\n\t\tdata.name = base.processName(txt.name);\r\n\t\tif (keys.name !== '') {\r\n\t\t\tif (keys.map !== '') {\r\n\t\t\t\t$keyboard.builtLayouts[base.layout].mappedKeys[keys.map] = keys.name;\r\n\t\t\t\t$keyboard.builtLayouts[base.layout].acceptedKeys.push(keys.name);\r\n\t\t\t} else if (regKey) {\r\n\t\t\t\t$keyboard.builtLayouts[base.layout].acceptedKeys.push(keys.name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (regKey) {\r\n\t\t\tkeyClass = data.name === '' ? '' : kbcss.keyPrefix + data.name;\r\n\t\t} else {\r\n\t\t\t// Action keys will have the 'ui-keyboard-actionkey' class\r\n\t\t\tkeyClass = kbcss.keyAction + ' ' + kbcss.keyPrefix + keys.action;\r\n\t\t}\r\n\t\t// '\\u2190'.length = 1 because the unicode is converted, so if more than one character,\r\n\t\t// add the wide class\r\n\t\tkeyClass += (keys.name.length > 2 ? ' ' + kbcss.keyWide : '') + ' ' + o.css.buttonDefault;\r\n\r\n\t\t// Allow HTML in the key.name\r\n\t\tdata.html = '<span class=\"' + kbcss.keyText + '\">' + keys.name + '</span>';\r\n\r\n\t\tdata.$key = base.keyBtn\r\n\t\t\t.clone()\r\n\t\t\t.attr({\r\n\t\t\t\t'data-value': regKey ? keys.name : keys.action, // value\r\n\t\t\t\t'data-name': keys.action,\r\n\t\t\t\t'data-pos': base.temp[1] + ',' + base.temp[2],\r\n\t\t\t\t'data-action': keys.action,\r\n\t\t\t\t'data-html': data.html\r\n\t\t\t})\r\n\t\t\t// add 'ui-keyboard-' + data.name for all keys\r\n\t\t\t//  (e.g. 'Bksp' will have 'ui-keyboard-bskp' class)\r\n\t\t\t// any non-alphanumeric characters will be replaced with\r\n\t\t\t//  their decimal unicode value\r\n\t\t\t//  (e.g. '~' is a regular key, class = 'ui-keyboard-126'\r\n\t\t\t//  (126 is the unicode decimal value - same as &#126;)\r\n\t\t\t//  See https://en.wikipedia.org/wiki/List_of_Unicode_characters#Control_codes\r\n\t\t\t.addClass(keyClass)\r\n\t\t\t.html(data.html)\r\n\t\t\t.appendTo(base.temp[0]);\r\n\r\n\t\tif (keys.map) {\r\n\t\t\tdata.$key.attr('data-mapped', keys.map);\r\n\t\t}\r\n\t\tif (keys.title || txt.title) {\r\n\t\t\tdata.$key.attr({\r\n\t\t\t\t'data-title': txt.title || keys.title, // used to allow adding content to title\r\n\t\t\t\t'title': txt.title || keys.title\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (typeof o.buildKey === 'function') {\r\n\t\t\tdata = o.buildKey(base, data);\r\n\t\t\t// copy html back to attributes\r\n\t\t\ttmp = data.$key.html();\r\n\t\t\tdata.$key.attr('data-html', tmp);\r\n\t\t}\r\n\t\treturn data.$key;\r\n\t};\r\n\r\n\tbase.customHash = function (layout) {\r\n\t\t/*jshint bitwise:false */\r\n\t\tvar i, array, hash, character, len,\r\n\t\t\tarrays = [],\r\n\t\t\tmerged = [];\r\n\t\t// pass layout to allow for testing\r\n\t\tlayout = typeof layout === 'undefined' ? o.customLayout : layout;\r\n\t\t// get all layout arrays\r\n\t\tfor (array in layout) {\r\n\t\t\tif (layout.hasOwnProperty(array)) {\r\n\t\t\t\tarrays.push(layout[array]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// flatten array\r\n\t\tmerged = merged.concat.apply(merged, arrays).join(' ');\r\n\t\t// produce hash name - http://stackoverflow.com/a/7616484/145346\r\n\t\thash = 0;\r\n\t\tlen = merged.length;\r\n\t\tif (len === 0) {\r\n\t\t\treturn hash;\r\n\t\t}\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tcharacter = merged.charCodeAt(i);\r\n\t\t\thash = ((hash << 5) - hash) + character;\r\n\t\t\thash = hash & hash; // Convert to 32bit integer\r\n\t\t}\r\n\t\treturn hash;\r\n\t};\r\n\r\n\tbase.buildKeyboard = function (name, internal) {\r\n\t\t// o.display is empty when this is called from the scramble extension (when alwaysOpen:true)\r\n\t\tif ($.isEmptyObject(o.display)) {\r\n\t\t\t// set keyboard language\r\n\t\t\tbase.updateLanguage();\r\n\t\t}\r\n\t\tvar index, row, $row, currentSet,\r\n\t\t\tkbcss = $keyboard.css,\r\n\t\t\tsets = 0,\r\n\t\t\tlayout = $keyboard.builtLayouts[name || base.layout || o.layout] = {\r\n\t\t\t\tmappedKeys: {},\r\n\t\t\t\tacceptedKeys: []\r\n\t\t\t},\r\n\t\t\tacceptedKeys = layout.acceptedKeys = o.restrictInclude ?\r\n\t\t\t\t('' + o.restrictInclude).split(/\\s+/) || [] :\r\n\t\t\t\t[],\r\n\t\t\t// using $layout temporarily to hold keyboard popup classnames\r\n\t\t\t$layout = kbcss.keyboard + ' ' + o.css.popup + ' ' + o.css.container +\r\n\t\t\t\t(o.alwaysOpen || o.userClosed ? ' ' + kbcss.alwaysOpen : ''),\r\n\r\n\t\t\tcontainer = $('<div />')\r\n\t\t\t\t.addClass($layout)\r\n\t\t\t\t.attr({\r\n\t\t\t\t\t'role': 'textbox'\r\n\t\t\t\t})\r\n\t\t\t\t.hide();\r\n\r\n\t\t// allow adding \"{space}\" as an accepted key - Fixes #627\r\n\t\tindex = $.inArray('{space}', acceptedKeys);\r\n\t\tif (index > -1) {\r\n\t\t\tacceptedKeys[index] = ' ';\r\n\t\t}\r\n\r\n\t\t// verify layout or setup custom keyboard\r\n\t\tif ((internal && o.layout === 'custom') || !$keyboard.layouts.hasOwnProperty(o.layout)) {\r\n\t\t\to.layout = 'custom';\r\n\t\t\t$layout = $keyboard.layouts.custom = o.customLayout || {\r\n\t\t\t\t'normal': ['{cancel}']\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t$layout = $keyboard.layouts[internal ? o.layout : name || base.layout || o.layout];\r\n\t\t}\r\n\r\n\t\t// Main keyboard building loop\r\n\t\t$.each($layout, function (set, keySet) {\r\n\t\t\t// skip layout name & lang settings\r\n\t\t\tif (set !== '' && !/^(name|lang|rtl)$/i.test(set)) {\r\n\t\t\t\t// keep backwards compatibility for change from default to normal naming\r\n\t\t\t\tif (set === 'default') {\r\n\t\t\t\t\tset = 'normal';\r\n\t\t\t\t}\r\n\t\t\t\tsets++;\r\n\t\t\t\t$row = $('<div />')\r\n\t\t\t\t\t.attr('name', set) // added for typing extension\r\n\t\t\t\t\t.addClass(kbcss.keySet + ' ' + kbcss.keySet + '-' + set)\r\n\t\t\t\t\t.appendTo(container)\r\n\t\t\t\t\t.toggle(set === 'normal');\r\n\r\n\t\t\t\tfor (row = 0; row < keySet.length; row++) {\r\n\t\t\t\t\t// remove extra spaces before spliting (regex probably could be improved)\r\n\t\t\t\t\tcurrentSet = $.trim(keySet[row]).replace(/\\{(\\.?)[\\s+]?:[\\s+]?(\\.?)\\}/g, '{$1:$2}');\r\n\t\t\t\t\tbase.buildRow($row, row, currentSet.split(/\\s+/), acceptedKeys);\r\n\t\t\t\t\t$row.find('.' + kbcss.keyButton + ',.' + kbcss.keySpacer)\r\n\t\t\t\t\t\t.filter(':last')\r\n\t\t\t\t\t\t.after('<br class=\"' + kbcss.endRow + '\"/>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (sets > 1) {\r\n\t\t\tbase.sets = true;\r\n\t\t}\r\n\t\tlayout.hasMappedKeys = !($.isEmptyObject(layout.mappedKeys));\r\n\t\tlayout.$keyboard = container;\r\n\t\treturn container;\r\n\t};\r\n\r\n\tbase.buildRow = function ($row, row, keys, acceptedKeys) {\r\n\t\tvar t, txt, key, isAction, action, margin,\r\n\t\t\tkbcss = $keyboard.css;\r\n\t\tfor (key = 0; key < keys.length; key++) {\r\n\t\t\t// used by addKey function\r\n\t\t\tbase.temp = [$row, row, key];\r\n\t\t\tisAction = false;\r\n\r\n\t\t\t// ignore empty keys\r\n\t\t\tif (keys[key].length === 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// process here if it's an action key\r\n\t\t\tif (/^\\{\\S+\\}$/.test(keys[key])) {\r\n\t\t\t\taction = keys[key].match(/^\\{(\\S+)\\}$/)[1];\r\n\t\t\t\t// add active class if there are double exclamation points in the name\r\n\t\t\t\tif (/\\!\\!/.test(action)) {\r\n\t\t\t\t\taction = action.replace('!!', '');\r\n\t\t\t\t\tisAction = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add empty space\r\n\t\t\t\tif (/^sp:((\\d+)?([\\.|,]\\d+)?)(em|px)?$/i.test(action)) {\r\n\t\t\t\t\t// not perfect globalization, but allows you to use {sp:1,1em}, {sp:1.2em} or {sp:15px}\r\n\t\t\t\t\tmargin = parseFloat(action\r\n\t\t\t\t\t\t.replace(/,/, '.')\r\n\t\t\t\t\t\t.match(/^sp:((\\d+)?([\\.|,]\\d+)?)(em|px)?$/i)[1] || 0\r\n\t\t\t\t\t);\r\n\t\t\t\t\t$('<span class=\"' + kbcss.keyText + '\"></span>')\r\n\t\t\t\t\t\t// previously {sp:1} would add 1em margin to each side of a 0 width span\r\n\t\t\t\t\t\t// now Firefox doesn't seem to render 0px dimensions, so now we set the\r\n\t\t\t\t\t\t// 1em margin x 2 for the width\r\n\t\t\t\t\t\t.width((action.match(/px/i) ? margin + 'px' : (margin * 2) + 'em'))\r\n\t\t\t\t\t\t.addClass(kbcss.keySpacer)\r\n\t\t\t\t\t\t.appendTo($row);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add empty button\r\n\t\t\t\tif (/^empty(:((\\d+)?([\\.|,]\\d+)?)(em|px)?)?$/i.test(action)) {\r\n\t\t\t\t\tmargin = (/:/.test(action)) ? parseFloat(action\r\n\t\t\t\t\t\t.replace(/,/, '.')\r\n\t\t\t\t\t\t.match(/^empty:((\\d+)?([\\.|,]\\d+)?)(em|px)?$/i)[1] || 0\r\n\t\t\t\t\t) : '';\r\n\t\t\t\t\tbase\r\n\t\t\t\t\t\t.addKey('', ' ', true)\r\n\t\t\t\t\t\t.addClass(o.css.buttonDisabled + ' ' + o.css.buttonEmpty)\r\n\t\t\t\t\t\t.attr('aria-disabled', true)\r\n\t\t\t\t\t\t.width(margin ? (action.match('px') ? margin + 'px' : (margin * 2) + 'em') : '');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// meta keys\r\n\t\t\t\tif (/^meta[\\w-]+\\:?(\\w+)?/i.test(action)) {\r\n\t\t\t\t\tbase\r\n\t\t\t\t\t\t.addKey(action.split(':')[0], action)\r\n\t\t\t\t\t\t.addClass(kbcss.keyHasActive);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// switch needed for action keys with multiple names/shortcuts or\r\n\t\t\t\t// default will catch all others\r\n\t\t\t\ttxt = action.split(':');\r\n\t\t\t\tswitch (txt[0].toLowerCase()) {\r\n\r\n\t\t\t\tcase 'a':\r\n\t\t\t\tcase 'accept':\r\n\t\t\t\t\tbase\r\n\t\t\t\t\t\t.addKey('accept', action)\r\n\t\t\t\t\t\t.addClass(o.css.buttonAction + ' ' + kbcss.keyAction);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'alt':\r\n\t\t\t\tcase 'altgr':\r\n\t\t\t\t\tbase\r\n\t\t\t\t\t\t.addKey('alt', action)\r\n\t\t\t\t\t\t.addClass(kbcss.keyHasActive);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\t\t\t\tcase 'bksp':\r\n\t\t\t\t\tbase.addKey('bksp', action);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\t\t\t\tcase 'cancel':\r\n\t\t\t\t\tbase\r\n\t\t\t\t\t\t.addKey('cancel', action)\r\n\t\t\t\t\t\t.addClass(o.css.buttonAction + ' ' + kbcss.keyAction);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// toggle combo/diacritic key\r\n\t\t\t\t\t/*jshint -W083 */\r\n\t\t\t\tcase 'combo':\r\n\t\t\t\t\tbase\r\n\t\t\t\t\t\t.addKey('combo', action)\r\n\t\t\t\t\t\t.addClass(kbcss.keyHasActive)\r\n\t\t\t\t\t\t.attr('title', function (indx, title) {\r\n\t\t\t\t\t\t\t// add combo key state to title\r\n\t\t\t\t\t\t\treturn title + ' ' + o.display[o.useCombos ? 'active' : 'disabled'];\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.toggleClass(o.css.buttonActive, o.useCombos);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// Decimal - unique decimal point (num pad layout)\r\n\t\t\t\tcase 'dec':\r\n\t\t\t\t\tacceptedKeys.push((base.decimal) ? '.' : ',');\r\n\t\t\t\t\tbase.addKey('dec', action);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'e':\r\n\t\t\t\tcase 'enter':\r\n\t\t\t\t\tbase\r\n\t\t\t\t\t\t.addKey('enter', action)\r\n\t\t\t\t\t\t.addClass(o.css.buttonAction + ' ' + kbcss.keyAction);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'lock':\r\n\t\t\t\t\tbase\r\n\t\t\t\t\t\t.addKey('lock', action)\r\n\t\t\t\t\t\t.addClass(kbcss.keyHasActive);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 's':\r\n\t\t\t\tcase 'shift':\r\n\t\t\t\t\tbase\r\n\t\t\t\t\t\t.addKey('shift', action)\r\n\t\t\t\t\t\t.addClass(kbcss.keyHasActive);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// Change sign (for num pad layout)\r\n\t\t\t\tcase 'sign':\r\n\t\t\t\t\tacceptedKeys.push('-');\r\n\t\t\t\t\tbase.addKey('sign', action);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'space':\r\n\t\t\t\t\tacceptedKeys.push(' ');\r\n\t\t\t\t\tbase.addKey('space', action);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\t\t\t\tcase 'tab':\r\n\t\t\t\t\tbase.addKey('tab', action);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif ($keyboard.keyaction.hasOwnProperty(txt[0])) {\r\n\t\t\t\t\t\tbase\r\n\t\t\t\t\t\t\t.addKey(txt[0], action)\r\n\t\t\t\t\t\t\t.toggleClass(o.css.buttonAction + ' ' + kbcss.keyAction, isAction);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// regular button (not an action key)\r\n\t\t\t\tt = keys[key];\r\n\t\t\t\tbase.addKey(t, t, true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tbase.removeBindings = function (namespace) {\r\n\t\t$(document).unbind(namespace);\r\n\t\tif (base.el.ownerDocument !== document) {\r\n\t\t\t$(base.el.ownerDocument).unbind(namespace);\r\n\t\t}\r\n\t\t$(window).unbind(namespace);\r\n\t\tbase.$el.unbind(namespace);\r\n\t};\r\n\r\n\tbase.removeKeyboard = function () {\r\n\t\tbase.$decBtn = [];\r\n\t\t// base.$preview === base.$el when o.usePreview is false - fixes #442\r\n\t\tif (o.usePreview) {\r\n\t\t\tbase.$preview.removeData('keyboard');\r\n\t\t}\r\n\t\tbase.$preview.unbind(base.namespace + 'keybindings');\r\n\t\tbase.preview = null;\r\n\t\tbase.$preview = null;\r\n\t\tbase.$previewCopy = null;\r\n\t\tbase.$keyboard.removeData('keyboard');\r\n\t\tbase.$keyboard.remove();\r\n\t\tbase.$keyboard = [];\r\n\t\tbase.isOpen = false;\r\n\t\tbase.isCurrent(false);\r\n\t};\r\n\r\n\tbase.destroy = function (callback) {\r\n\t\tvar index,\r\n\t\t\tkbcss = $keyboard.css,\r\n\t\t\tlen = base.extensionNamespace.length,\r\n\t\t\ttmp = [\r\n\t\t\t\tkbcss.input,\r\n\t\t\t\tkbcss.locked,\r\n\t\t\t\tkbcss.placeholder,\r\n\t\t\t\tkbcss.noKeyboard,\r\n\t\t\t\tkbcss.alwaysOpen,\r\n\t\t\t\to.css.input,\r\n\t\t\t\tkbcss.isCurrent\r\n\t\t\t].join(' ');\r\n\t\tclearTimeout(base.timer);\r\n\t\tclearTimeout(base.timer2);\r\n\t\tclearTimeout(base.timer3);\r\n\t\tif (base.$keyboard.length) {\r\n\t\t\tbase.removeKeyboard();\r\n\t\t}\r\n\t\tif (base.options.openOn) {\r\n\t\t\tbase.removeBindings(base.options.openOn);\r\n\t\t}\r\n\t\tbase.removeBindings(base.namespace);\r\n\t\tbase.removeBindings(base.namespace + 'callbacks');\r\n\t\tfor (index = 0; index < len; index++) {\r\n\t\t\tbase.removeBindings(base.extensionNamespace[index]);\r\n\t\t}\r\n\t\tbase.el.active = false;\r\n\r\n\t\tbase.$el\r\n\t\t\t.removeClass(tmp)\r\n\t\t\t.removeAttr('aria-haspopup')\r\n\t\t\t.removeAttr('role')\r\n\t\t\t.removeData('keyboard');\r\n\t\tbase = null;\r\n\r\n\t\tif (typeof callback === 'function') {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\t// Run initializer\r\n\tbase.init();\r\n\r\n\t}; // end $.keyboard definition\r\n\r\n\t// event.which & ASCII values\r\n\t$keyboard.keyCodes = {\r\n\t\tbackSpace: 8,\r\n\t\ttab: 9,\r\n\t\tenter: 13,\r\n\t\tcapsLock: 20,\r\n\t\tescape: 27,\r\n\t\tspace: 32,\r\n\t\tpageUp: 33,\r\n\t\tpageDown: 34,\r\n\t\tend: 35,\r\n\t\thome: 36,\r\n\t\tleft: 37,\r\n\t\tup: 38,\r\n\t\tright: 39,\r\n\t\tdown: 40,\r\n\t\tinsert: 45,\r\n\t\tdelete: 46,\r\n\t\t// event.which keyCodes (uppercase letters)\r\n\t\tA: 65,\r\n\t\tZ: 90,\r\n\t\tV: 86,\r\n\t\tC: 67,\r\n\t\tX: 88,\r\n\r\n\t\t// ASCII lowercase a & z\r\n\t\ta: 97,\r\n\t\tz: 122\r\n\t};\r\n\r\n\t$keyboard.css = {\r\n\t\t// keyboard id suffix\r\n\t\tidSuffix: '_keyboard',\r\n\t\t// class name to set initial focus\r\n\t\tinitialFocus: 'keyboard-init-focus',\r\n\t\t// element class names\r\n\t\tinput: 'ui-keyboard-input',\r\n\t\tinputClone: 'ui-keyboard-preview-clone',\r\n\t\twrapper: 'ui-keyboard-preview-wrapper',\r\n\t\tpreview: 'ui-keyboard-preview',\r\n\t\tkeyboard: 'ui-keyboard',\r\n\t\tkeySet: 'ui-keyboard-keyset',\r\n\t\tkeyButton: 'ui-keyboard-button',\r\n\t\tkeyWide: 'ui-keyboard-widekey',\r\n\t\tkeyPrefix: 'ui-keyboard-',\r\n\t\tkeyText: 'ui-keyboard-text', // span with button text\r\n\t\tkeyHasActive: 'ui-keyboard-hasactivestate',\r\n\t\tkeyAction: 'ui-keyboard-actionkey',\r\n\t\tkeySpacer: 'ui-keyboard-spacer', // empty keys\r\n\t\tkeyToggle: 'ui-keyboard-toggle',\r\n\t\tkeyDisabled: 'ui-keyboard-disabled',\r\n\t\t// Class for BRs with a div wrapper inside of contenteditable\r\n\t\tdivWrapperCE: 'ui-keyboard-div-wrapper',\r\n\t\t// states\r\n\t\tlocked: 'ui-keyboard-lockedinput',\r\n\t\talwaysOpen: 'ui-keyboard-always-open',\r\n\t\tnoKeyboard: 'ui-keyboard-nokeyboard',\r\n\t\tplaceholder: 'ui-keyboard-placeholder',\r\n\t\thasFocus: 'ui-keyboard-has-focus',\r\n\t\tisCurrent: 'ui-keyboard-input-current',\r\n\t\t// validation & autoaccept\r\n\t\tinputValid: 'ui-keyboard-valid-input',\r\n\t\tinputInvalid: 'ui-keyboard-invalid-input',\r\n\t\tinputAutoAccepted: 'ui-keyboard-autoaccepted',\r\n\t\tendRow: 'ui-keyboard-button-endrow' // class added to <br>\r\n\t};\r\n\r\n\t$keyboard.events = {\r\n\t\t// keyboard events\r\n\t\tkbChange: 'keyboardChange',\r\n\t\tkbBeforeClose: 'beforeClose',\r\n\t\tkbBeforeVisible: 'beforeVisible',\r\n\t\tkbVisible: 'visible',\r\n\t\tkbInit: 'initialized',\r\n\t\tkbInactive: 'inactive',\r\n\t\tkbHidden: 'hidden',\r\n\t\tkbRepeater: 'repeater',\r\n\t\tkbKeysetChange: 'keysetChange',\r\n\t\t// input events\r\n\t\tinputAccepted: 'accepted',\r\n\t\tinputCanceled: 'canceled',\r\n\t\tinputChange: 'change',\r\n\t\tinputRestricted: 'restricted'\r\n\t};\r\n\r\n\t// Action key function list\r\n\t$keyboard.keyaction = {\r\n\t\taccept: function (base) {\r\n\t\t\tbase.close(true); // same as base.accept();\r\n\t\t\treturn false; // return false prevents further processing\r\n\t\t},\r\n\t\talt: function (base) {\r\n\t\t\tbase.altActive = !base.altActive;\r\n\t\t\tbase.showSet();\r\n\t\t},\r\n\t\tbksp: function (base) {\r\n\t\t\tif (base.isContentEditable) {\r\n\t\t\t\tbase.execCommand('delete');\r\n\t\t\t\t// save new caret position\r\n\t\t\t\tbase.saveCaret();\r\n\t\t\t} else {\r\n\t\t\t\t// the script looks for the '\\b' string and initiates a backspace\r\n\t\t\t\tbase.insertText('\\b');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcancel: function (base) {\r\n\t\t\tbase.close();\r\n\t\t\treturn false; // return false prevents further processing\r\n\t\t},\r\n\t\tclear: function (base) {\r\n\t\t\tbase.$preview[base.isContentEditable ? 'text' : 'val']('');\r\n\t\t\tif (base.$decBtn.length) {\r\n\t\t\t\tbase.checkDecimal();\r\n\t\t\t}\r\n\t\t},\r\n\t\tcombo: function (base) {\r\n\t\t\tvar o = base.options,\r\n\t\t\t\tc = !o.useCombos,\r\n\t\t\t\t$combo = base.$keyboard.find('.' + $keyboard.css.keyPrefix + 'combo');\r\n\t\t\to.useCombos = c;\r\n\t\t\t$combo\r\n\t\t\t\t.toggleClass(o.css.buttonActive, c)\r\n\t\t\t\t// update combo key state\r\n\t\t\t\t.attr('title', $combo.attr('data-title') + ' (' + o.display[c ? 'active' : 'disabled'] + ')');\r\n\t\t\tif (c) {\r\n\t\t\t\tbase.checkCombos();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tdec: function (base) {\r\n\t\t\tbase.insertText((base.decimal) ? '.' : ',');\r\n\t\t},\r\n\t\tdel: function (base) {\r\n\t\t\tif (base.isContentEditable) {\r\n\t\t\t\tbase.execCommand('forwardDelete');\r\n\t\t\t} else {\r\n\t\t\t\t// the script looks for the '{d}' string and initiates a delete\r\n\t\t\t\tbase.insertText('{d}');\r\n\t\t\t}\r\n\t\t},\r\n\t\t// resets to base keyset (deprecated because \"default\" is a reserved word)\r\n\t\t'default': function (base) {\r\n\t\t\tbase.shiftActive = base.altActive = base.metaActive = false;\r\n\t\t\tbase.showSet();\r\n\t\t},\r\n\t\t// el is the pressed key (button) object; it is null when the real keyboard enter is pressed\r\n\t\tenter: function (base, el, e) {\r\n\t\t\tvar o = base.options;\r\n\t\t\t// shift+enter in textareas\r\n\t\t\tif (e.shiftKey) {\r\n\t\t\t\t// textarea, input & contenteditable - enterMod + shift + enter = accept,\r\n\t\t\t\t//  then go to prev; base.switchInput(goToNext, autoAccept)\r\n\t\t\t\t// textarea & input - shift + enter = accept (no navigation)\r\n\t\t\t\treturn (o.enterNavigation) ? base.switchInput(!e[o.enterMod], true) : base.close(true);\r\n\t\t\t}\r\n\t\t\t// input only - enterMod + enter to navigate\r\n\t\t\tif (o.enterNavigation && (!base.isTextArea || e[o.enterMod])) {\r\n\t\t\t\treturn base.switchInput(!e[o.enterMod], o.autoAccept ? 'true' : false);\r\n\t\t\t}\r\n\t\t\t// pressing virtual enter button inside of a textarea - add a carriage return\r\n\t\t\t// e.target is span when clicking on text and button at other times\r\n\t\t\tif (base.isTextArea && $(e.target).closest('button').length) {\r\n\t\t\t\t// IE8 fix (space + \\n) - fixes #71 thanks Blookie!\r\n\t\t\t\tbase.insertText(($keyboard.msie ? ' ' : '') + '\\n');\r\n\t\t\t}\r\n\t\t\tif (base.isContentEditable && !o.enterNavigation) {\r\n\t\t\t\tbase.execCommand('insertHTML', '<div><br class=\"' + $keyboard.css.divWrapperCE + '\"></div>');\r\n\t\t\t\t// Using backspace on wrapped BRs will now shift the textnode inside of the wrapped BR\r\n\t\t\t\t// Although not ideal, the caret is moved after the block - see the wiki page for\r\n\t\t\t\t// more details: https://github.com/Mottie/Keyboard/wiki/Contenteditable#limitations\r\n\t\t\t\t// move caret after a delay to allow rendering of HTML\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t$keyboard.keyaction.right(base);\r\n\t\t\t\t\tbase.saveCaret();\r\n\t\t\t\t}, 0);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// caps lock key\r\n\t\tlock: function (base) {\r\n\t\t\tbase.last.keyset[0] = base.shiftActive = base.capsLock = !base.capsLock;\r\n\t\t\tbase.showSet();\r\n\t\t},\r\n\t\tleft: function (base) {\r\n\t\t\tvar p = $keyboard.caret(base.$preview);\r\n\t\t\tif (p.start - 1 >= 0) {\r\n\t\t\t\t// move both start and end of caret (prevents text selection) & save caret position\r\n\t\t\t\tbase.last.start = base.last.end = p.start - 1;\r\n\t\t\t\t$keyboard.caret(base.$preview, base.last);\r\n\t\t\t\tbase.setScroll();\r\n\t\t\t}\r\n\t\t},\r\n\t\tmeta: function (base, el) {\r\n\t\t\tvar $el = $(el);\r\n\t\t\tbase.metaActive = !$el.hasClass(base.options.css.buttonActive);\r\n\t\t\tbase.showSet($el.attr('data-name'));\r\n\t\t},\r\n\t\tnext: function (base) {\r\n\t\t\tbase.switchInput(true, base.options.autoAccept);\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t// same as 'default' - resets to base keyset\r\n\t\tnormal: function (base) {\r\n\t\t\tbase.shiftActive = base.altActive = base.metaActive = false;\r\n\t\t\tbase.showSet();\r\n\t\t},\r\n\t\tprev: function (base) {\r\n\t\t\tbase.switchInput(false, base.options.autoAccept);\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tright: function (base) {\r\n\t\t\tvar p = $keyboard.caret(base.$preview),\r\n\t\t\t\tlen = base.isContentEditable ? $keyboard.getEditableLength(base.el) : base.getValue().length;\r\n\t\t\tif (p.end + 1 <= len) {\r\n\t\t\t\t// move both start and end of caret to end position\r\n\t\t\t\t// (prevents text selection) && save caret position\r\n\t\t\t\tbase.last.start = base.last.end = p.end + 1;\r\n\t\t\t\t$keyboard.caret(base.$preview, base.last);\r\n\t\t\t\tbase.setScroll();\r\n\t\t\t}\r\n\t\t},\r\n\t\tshift: function (base) {\r\n\t\t\tbase.last.keyset[0] = base.shiftActive = !base.shiftActive;\r\n\t\t\tbase.showSet();\r\n\t\t},\r\n\t\tsign: function (base) {\r\n\t\t\tvar signRegex = base.decimal ? /^[+-]?\\d*\\.?\\d*$/ : /^[+-]?\\d*,?\\d*$/;\r\n\t\t\tif (signRegex.test(base.getValue())) {\r\n\t\t\t\tvar caret,\r\n\t\t\t\t\tp = $keyboard.caret(base.$preview),\r\n\t\t\t\t\tval = base.getValue(),\r\n\t\t\t\t\tlen = base.isContentEditable ? $keyboard.getEditableLength(base.el) : val.length;\r\n\t\t\t\tbase.setValue(val * -1);\r\n\t\t\t\tcaret = len - val.length;\r\n\t\t\t\tbase.last.start = p.start + caret;\r\n\t\t\t\tbase.last.end = p.end + caret;\r\n\t\t\t\t$keyboard.caret(base.$preview, base.last);\r\n\t\t\t\tbase.setScroll();\r\n\t\t\t}\r\n\t\t},\r\n\t\tspace: function (base) {\r\n\t\t\tbase.insertText(' ');\r\n\t\t},\r\n\t\ttab: function (base) {\r\n\t\t\tvar o = base.options;\r\n\t\t\tif (!base.isTextArea) {\r\n\t\t\t\tif (o.tabNavigation) {\r\n\t\t\t\t\treturn base.switchInput(!base.shiftActive, true);\r\n\t\t\t\t} else if (base.isInput) {\r\n\t\t\t\t\t// ignore tab key in input\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbase.insertText('\\t');\r\n\t\t},\r\n\t\ttoggle: function (base) {\r\n\t\t\tbase.enabled = !base.enabled;\r\n\t\t\tbase.toggle();\r\n\t\t},\r\n\t\t// *** Special action keys: NBSP & zero-width characters ***\r\n\t\t// Non-breaking space\r\n\t\tNBSP: '\\u00a0',\r\n\t\t// zero width space\r\n\t\tZWSP: '\\u200b',\r\n\t\t// Zero width non-joiner\r\n\t\tZWNJ: '\\u200c',\r\n\t\t// Zero width joiner\r\n\t\tZWJ: '\\u200d',\r\n\t\t// Left-to-right Mark\r\n\t\tLRM: '\\u200e',\r\n\t\t// Right-to-left Mark\r\n\t\tRLM: '\\u200f'\r\n\t};\r\n\r\n\t// Default keyboard layouts\r\n\t$keyboard.builtLayouts = {};\r\n\t$keyboard.layouts = {\r\n\t\t'alpha': {\r\n\t\t\t'normal': [\r\n\t\t\t\t'` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\r\n\t\t\t\t'{tab} a b c d e f g h i j [ ] \\\\',\r\n\t\t\t\t'k l m n o p q r s ; \\' {enter}',\r\n\t\t\t\t'{shift} t u v w x y z , . / {shift}',\r\n\t\t\t\t'{accept} {space} {cancel}'\r\n\t\t\t],\r\n\t\t\t'shift': [\r\n\t\t\t\t'~ ! @ # $ % ^ & * ( ) _ + {bksp}',\r\n\t\t\t\t'{tab} A B C D E F G H I J { } |',\r\n\t\t\t\t'K L M N O P Q R S : \" {enter}',\r\n\t\t\t\t'{shift} T U V W X Y Z < > ? {shift}',\r\n\t\t\t\t'{accept} {space} {cancel}'\r\n\t\t\t]\r\n\t\t},\r\n\t\t'qwerty': {\r\n\t\t\t'normal': [\r\n\t\t\t\t'` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\r\n\t\t\t\t'{tab} q w e r t y u i o p [ ] \\\\',\r\n\t\t\t\t'a s d f g h j k l ; \\' {enter}',\r\n\t\t\t\t'{shift} z x c v b n m , . / {shift}',\r\n\t\t\t\t'{accept} {space} {cancel}'\r\n\t\t\t],\r\n\t\t\t'shift': [\r\n\t\t\t\t'~ ! @ # $ % ^ & * ( ) _ + {bksp}',\r\n\t\t\t\t'{tab} Q W E R T Y U I O P { } |',\r\n\t\t\t\t'A S D F G H J K L : \" {enter}',\r\n\t\t\t\t'{shift} Z X C V B N M < > ? {shift}',\r\n\t\t\t\t'{accept} {space} {cancel}'\r\n\t\t\t]\r\n\t\t},\r\n\t\t'international': {\r\n\t\t\t'normal': [\r\n\t\t\t\t'` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\r\n\t\t\t\t'{tab} q w e r t y u i o p [ ] \\\\',\r\n\t\t\t\t'a s d f g h j k l ; \\' {enter}',\r\n\t\t\t\t'{shift} z x c v b n m , . / {shift}',\r\n\t\t\t\t'{accept} {alt} {space} {alt} {cancel}'\r\n\t\t\t],\r\n\t\t\t'shift': [\r\n\t\t\t\t'~ ! @ # $ % ^ & * ( ) _ + {bksp}',\r\n\t\t\t\t'{tab} Q W E R T Y U I O P { } |',\r\n\t\t\t\t'A S D F G H J K L : \" {enter}',\r\n\t\t\t\t'{shift} Z X C V B N M < > ? {shift}',\r\n\t\t\t\t'{accept} {alt} {space} {alt} {cancel}'\r\n\t\t\t],\r\n\t\t\t'alt': [\r\n\t\t\t\t'~ \\u00a1 \\u00b2 \\u00b3 \\u00a4 \\u20ac \\u00bc \\u00bd \\u00be \\u2018 \\u2019 \\u00a5 \\u00d7 {bksp}',\r\n\t\t\t\t'{tab} \\u00e4 \\u00e5 \\u00e9 \\u00ae \\u00fe \\u00fc \\u00fa \\u00ed \\u00f3 \\u00f6 \\u00ab \\u00bb \\u00ac',\r\n\t\t\t\t'\\u00e1 \\u00df \\u00f0 f g h j k \\u00f8 \\u00b6 \\u00b4 {enter}',\r\n\t\t\t\t'{shift} \\u00e6 x \\u00a9 v b \\u00f1 \\u00b5 \\u00e7 > \\u00bf {shift}',\r\n\t\t\t\t'{accept} {alt} {space} {alt} {cancel}'\r\n\t\t\t],\r\n\t\t\t'alt-shift': [\r\n\t\t\t\t'~ \\u00b9 \\u00b2 \\u00b3 \\u00a3 \\u20ac \\u00bc \\u00bd \\u00be \\u2018 \\u2019 \\u00a5 \\u00f7 {bksp}',\r\n\t\t\t\t'{tab} \\u00c4 \\u00c5 \\u00c9 \\u00ae \\u00de \\u00dc \\u00da \\u00cd \\u00d3 \\u00d6 \\u00ab \\u00bb \\u00a6',\r\n\t\t\t\t'\\u00c4 \\u00a7 \\u00d0 F G H J K \\u00d8 \\u00b0 \\u00a8 {enter}',\r\n\t\t\t\t'{shift} \\u00c6 X \\u00a2 V B \\u00d1 \\u00b5 \\u00c7 . \\u00bf {shift}',\r\n\t\t\t\t'{accept} {alt} {space} {alt} {cancel}'\r\n\t\t\t]\r\n\t\t},\r\n\t\t'colemak': {\r\n\t\t\t'normal': [\r\n\t\t\t\t'` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\r\n\t\t\t\t'{tab} q w f p g j l u y ; [ ] \\\\',\r\n\t\t\t\t'{bksp} a r s t d h n e i o \\' {enter}',\r\n\t\t\t\t'{shift} z x c v b k m , . / {shift}',\r\n\t\t\t\t'{accept} {space} {cancel}'\r\n\t\t\t],\r\n\t\t\t'shift': [\r\n\t\t\t\t'~ ! @ # $ % ^ & * ( ) _ + {bksp}',\r\n\t\t\t\t'{tab} Q W F P G J L U Y : { } |',\r\n\t\t\t\t'{bksp} A R S T D H N E I O \" {enter}',\r\n\t\t\t\t'{shift} Z X C V B K M < > ? {shift}',\r\n\t\t\t\t'{accept} {space} {cancel}'\r\n\t\t\t]\r\n\t\t},\r\n\t\t'dvorak': {\r\n\t\t\t'normal': [\r\n\t\t\t\t'` 1 2 3 4 5 6 7 8 9 0 [ ] {bksp}',\r\n\t\t\t\t'{tab} \\' , . p y f g c r l / = \\\\',\r\n\t\t\t\t'a o e u i d h t n s - {enter}',\r\n\t\t\t\t'{shift} ; q j k x b m w v z {shift}',\r\n\t\t\t\t'{accept} {space} {cancel}'\r\n\t\t\t],\r\n\t\t\t'shift': [\r\n\t\t\t\t'~ ! @ # $ % ^ & * ( ) { } {bksp}',\r\n\t\t\t\t'{tab} \" < > P Y F G C R L ? + |',\r\n\t\t\t\t'A O E U I D H T N S _ {enter}',\r\n\t\t\t\t'{shift} : Q J K X B M W V Z {shift}',\r\n\t\t\t\t'{accept} {space} {cancel}'\r\n\t\t\t]\r\n\t\t},\r\n\t\t'num': {\r\n\t\t\t'normal': [\r\n\t\t\t\t'= ( ) {b}',\r\n\t\t\t\t'{clear} / * -',\r\n\t\t\t\t'7 8 9 +',\r\n\t\t\t\t'4 5 6 {sign}',\r\n\t\t\t\t'1 2 3 %',\r\n\t\t\t\t'0 {dec} {a} {c}'\r\n\t\t\t]\r\n\t\t}\r\n\t};\r\n\r\n\t$keyboard.language = {\r\n\t\ten: {\r\n\t\t\tdisplay: {\r\n\t\t\t\t// check mark - same action as accept\r\n\t\t\t\t'a': '\\u2714:Accept (Shift+Enter)',\r\n\t\t\t\t'accept': 'Accept:Accept (Shift+Enter)',\r\n\t\t\t\t// other alternatives \\u2311\r\n\t\t\t\t'alt': 'Alt:\\u2325 AltGr',\r\n\t\t\t\t// Left arrow (same as &larr;)\r\n\t\t\t\t'b': '\\u232b:Backspace',\r\n\t\t\t\t'bksp': 'Bksp:Backspace',\r\n\t\t\t\t// big X, close - same action as cancel\r\n\t\t\t\t'c': '\\u2716:Cancel (Esc)',\r\n\t\t\t\t'cancel': 'Cancel:Cancel (Esc)',\r\n\t\t\t\t// clear num pad\r\n\t\t\t\t'clear': 'C:Clear',\r\n\t\t\t\t'combo': '\\u00f6:Toggle Combo Keys',\r\n\t\t\t\t// decimal point for num pad (optional), change '.' to ',' for European format\r\n\t\t\t\t'dec': '.:Decimal',\r\n\t\t\t\t// down, then left arrow - enter symbol\r\n\t\t\t\t'e': '\\u23ce:Enter',\r\n\t\t\t\t'empty': '\\u00a0',\r\n\t\t\t\t'enter': 'Enter:Enter \\u23ce',\r\n\t\t\t\t// left arrow (move caret)\r\n\t\t\t\t'left': '\\u2190',\r\n\t\t\t\t// caps lock\r\n\t\t\t\t'lock': 'Lock:\\u21ea Caps Lock',\r\n\t\t\t\t'next': 'Next \\u21e8',\r\n\t\t\t\t'prev': '\\u21e6 Prev',\r\n\t\t\t\t// right arrow (move caret)\r\n\t\t\t\t'right': '\\u2192',\r\n\t\t\t\t// thick hollow up arrow\r\n\t\t\t\t's': '\\u21e7:Shift',\r\n\t\t\t\t'shift': 'Shift:Shift',\r\n\t\t\t\t// +/- sign for num pad\r\n\t\t\t\t'sign': '\\u00b1:Change Sign',\r\n\t\t\t\t'space': '\\u00a0:Space',\r\n\t\t\t\t// right arrow to bar (used since this virtual keyboard works with one directional tabs)\r\n\t\t\t\t't': '\\u21e5:Tab',\r\n\t\t\t\t// \\u21b9 is the true tab symbol (left & right arrows)\r\n\t\t\t\t'tab': '\\u21e5 Tab:Tab',\r\n\t\t\t\t// replaced by an image\r\n\t\t\t\t'toggle': ' ',\r\n\r\n\t\t\t\t// added to titles of keys\r\n\t\t\t\t// accept key status when acceptValid:true\r\n\t\t\t\t'valid': 'valid',\r\n\t\t\t\t'invalid': 'invalid',\r\n\t\t\t\t// combo key states\r\n\t\t\t\t'active': 'active',\r\n\t\t\t\t'disabled': 'disabled'\r\n\t\t\t},\r\n\r\n\t\t\t// Message added to the key title while hovering, if the mousewheel plugin exists\r\n\t\t\twheelMessage: 'Use mousewheel to see other keys',\r\n\r\n\t\t\tcomboRegex: /([`\\'~\\^\\\"ao])([a-z])/mig,\r\n\t\t\tcombos: {\r\n\t\t\t\t// grave\r\n\t\t\t\t'`': { a: '\\u00e0', A: '\\u00c0', e: '\\u00e8', E: '\\u00c8', i: '\\u00ec', I: '\\u00cc', o: '\\u00f2',\r\n\t\t\t\t\t\tO: '\\u00d2', u: '\\u00f9', U: '\\u00d9', y: '\\u1ef3', Y: '\\u1ef2' },\r\n\t\t\t\t// acute & cedilla\r\n\t\t\t\t\"'\": { a: '\\u00e1', A: '\\u00c1', e: '\\u00e9', E: '\\u00c9', i: '\\u00ed', I: '\\u00cd', o: '\\u00f3',\r\n\t\t\t\t\t\tO: '\\u00d3', u: '\\u00fa', U: '\\u00da', y: '\\u00fd', Y: '\\u00dd' },\r\n\t\t\t\t// umlaut/trema\r\n\t\t\t\t'\"': { a: '\\u00e4', A: '\\u00c4', e: '\\u00eb', E: '\\u00cb', i: '\\u00ef', I: '\\u00cf', o: '\\u00f6',\r\n\t\t\t\t\t\tO: '\\u00d6', u: '\\u00fc', U: '\\u00dc', y: '\\u00ff', Y: '\\u0178' },\r\n\t\t\t\t// circumflex\r\n\t\t\t\t'^': { a: '\\u00e2', A: '\\u00c2', e: '\\u00ea', E: '\\u00ca', i: '\\u00ee', I: '\\u00ce', o: '\\u00f4',\r\n\t\t\t\t\t\tO: '\\u00d4', u: '\\u00fb', U: '\\u00db', y: '\\u0177', Y: '\\u0176' },\r\n\t\t\t\t// tilde\r\n\t\t\t\t'~': { a: '\\u00e3', A: '\\u00c3', e: '\\u1ebd', E: '\\u1ebc', i: '\\u0129', I: '\\u0128', o: '\\u00f5',\r\n\t\t\t\t\t\tO: '\\u00d5', u: '\\u0169', U: '\\u0168', y: '\\u1ef9', Y: '\\u1ef8', n: '\\u00f1', N: '\\u00d1' }\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t$keyboard.defaultOptions = {\r\n\t\t// set this to ISO 639-1 language code to override language set by the layout\r\n\t\t// http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\r\n\t\t// language defaults to 'en' if not found\r\n\t\tlanguage: null,\r\n\t\trtl: false,\r\n\r\n\t\t// *** choose layout & positioning ***\r\n\t\tlayout: 'qwerty',\r\n\t\tcustomLayout: null,\r\n\r\n\t\tposition: {\r\n\t\t\t// optional - null (attach to input/textarea) or a jQuery object (attach elsewhere)\r\n\t\t\tof: null,\r\n\t\t\tmy: 'center top',\r\n\t\t\tat: 'center top',\r\n\t\t\t// used when 'usePreview' is false (centers the keyboard at the bottom of the input/textarea)\r\n\t\t\tat2: 'center bottom'\r\n\t\t},\r\n\r\n\t\t// allow jQuery position utility to reposition the keyboard on window resize\r\n\t\treposition: true,\r\n\r\n\t\t// preview added above keyboard if true, original input/textarea used if false\r\n\t\tusePreview: true,\r\n\r\n\t\t// if true, the keyboard will always be visible\r\n\t\talwaysOpen: false,\r\n\r\n\t\t// give the preview initial focus when the keyboard becomes visible\r\n\t\tinitialFocus: true,\r\n\r\n\t\t// avoid changing the focus (hardware keyboard probably won't work)\r\n\t\tnoFocus: false,\r\n\r\n\t\t// if true, keyboard will remain open even if the input loses focus, but closes on escape\r\n\t\t// or when another keyboard opens.\r\n\t\tstayOpen: false,\r\n\r\n\t\t// Prevents the keyboard from closing when the user clicks or presses outside the keyboard\r\n\t\t// the `autoAccept` option must also be set to true when this option is true or changes are lost\r\n\t\tuserClosed: false,\r\n\r\n\t\t// if true, keyboard will not close if you press escape.\r\n\t\tignoreEsc: false,\r\n\r\n\t\t// if true, keyboard will only closed on click event instead of mousedown and touchstart\r\n\t\tcloseByClickEvent: false,\r\n\r\n\t\tcss: {\r\n\t\t\t// input & preview\r\n\t\t\tinput: 'ui-widget-content ui-corner-all',\r\n\t\t\t// keyboard container\r\n\t\t\tcontainer: 'ui-widget-content ui-widget ui-corner-all ui-helper-clearfix',\r\n\t\t\t// keyboard container extra class (same as container, but separate)\r\n\t\t\tpopup: '',\r\n\t\t\t// default state\r\n\t\t\tbuttonDefault: 'ui-state-default ui-corner-all',\r\n\t\t\t// hovered button\r\n\t\t\tbuttonHover: 'ui-state-hover',\r\n\t\t\t// Action keys (e.g. Accept, Cancel, Tab, etc); this replaces 'actionClass' option\r\n\t\t\tbuttonAction: 'ui-state-active',\r\n\t\t\t// Active keys (e.g. shift down, meta keyset active, combo keys active)\r\n\t\t\tbuttonActive: 'ui-state-active',\r\n\t\t\t// used when disabling the decimal button {dec} when a decimal exists in the input area\r\n\t\t\tbuttonDisabled: 'ui-state-disabled',\r\n\t\t\tbuttonEmpty: 'ui-keyboard-empty'\r\n\t\t},\r\n\r\n\t\t// *** Useability ***\r\n\t\t// Auto-accept content when clicking outside the keyboard (popup will close)\r\n\t\tautoAccept: false,\r\n\t\t// Auto-accept content even if the user presses escape (only works if `autoAccept` is `true`)\r\n\t\tautoAcceptOnEsc: false,\r\n\r\n\t\t// Prevents direct input in the preview window when true\r\n\t\tlockInput: false,\r\n\r\n\t\t// Prevent keys not in the displayed keyboard from being typed in\r\n\t\trestrictInput: false,\r\n\t\t// Additional allowed characters while restrictInput is true\r\n\t\trestrictInclude: '', // e.g. 'a b foo \\ud83d\\ude38'\r\n\r\n\t\t// Check input against validate function, if valid the accept button gets a class name of\r\n\t\t// 'ui-keyboard-valid-input'. If invalid, the accept button gets a class name of\r\n\t\t// 'ui-keyboard-invalid-input'\r\n\t\tacceptValid: false,\r\n\t\t// Auto-accept when input is valid; requires `acceptValid` set `true` & validate callback\r\n\t\tautoAcceptOnValid: false,\r\n\t\t// Check validation on keyboard initialization. If false, the \"Accept\" key state (color)\r\n\t\t// will not change to show if the content is valid, or not\r\n\t\tcheckValidOnInit: true,\r\n\r\n\t\t// if acceptValid is true & the validate function returns a false, this option will cancel\r\n\t\t// a keyboard close only after the accept button is pressed\r\n\t\tcancelClose: true,\r\n\r\n\t\t// tab to go to next, shift-tab for previous (default behavior)\r\n\t\ttabNavigation: false,\r\n\r\n\t\t// enter for next input; shift+enter accepts content & goes to next\r\n\t\t// shift + 'enterMod' + enter ('enterMod' is the alt as set below) will accept content and go\r\n\t\t// to previous in a textarea\r\n\t\tenterNavigation: false,\r\n\t\t// mod key options: 'ctrlKey', 'shiftKey', 'altKey', 'metaKey' (MAC only)\r\n\t\tenterMod: 'altKey', // alt-enter to go to previous; shift-alt-enter to accept & go to previous\r\n\r\n\t\t// if true, the next button will stop on the last keyboard input/textarea; prev button stops at first\r\n\t\t// if false, the next button will wrap to target the first input/textarea; prev will go to the last\r\n\t\tstopAtEnd: true,\r\n\r\n\t\t// Set this to append the keyboard after the input/textarea (appended to the input/textarea parent).\r\n\t\t// This option works best when the input container doesn't have a set width & when the 'tabNavigation'\r\n\t\t// option is true.\r\n\t\tappendLocally: false,\r\n\t\t// When appendLocally is false, the keyboard will be appended to this object\r\n\t\tappendTo: 'body',\r\n\r\n\t\t// Wrap all <br>s inside of a contenteditable in a div; without wrapping, the caret\r\n\t\t// position will not be accurate\r\n\t\twrapBRs: true,\r\n\r\n\t\t// If false, the shift key will remain active until the next key is (mouse) clicked on; if true it will\r\n\t\t// stay active until pressed again\r\n\t\tstickyShift: true,\r\n\r\n\t\t// Prevent pasting content into the area\r\n\t\tpreventPaste: false,\r\n\r\n\t\t// caret placed at the end of any text when keyboard becomes visible\r\n\t\tcaretToEnd: false,\r\n\r\n\t\t// caret stays this many pixels from the edge of the input while scrolling left/right;\r\n\t\t// use \"c\" or \"center\" to center the caret while scrolling\r\n\t\tscrollAdjustment: 10,\r\n\r\n\t\t// Set the max number of characters allowed in the input, setting it to false disables this option\r\n\t\tmaxLength: false,\r\n\t\t// allow inserting characters @ caret when maxLength is set\r\n\t\tmaxInsert: true,\r\n\r\n\t\t// Mouse repeat delay - when clicking/touching a virtual keyboard key, after this delay the key will\r\n\t\t// start repeating\r\n\t\trepeatDelay: 500,\r\n\r\n\t\t// Mouse repeat rate - after the repeatDelay, this is the rate (characters per second) at which the\r\n\t\t// key is repeated Added to simulate holding down a real keyboard key and having it repeat. I haven't\r\n\t\t// calculated the upper limit of this rate, but it is limited to how fast the javascript can process\r\n\t\t// the keys. And for me, in Firefox, it's around 20.\r\n\t\trepeatRate: 20,\r\n\r\n\t\t// resets the keyboard to the default keyset when visible\r\n\t\tresetDefault: true,\r\n\r\n\t\t// Event (namespaced) on the input to reveal the keyboard. To disable it, just set it to ''.\r\n\t\topenOn: 'focus',\r\n\r\n\t\t// enable the keyboard on readonly inputs\r\n\t\tactiveOnReadonly: false,\r\n\r\n\t\t// Event (namepaced) for when the character is added to the input (clicking on the keyboard)\r\n\t\tkeyBinding: 'mousedown touchstart',\r\n\r\n\t\t// enable/disable mousewheel functionality\r\n\t\t// enabling still depends on the mousewheel plugin\r\n\t\tuseWheel: true,\r\n\r\n\t\t// combos (emulate dead keys : http://en.wikipedia.org/wiki/Keyboard_layout#US-International)\r\n\t\t// if user inputs `a the script converts it to à, ^o becomes ô, etc.\r\n\t\tuseCombos: true,\r\n\r\n\t\t/*\r\n\t\t\t// *** Methods ***\r\n\t\t\t// commenting these out to reduce the size of the minified version\r\n\t\t\t// Callbacks - attach a function to any of these callbacks as desired\r\n\t\t\tinitialized   : function(e, keyboard, el) {},\r\n\t\t\tbeforeVisible : function(e, keyboard, el) {},\r\n\t\t\tvisible       : function(e, keyboard, el) {},\r\n\t\t\tbeforeInsert  : function(e, keyboard, el, textToAdd) { return textToAdd; },\r\n\t\t\tchange        : function(e, keyboard, el) {},\r\n\t\t\tbeforeClose   : function(e, keyboard, el, accepted) {},\r\n\t\t\taccepted      : function(e, keyboard, el) {},\r\n\t\t\tcanceled      : function(e, keyboard, el) {},\r\n\t\t\trestricted    : function(e, keyboard, el) {},\r\n\t\t\thidden        : function(e, keyboard, el) {},\r\n\t\t\t// called instead of base.switchInput\r\n\t\t\tswitchInput   : function(keyboard, goToNext, isAccepted) {},\r\n\t\t\t// used if you want to create a custom layout or modify the built-in keyboard\r\n\t\t\tcreate        : function(keyboard) { return keyboard.buildKeyboard(); },\r\n\r\n\t\t\t// build key callback\r\n\t\t\tbuildKey : function( keyboard, data ) {\r\n\t\t\t\t/ *\r\n\t\t\t\tdata = {\r\n\t\t\t\t// READ ONLY\r\n\t\t\t\tisAction : [boolean] true if key is an action key\r\n\t\t\t\tname     : [string]  key class name suffix ( prefix = 'ui-keyboard-' );\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t may include decimal ascii value of character\r\n\t\t\t\tvalue    : [string]  text inserted (non-action keys)\r\n\t\t\t\ttitle    : [string]  title attribute of key\r\n\t\t\t\taction   : [string]  keyaction name\r\n\t\t\t\thtml     : [string]  HTML of the key; it includes a <span> wrapping the text\r\n\t\t\t\t// use to modify key HTML\r\n\t\t\t\t$key     : [object]  jQuery selector of key which is already appended to keyboard\r\n\t\t\t\t}\r\n\t\t\t\t* /\r\n\t\t\t\treturn data;\r\n\t\t\t},\r\n\t\t*/\r\n\r\n\t\t// this callback is called, if the acceptValid is true, and just before the 'beforeClose' to check\r\n\t\t// the value if the value is valid, return true and the keyboard will continue as it should\r\n\t\t// (close if not always open, etc). If the value is not valid, return false and clear the keyboard\r\n\t\t// value ( like this \"keyboard.$preview.val('');\" ), if desired. The validate function is called after\r\n\t\t// each input, the 'isClosing' value will be false; when the accept button is clicked,\r\n\t\t// 'isClosing' is true\r\n\t\tvalidate: function (/* keyboard, value, isClosing */) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t$keyboard.supportedInputTypes = [\r\n\t\t'text',\r\n\t\t'search',\r\n\t\t'url',\r\n\t\t'tel',\r\n\t\t'password'\r\n\t];\r\n\r\n\t// for checking combos\r\n\t$keyboard.comboRegex = /([`\\'~\\^\\\"ao])([a-z])/mig;\r\n\r\n\t// store current keyboard element; used by base.isCurrent()\r\n\t$keyboard.currentKeyboard = '';\r\n\r\n\t$('<!--[if lte IE 8]><script>jQuery(\"body\").addClass(\"oldie\");</script><![endif]--><!--[if IE]>' +\r\n\t\t\t'<script>jQuery(\"body\").addClass(\"ie\");</script><![endif]-->')\r\n\t\t.appendTo('body')\r\n\t\t.remove();\r\n\t$keyboard.msie = $('body').hasClass('oldie'); // Old IE flag, used for caret positioning\r\n\t$keyboard.allie = $('body').hasClass('ie');\r\n\r\n\t$keyboard.watermark = (typeof (document.createElement('input').placeholder) !== 'undefined');\r\n\r\n\t$keyboard.checkCaretSupport = function () {\r\n\t\tif (typeof $keyboard.checkCaret !== 'boolean') {\r\n\t\t\t// Check if caret position is saved when input is hidden or loses focus\r\n\t\t\t// (*cough* all versions of IE and I think Opera has/had an issue as well\r\n\t\t\tvar $temp = $('<div style=\"height:0px;width:0px;overflow:hidden;position:fixed;top:0;left:-100px;\">' +\r\n\t\t\t\t'<input type=\"text\" value=\"testing\"/></div>').prependTo('body'); // stop page scrolling\r\n\t\t\t$keyboard.caret($temp.find('input'), 3, 3);\r\n\t\t\t// Also save caret position of the input if it is locked\r\n\t\t\t$keyboard.checkCaret = $keyboard.caret($temp.find('input').hide().show()).start !== 3;\r\n\t\t\t$temp.remove();\r\n\t\t}\r\n\t\treturn $keyboard.checkCaret;\r\n\t};\r\n\r\n\t$keyboard.caret = function($el, param1, param2) {\r\n\t\tif (!$el || !$el.length || $el.is(':hidden') || $el.css('visibility') === 'hidden') {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t\tvar start, end, txt, pos,\r\n\t\t\tkb = $el.data( 'keyboard' ),\r\n\t\t\tnoFocus = kb && kb.options.noFocus,\r\n\t\t\tformEl = /(textarea|input)/i.test($el[0].nodeName);\r\n\t\tif (!noFocus) { $el.focus(); }\r\n\t\t// set caret position\r\n\t\tif (typeof param1 !== 'undefined') {\r\n\t\t\t// allow setting caret using ( $el, { start: x, end: y } )\r\n\t\t\tif (typeof param1 === 'object' && 'start' in param1 && 'end' in param1) {\r\n\t\t\t\tstart = param1.start;\r\n\t\t\t\tend = param1.end;\r\n\t\t\t} else if (typeof param2 === 'undefined') {\r\n\t\t\t\tparam2 = param1; // set caret using start position\r\n\t\t\t}\r\n\t\t\t// set caret using ( $el, start, end );\r\n\t\t\tif (typeof param1 === 'number' && typeof param2 === 'number') {\r\n\t\t\t\tstart = param1;\r\n\t\t\t\tend = param2;\r\n\t\t\t} else if ( param1 === 'start' ) {\r\n\t\t\t\tstart = end = 0;\r\n\t\t\t} else if ( typeof param1 === 'string' ) {\r\n\t\t\t\t// unknown string setting, move caret to end\r\n\t\t\t\tstart = end = 'end';\r\n\t\t\t}\r\n\r\n\t\t\t// *** SET CARET POSITION ***\r\n\t\t\t// modify the line below to adapt to other caret plugins\r\n\t\t\treturn formEl ?\r\n\t\t\t\t$el.caret( start, end, noFocus ) :\r\n\t\t\t\t$keyboard.setEditableCaret( $el, start, end );\r\n\t\t}\r\n\t\t// *** GET CARET POSITION ***\r\n\t\t// modify the line below to adapt to other caret plugins\r\n\t\tif (formEl) {\r\n\t\t\t// modify the line below to adapt to other caret plugins\r\n\t\t\tpos = $el.caret();\r\n\t\t} else {\r\n\t\t\t// contenteditable\r\n\t\t\tpos = $keyboard.getEditableCaret($el[0]);\r\n\t\t}\r\n\t\tstart = pos.start;\r\n\t\tend = pos.end;\r\n\r\n\t\t// *** utilities ***\r\n\t\ttxt = formEl && $el[0].value || $el.text() || '';\r\n\t\treturn {\r\n\t\t\tstart : start,\r\n\t\t\tend : end,\r\n\t\t\t// return selected text\r\n\t\t\ttext : txt.substring( start, end ),\r\n\t\t\t// return a replace selected string method\r\n\t\t\treplaceStr : function( str ) {\r\n\t\t\t\treturn txt.substring( 0, start ) + str + txt.substring( end, txt.length );\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t$keyboard.isTextNode = function(el) {\r\n\t\treturn el && el.nodeType === 3;\r\n\t};\r\n\r\n\t$keyboard.isBlock = function(el, node) {\r\n\t\tvar win = el.ownerDocument.defaultView;\r\n\t\tif (\r\n\t\t\tnode && node.nodeType === 1 && node !== el &&\r\n\t\t\twin.getComputedStyle(node).display === 'block'\r\n\t\t) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\r\n\t// Wrap all BR's inside of contenteditable\r\n\t$keyboard.wrapBRs = function(container) {\r\n\t\tvar $el = $(container).find('br:not(.' + $keyboard.css.divWrapperCE + ')');\r\n\t\tif ($el.length) {\r\n\t\t\t$.each($el, function(i, el) {\r\n\t\t\t\tvar len = el.parentNode.childNodes.length;\r\n\t\t\t\tif (\r\n\t\t\t\t\t// wrap BRs if not solo child\r\n\t\t\t\t\tlen !== 1 ||\r\n\t\t\t\t\t// Or if BR is wrapped by a span\r\n\t\t\t\t\tlen === 1 && !$keyboard.isBlock(container, el.parentNode)\r\n\t\t\t\t) {\r\n\t\t\t\t\t$(el).addClass($keyboard.css.divWrapperCE).wrap('<div>');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t$keyboard.getEditableCaret = function(container) {\r\n\t\tcontainer = $(container)[0];\r\n\t\tif (!container.isContentEditable) { return {}; }\r\n\t\tvar end, text,\r\n\t\t\toptions = ($(container).data('keyboard') || {}).options,\r\n\t\t\tdoc = container.ownerDocument,\r\n\t\t\trange = doc.getSelection().getRangeAt(0),\r\n\t\t\tresult = pathToNode(range.startContainer, range.startOffset),\r\n\t\t\tstart = result.position;\r\n\t\tif (options.wrapBRs !== false) {\r\n\t\t\t$keyboard.wrapBRs(container);\r\n\t\t}\r\n\t\tfunction pathToNode(endNode, offset) {\r\n\t\t\tvar node, adjust,\r\n\t\t\t\ttxt = '',\r\n\t\t\t\tdone = false,\r\n\t\t\t\tposition = 0,\r\n\t\t\t\tnodes = $.makeArray(container.childNodes);\r\n\r\n\t\t\tfunction checkBlock(val) {\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\tposition += val;\r\n\t\t\t\t\ttxt += options && options.replaceCR || '\\n';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile (!done && nodes.length) {\r\n\t\t\t\tnode = nodes.shift();\r\n\t\t\t\tif (node === endNode) {\r\n\t\t\t\t\tdone = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add one if previous sibling was a block node (div, p, etc)\r\n\t\t\t\tadjust = $keyboard.isBlock(container, node.previousSibling);\r\n\t\t\t\tcheckBlock(adjust);\r\n\r\n\t\t\t\tif ($keyboard.isTextNode(node)) {\r\n\t\t\t\t\tposition += done ? offset : node.length;\r\n\t\t\t\t\ttxt += node.textContent;\r\n\t\t\t\t\tif (done) {\r\n\t\t\t\t\t\treturn {position: position, text: txt};\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!done && node.childNodes) {\r\n\t\t\t\t\tnodes = $.makeArray(node.childNodes).concat(nodes);\r\n\t\t\t\t}\r\n\t\t\t\t// Add one if we're inside a block node (div, p, etc)\r\n\t\t\t\t// and previous sibling was a text node\r\n\t\t\t\tadjust = $keyboard.isTextNode(node.previousSibling) && $keyboard.isBlock(container, node);\r\n\t\t\t\tcheckBlock(adjust);\r\n\t\t\t}\r\n\t\t\treturn {position: position, text: txt};\r\n\t\t}\r\n\t\t// check of start and end are the same\r\n\t\tif (range.endContainer === range.startContainer && range.endOffset === range.startOffset) {\r\n\t\t\tend = start;\r\n\t\t\ttext = '';\r\n\t\t} else {\r\n\t\t\tresult = pathToNode(range.endContainer, range.endOffset);\r\n\t\t\tend = result.position;\r\n\t\t\ttext = result.text.substring(start, end);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\t\ttext: text\r\n\t\t};\r\n\t};\r\n\r\n\t$keyboard.getEditableLength = function(container) {\r\n\t\tvar result = $keyboard.setEditableCaret(container, 'getMax');\r\n\t\t// if not a number, the container is not a contenteditable element\r\n\t\treturn typeof result === 'number' ? result : null;\r\n\t};\r\n\r\n\t$keyboard.setEditableCaret = function(container, start, end) {\r\n\t\tcontainer = $(container)[0];\r\n\t\tif (!container.isContentEditable) { return {}; }\r\n\t\tvar doc = container.ownerDocument,\r\n\t\t\trange = doc.createRange(),\r\n\t\t\tsel = doc.getSelection(),\r\n\t\t\toptions = ($(container).data('keyboard') || {}).options,\r\n\t\t\ts = start,\r\n\t\t\te = end,\r\n\t\t\ttext = '',\r\n\t\t\tresult = findNode(start === 'getMax' ? 'end' : start);\r\n\t\tfunction findNode(offset) {\r\n\t\t\tif (offset === 'end') {\r\n\t\t\t\t// Set some value > content length; but return max\r\n\t\t\t\toffset = container.innerHTML.length;\r\n\t\t\t} else if (offset < 0) {\r\n\t\t\t\toffset = 0;\r\n\t\t\t}\r\n\t\t\tvar node, check,\r\n\t\t\t\ttxt = '',\r\n\t\t\t\tdone = false,\r\n\t\t\t\tposition = 0,\r\n\t\t\t\tlast = 0,\r\n\t\t\t\tmax = 0,\r\n\t\t\t\tnodes = $.makeArray(container.childNodes);\r\n\t\t\tfunction updateText(val) {\r\n\t\t\t\ttxt += val ? options && options.replaceCR || '\\n' : '';\r\n\t\t\t\treturn val > 0;\r\n\t\t\t}\r\n\t\t\tfunction checkDone(adj) {\r\n\t\t\t\tvar val = position + adj;\r\n\t\t\t\tlast = max;\r\n\t\t\t\tmax += adj;\r\n\t\t\t\tif (offset - val >= 0) {\r\n\t\t\t\t\tposition = val;\r\n\t\t\t\t\treturn offset - position <= 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn offset - val <= 0;\r\n\t\t\t}\r\n\t\t\twhile (!done && nodes.length) {\r\n\t\t\t\tnode = nodes.shift();\r\n\t\t\t\t// Add one if the previous sibling was a block node (div, p, etc)\r\n\t\t\t\tcheck = $keyboard.isBlock(container, node.previousSibling);\r\n\t\t\t\tif (updateText(check) && checkDone(check)) {\r\n\t\t\t\t\tdone = true;\r\n\t\t\t\t}\r\n\t\t\t\t// Add one if we're inside a block node (div, p, etc)\r\n\t\t\t\tcheck = $keyboard.isTextNode(node.previousSibling) && $keyboard.isBlock(container, node);\r\n\t\t\t\tif (updateText(check) && checkDone(check)) {\r\n\t\t\t\t\tdone = true;\r\n\t\t\t\t}\r\n\t\t\t\tif ($keyboard.isTextNode(node)) {\r\n\t\t\t\t\ttxt += node.textContent;\r\n\t\t\t\t\tif (checkDone(node.length)) {\r\n\t\t\t\t\t\tcheck = offset - position === 0 && position - last >= 1 ? node.length : offset - position;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tnode: node,\r\n\t\t\t\t\t\t\toffset: check,\r\n\t\t\t\t\t\t\tposition: offset,\r\n\t\t\t\t\t\t\ttext: txt\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!done && node.childNodes) {\r\n\t\t\t\t\tnodes = $.makeArray(node.childNodes).concat(nodes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn nodes.length ?\r\n\t\t\t\t{node: node, offset: offset - position, position: offset, text: txt} :\r\n\t\t\t\t// Offset is larger than content, return max\r\n\t\t\t\t{node: node, offset: node && node.length || 0, position: max, text: txt};\r\n\t\t}\r\n\t\tif (result.node) {\r\n\t\t\ts = result.position; // Adjust if start > content length\r\n\t\t\tif (start === 'getMax') {\r\n\t\t\t\treturn s;\r\n\t\t\t}\r\n\t\t\trange.setStart(result.node, result.offset);\r\n\t\t\t// Only find end if > start and is defined... this allows passing\r\n\t\t\t// setEditableCaret(el, 'end') or setEditableCaret(el, 10, 'end');\r\n\t\t\tif (typeof end !== 'undefined' && end !== start) {\r\n\t\t\t\tresult = findNode(end);\r\n\t\t\t}\r\n\t\t\tif (result.node) {\r\n\t\t\t\te = result.position; // Adjust if end > content length\r\n\t\t\t\trange.setEnd(result.node, result.offset);\r\n\t\t\t\ttext = s === e ? '' : result.text.substring(s, e);\r\n\t\t\t}\r\n\t\t\tsel.removeAllRanges();\r\n\t\t\tsel.addRange(range);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tstart: s,\r\n\t\t\tend: e,\r\n\t\t\ttext: text\r\n\t\t};\r\n\t};\r\n\r\n\t$keyboard.replaceContent = function (el, param) {\r\n\t\tel = $(el)[0];\r\n\t\tvar node, i, str,\r\n\t\t\ttype = typeof param,\r\n\t\t\tcaret = $keyboard.getEditableCaret(el).start,\r\n\t\t\tcharIndex = 0,\r\n\t\t\tnodeStack = [el];\r\n\t\twhile ((node = nodeStack.pop())) {\r\n\t\t\tif ($keyboard.isTextNode(node)) {\r\n\t\t\t\tif (type === 'function') {\r\n\t\t\t\t\tif (caret >= charIndex && caret <= charIndex + node.length) {\r\n\t\t\t\t\t\tnode.textContent = param(node.textContent);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (type === 'string') {\r\n\t\t\t\t\t// maybe not the best method, but it works for simple changes\r\n\t\t\t\t\tstr = param.substring(charIndex, charIndex + node.length);\r\n\t\t\t\t\tif (str !== node.textContent) {\r\n\t\t\t\t\t\tnode.textContent = str;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcharIndex += node.length;\r\n\t\t\t} else if (node && node.childNodes) {\r\n\t\t\t\ti = node.childNodes.length;\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\tnodeStack.push(node.childNodes[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\ti = $keyboard.getEditableCaret(el);\r\n\t\t$keyboard.setEditableCaret(el, i.start, i.start);\r\n\t};\r\n\r\n\t$.fn.keyboard = function (options) {\r\n\t\treturn this.each(function () {\r\n\t\t\tif (!$(this).data('keyboard')) {\r\n\t\t\t\t/*jshint nonew:false */\r\n\t\t\t\t(new $.keyboard(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t$.fn.getkeyboard = function () {\r\n\t\treturn this.data('keyboard');\r\n\t};\r\n\r\n\t/* Copyright (c) 2010 C. F., Wong (<a href=\"http://cloudgen.w0ng.hk\">Cloudgen Examplet Store</a>)\r\n\t * Licensed under the MIT License:\r\n\t * http://www.opensource.org/licenses/mit-license.php\r\n\t * Highly modified from the original\r\n\t */\r\n\r\n\t$.fn.caret = function (start, end, noFocus) {\r\n\t\tif (\r\n\t\t\ttypeof this[0] === 'undefined' ||\r\n\t\t\tthis.is(':hidden') ||\r\n\t\t\tthis.css('visibility') === 'hidden' ||\r\n\t\t\t!/(INPUT|TEXTAREA)/i.test(this[0].nodeName)\r\n\t\t) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar selRange, range, stored_range, txt, val,\r\n\t\t\t$el = this,\r\n\t\t\tel = $el[0],\r\n\t\t\tselection = el.ownerDocument.selection,\r\n\t\t\tsTop = el.scrollTop,\r\n\t\t\tss = false,\r\n\t\t\tsupportCaret = true;\r\n\t\ttry {\r\n\t\t\tss = 'selectionStart' in el;\r\n\t\t} catch (err) {\r\n\t\t\tsupportCaret = false;\r\n\t\t}\r\n\t\tif (supportCaret && typeof start !== 'undefined') {\r\n\t\t\tif (!/(email|number)/i.test(el.type)) {\r\n\t\t\t\tif (ss) {\r\n\t\t\t\t\tel.selectionStart = start;\r\n\t\t\t\t\tel.selectionEnd = end;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tselRange = el.createTextRange();\r\n\t\t\t\t\tselRange.collapse(true);\r\n\t\t\t\t\tselRange.moveStart('character', start);\r\n\t\t\t\t\tselRange.moveEnd('character', end - start);\r\n\t\t\t\t\tselRange.select();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// must be visible or IE8 crashes; IE9 in compatibility mode works fine - issue #56\r\n\t\t\tif (!noFocus && ($el.is(':visible') || $el.css('visibility') !== 'hidden')) {\r\n\t\t\t\tel.focus();\r\n\t\t\t}\r\n\t\t\tel.scrollTop = sTop;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif (/(email|number)/i.test(el.type)) {\r\n\t\t\t// fix suggested by raduanastase (https://github.com/Mottie/Keyboard/issues/105#issuecomment-40456535)\r\n\t\t\tstart = end = $el.val().length;\r\n\t\t} else if (ss) {\r\n\t\t\tstart = el.selectionStart;\r\n\t\t\tend = el.selectionEnd;\r\n\t\t} else if (selection) {\r\n\t\t\tif (el.nodeName.toUpperCase() === 'TEXTAREA') {\r\n\t\t\t\tval = $el.val();\r\n\t\t\t\trange = selection.createRange();\r\n\t\t\t\tstored_range = range.duplicate();\r\n\t\t\t\tstored_range.moveToElementText(el);\r\n\t\t\t\tstored_range.setEndPoint('EndToEnd', range);\r\n\t\t\t\t// thanks to the awesome comments in the rangy plugin\r\n\t\t\t\tstart = stored_range.text.replace(/\\r/g, '\\n').length;\r\n\t\t\t\tend = start + range.text.replace(/\\r/g, '\\n').length;\r\n\t\t\t} else {\r\n\t\t\t\tval = $el.val().replace(/\\r/g, '\\n');\r\n\t\t\t\trange = selection.createRange().duplicate();\r\n\t\t\t\trange.moveEnd('character', val.length);\r\n\t\t\t\tstart = (range.text === '' ? val.length : val.lastIndexOf(range.text));\r\n\t\t\t\trange = selection.createRange().duplicate();\r\n\t\t\t\trange.moveStart('character', -val.length);\r\n\t\t\t\tend = range.text.length;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// caret positioning not supported\r\n\t\t\tstart = end = (el.value || '').length;\r\n\t\t}\r\n\t\ttxt = (el.value || '');\r\n\t\treturn {\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\t\ttext: txt.substring(start, end),\r\n\t\t\treplace: function (str) {\r\n\t\t\t\treturn txt.substring(0, start) + str + txt.substring(end, txt.length);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn $keyboard;\r\n\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}